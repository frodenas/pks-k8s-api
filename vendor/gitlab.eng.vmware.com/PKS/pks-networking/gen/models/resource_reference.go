// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ResourceReference A weak reference to an NSX resource.
// swagger:model ResourceReference

type ResourceReference struct {

	// Target validity
	//
	// Will be set to false if the referenced NSX resource has been deleted.
	// Read Only: true
	IsValid *bool `json:"is_valid,omitempty"`

	// Target display name
	//
	// Display name of the NSX resource.
	// Read Only: true
	// Max Length: 255
	TargetDisplayName string `json:"target_display_name,omitempty"`

	// Target ID
	//
	// Identifier of the NSX resource.
	// Max Length: 64
	TargetID string `json:"target_id,omitempty"`

	// Target type
	//
	// Type of the NSX resource.
	// Max Length: 255
	TargetType string `json:"target_type,omitempty"`
}

/* polymorph ResourceReference is_valid false */

/* polymorph ResourceReference target_display_name false */

/* polymorph ResourceReference target_id false */

/* polymorph ResourceReference target_type false */

// Validate validates this resource reference
func (m *ResourceReference) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTargetDisplayName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTargetID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTargetType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResourceReference) validateTargetDisplayName(formats strfmt.Registry) error {

	if swag.IsZero(m.TargetDisplayName) { // not required
		return nil
	}

	if err := validate.MaxLength("target_display_name", "body", string(m.TargetDisplayName), 255); err != nil {
		return err
	}

	return nil
}

func (m *ResourceReference) validateTargetID(formats strfmt.Registry) error {

	if swag.IsZero(m.TargetID) { // not required
		return nil
	}

	if err := validate.MaxLength("target_id", "body", string(m.TargetID), 64); err != nil {
		return err
	}

	return nil
}

func (m *ResourceReference) validateTargetType(formats strfmt.Registry) error {

	if swag.IsZero(m.TargetType) { // not required
		return nil
	}

	if err := validate.MaxLength("target_type", "body", string(m.TargetType), 255); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ResourceReference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResourceReference) UnmarshalBinary(b []byte) error {
	var res ResourceReference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
