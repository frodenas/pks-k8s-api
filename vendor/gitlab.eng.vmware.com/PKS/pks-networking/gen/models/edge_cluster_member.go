// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EdgeClusterMember edge cluster member
// swagger:model EdgeClusterMember

type EdgeClusterMember struct {

	// description of edge cluster member
	//
	// description of edge cluster member
	Description string `json:"description,omitempty"`

	// display name of edge cluster member
	//
	// display name of edge cluster member
	DisplayName string `json:"display_name,omitempty"`

	// System generated index for cluster member
	//
	// System generated index for cluster member
	// Read Only: true
	MemberIndex int32 `json:"member_index,omitempty"`

	// UUID of edge transport node
	//
	// Identifier of the transport node backed by an Edge node
	// Required: true
	TransportNodeID *string `json:"transport_node_id"`
}

/* polymorph EdgeClusterMember description false */

/* polymorph EdgeClusterMember display_name false */

/* polymorph EdgeClusterMember member_index false */

/* polymorph EdgeClusterMember transport_node_id false */

// Validate validates this edge cluster member
func (m *EdgeClusterMember) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTransportNodeID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EdgeClusterMember) validateTransportNodeID(formats strfmt.Registry) error {

	if err := validate.Required("transport_node_id", "body", m.TransportNodeID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EdgeClusterMember) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EdgeClusterMember) UnmarshalBinary(b []byte) error {
	var res EdgeClusterMember
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
