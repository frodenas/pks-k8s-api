// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SwitchingProfileTypeIDEntry switching profile type Id entry
// swagger:model SwitchingProfileTypeIdEntry

type SwitchingProfileTypeIDEntry struct {

	// Supported switching profiles.
	Key string `json:"key,omitempty"`

	// key value
	// Required: true
	Value *string `json:"value"`
}

/* polymorph SwitchingProfileTypeIdEntry key false */

/* polymorph SwitchingProfileTypeIdEntry value false */

// Validate validates this switching profile type Id entry
func (m *SwitchingProfileTypeIDEntry) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKey(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var switchingProfileTypeIdEntryTypeKeyPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["QosSwitchingProfile","PortMirroringSwitchingProfile","IpDiscoverySwitchingProfile","SpoofGuardSwitchingProfile","SwitchSecuritySwitchingProfile","MacManagementSwitchingProfile"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		switchingProfileTypeIdEntryTypeKeyPropEnum = append(switchingProfileTypeIdEntryTypeKeyPropEnum, v)
	}
}

const (
	// SwitchingProfileTypeIDEntryKeyQosSwitchingProfile captures enum value "QosSwitchingProfile"
	SwitchingProfileTypeIDEntryKeyQosSwitchingProfile string = "QosSwitchingProfile"
	// SwitchingProfileTypeIDEntryKeyPortMirroringSwitchingProfile captures enum value "PortMirroringSwitchingProfile"
	SwitchingProfileTypeIDEntryKeyPortMirroringSwitchingProfile string = "PortMirroringSwitchingProfile"
	// SwitchingProfileTypeIDEntryKeyIPDiscoverySwitchingProfile captures enum value "IpDiscoverySwitchingProfile"
	SwitchingProfileTypeIDEntryKeyIPDiscoverySwitchingProfile string = "IpDiscoverySwitchingProfile"
	// SwitchingProfileTypeIDEntryKeySpoofGuardSwitchingProfile captures enum value "SpoofGuardSwitchingProfile"
	SwitchingProfileTypeIDEntryKeySpoofGuardSwitchingProfile string = "SpoofGuardSwitchingProfile"
	// SwitchingProfileTypeIDEntryKeySwitchSecuritySwitchingProfile captures enum value "SwitchSecuritySwitchingProfile"
	SwitchingProfileTypeIDEntryKeySwitchSecuritySwitchingProfile string = "SwitchSecuritySwitchingProfile"
	// SwitchingProfileTypeIDEntryKeyMacManagementSwitchingProfile captures enum value "MacManagementSwitchingProfile"
	SwitchingProfileTypeIDEntryKeyMacManagementSwitchingProfile string = "MacManagementSwitchingProfile"
)

// prop value enum
func (m *SwitchingProfileTypeIDEntry) validateKeyEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, switchingProfileTypeIdEntryTypeKeyPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SwitchingProfileTypeIDEntry) validateKey(formats strfmt.Registry) error {

	if swag.IsZero(m.Key) { // not required
		return nil
	}

	// value enum
	if err := m.validateKeyEnum("key", "body", m.Key); err != nil {
		return err
	}

	return nil
}

func (m *SwitchingProfileTypeIDEntry) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SwitchingProfileTypeIDEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SwitchingProfileTypeIDEntry) UnmarshalBinary(b []byte) error {
	var res SwitchingProfileTypeIDEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
