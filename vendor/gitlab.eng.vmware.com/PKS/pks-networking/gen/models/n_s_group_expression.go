// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NSGroupExpression Policy expression for NSGroup membership
//
// Policy expression for NSGroup membership
// swagger:model NSGroupExpression

type NSGroupExpression struct {

	// resource type
	// Required: true
	ResourceType *string `json:"resource_type"`
}

/* polymorph NSGroupExpression resource_type false */

// Validate validates this n s group expression
func (m *NSGroupExpression) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResourceType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var nSGroupExpressionTypeResourceTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NSGroupSimpleExpression","NSGroupComplexExpression","NSGroupTagExpression"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nSGroupExpressionTypeResourceTypePropEnum = append(nSGroupExpressionTypeResourceTypePropEnum, v)
	}
}

const (
	// NSGroupExpressionResourceTypeNSGroupSimpleExpression captures enum value "NSGroupSimpleExpression"
	NSGroupExpressionResourceTypeNSGroupSimpleExpression string = "NSGroupSimpleExpression"
	// NSGroupExpressionResourceTypeNSGroupComplexExpression captures enum value "NSGroupComplexExpression"
	NSGroupExpressionResourceTypeNSGroupComplexExpression string = "NSGroupComplexExpression"
	// NSGroupExpressionResourceTypeNSGroupTagExpression captures enum value "NSGroupTagExpression"
	NSGroupExpressionResourceTypeNSGroupTagExpression string = "NSGroupTagExpression"
)

// prop value enum
func (m *NSGroupExpression) validateResourceTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nSGroupExpressionTypeResourceTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NSGroupExpression) validateResourceType(formats strfmt.Registry) error {

	if err := validate.Required("resource_type", "body", m.ResourceType); err != nil {
		return err
	}

	// value enum
	if err := m.validateResourceTypeEnum("resource_type", "body", *m.ResourceType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NSGroupExpression) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NSGroupExpression) UnmarshalBinary(b []byte) error {
	var res NSGroupExpression
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
