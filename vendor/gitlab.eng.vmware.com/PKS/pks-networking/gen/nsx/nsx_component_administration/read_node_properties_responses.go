// Code generated by go-swagger; DO NOT EDIT.

package nsx_component_administration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// ReadNodePropertiesReader is a Reader for the ReadNodeProperties structure.
type ReadNodePropertiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadNodePropertiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewReadNodePropertiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewReadNodePropertiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewReadNodePropertiesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewReadNodePropertiesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewReadNodePropertiesPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewReadNodePropertiesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewReadNodePropertiesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadNodePropertiesOK creates a ReadNodePropertiesOK with default headers values
func NewReadNodePropertiesOK() *ReadNodePropertiesOK {
	return &ReadNodePropertiesOK{}
}

/*ReadNodePropertiesOK handles this case with default header values.

OK
*/
type ReadNodePropertiesOK struct {
	Payload *models.NodeProperties
}

func (o *ReadNodePropertiesOK) Error() string {
	return fmt.Sprintf("[GET /node][%d] readNodePropertiesOK  %+v", 200, o.Payload)
}

func (o *ReadNodePropertiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NodeProperties)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodePropertiesBadRequest creates a ReadNodePropertiesBadRequest with default headers values
func NewReadNodePropertiesBadRequest() *ReadNodePropertiesBadRequest {
	return &ReadNodePropertiesBadRequest{}
}

/*ReadNodePropertiesBadRequest handles this case with default header values.

Bad request
*/
type ReadNodePropertiesBadRequest struct {
	Payload *models.APIError
}

func (o *ReadNodePropertiesBadRequest) Error() string {
	return fmt.Sprintf("[GET /node][%d] readNodePropertiesBadRequest  %+v", 400, o.Payload)
}

func (o *ReadNodePropertiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodePropertiesForbidden creates a ReadNodePropertiesForbidden with default headers values
func NewReadNodePropertiesForbidden() *ReadNodePropertiesForbidden {
	return &ReadNodePropertiesForbidden{}
}

/*ReadNodePropertiesForbidden handles this case with default header values.

Operation forbidden
*/
type ReadNodePropertiesForbidden struct {
	Payload *models.APIError
}

func (o *ReadNodePropertiesForbidden) Error() string {
	return fmt.Sprintf("[GET /node][%d] readNodePropertiesForbidden  %+v", 403, o.Payload)
}

func (o *ReadNodePropertiesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodePropertiesNotFound creates a ReadNodePropertiesNotFound with default headers values
func NewReadNodePropertiesNotFound() *ReadNodePropertiesNotFound {
	return &ReadNodePropertiesNotFound{}
}

/*ReadNodePropertiesNotFound handles this case with default header values.

Resource not found
*/
type ReadNodePropertiesNotFound struct {
	Payload *models.APIError
}

func (o *ReadNodePropertiesNotFound) Error() string {
	return fmt.Sprintf("[GET /node][%d] readNodePropertiesNotFound  %+v", 404, o.Payload)
}

func (o *ReadNodePropertiesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodePropertiesPreconditionFailed creates a ReadNodePropertiesPreconditionFailed with default headers values
func NewReadNodePropertiesPreconditionFailed() *ReadNodePropertiesPreconditionFailed {
	return &ReadNodePropertiesPreconditionFailed{}
}

/*ReadNodePropertiesPreconditionFailed handles this case with default header values.

Precondition failed
*/
type ReadNodePropertiesPreconditionFailed struct {
	Payload *models.APIError
}

func (o *ReadNodePropertiesPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /node][%d] readNodePropertiesPreconditionFailed  %+v", 412, o.Payload)
}

func (o *ReadNodePropertiesPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodePropertiesInternalServerError creates a ReadNodePropertiesInternalServerError with default headers values
func NewReadNodePropertiesInternalServerError() *ReadNodePropertiesInternalServerError {
	return &ReadNodePropertiesInternalServerError{}
}

/*ReadNodePropertiesInternalServerError handles this case with default header values.

Internal server error
*/
type ReadNodePropertiesInternalServerError struct {
	Payload *models.APIError
}

func (o *ReadNodePropertiesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /node][%d] readNodePropertiesInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadNodePropertiesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodePropertiesServiceUnavailable creates a ReadNodePropertiesServiceUnavailable with default headers values
func NewReadNodePropertiesServiceUnavailable() *ReadNodePropertiesServiceUnavailable {
	return &ReadNodePropertiesServiceUnavailable{}
}

/*ReadNodePropertiesServiceUnavailable handles this case with default header values.

Service unavailable
*/
type ReadNodePropertiesServiceUnavailable struct {
	Payload *models.APIError
}

func (o *ReadNodePropertiesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /node][%d] readNodePropertiesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ReadNodePropertiesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
