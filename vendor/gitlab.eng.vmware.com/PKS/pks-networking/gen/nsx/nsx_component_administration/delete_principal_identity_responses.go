// Code generated by go-swagger; DO NOT EDIT.

package nsx_component_administration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// DeletePrincipalIdentityReader is a Reader for the DeletePrincipalIdentity structure.
type DeletePrincipalIdentityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePrincipalIdentityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeletePrincipalIdentityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeletePrincipalIdentityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeletePrincipalIdentityForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeletePrincipalIdentityNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewDeletePrincipalIdentityPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeletePrincipalIdentityInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeletePrincipalIdentityServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeletePrincipalIdentityOK creates a DeletePrincipalIdentityOK with default headers values
func NewDeletePrincipalIdentityOK() *DeletePrincipalIdentityOK {
	return &DeletePrincipalIdentityOK{}
}

/*DeletePrincipalIdentityOK handles this case with default header values.

OK
*/
type DeletePrincipalIdentityOK struct {
}

func (o *DeletePrincipalIdentityOK) Error() string {
	return fmt.Sprintf("[DELETE /trust-management/principal-identities/{principal-identity-id}][%d] deletePrincipalIdentityOK ", 200)
}

func (o *DeletePrincipalIdentityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePrincipalIdentityBadRequest creates a DeletePrincipalIdentityBadRequest with default headers values
func NewDeletePrincipalIdentityBadRequest() *DeletePrincipalIdentityBadRequest {
	return &DeletePrincipalIdentityBadRequest{}
}

/*DeletePrincipalIdentityBadRequest handles this case with default header values.

Bad request
*/
type DeletePrincipalIdentityBadRequest struct {
	Payload *models.APIError
}

func (o *DeletePrincipalIdentityBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /trust-management/principal-identities/{principal-identity-id}][%d] deletePrincipalIdentityBadRequest  %+v", 400, o.Payload)
}

func (o *DeletePrincipalIdentityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePrincipalIdentityForbidden creates a DeletePrincipalIdentityForbidden with default headers values
func NewDeletePrincipalIdentityForbidden() *DeletePrincipalIdentityForbidden {
	return &DeletePrincipalIdentityForbidden{}
}

/*DeletePrincipalIdentityForbidden handles this case with default header values.

Operation forbidden
*/
type DeletePrincipalIdentityForbidden struct {
	Payload *models.APIError
}

func (o *DeletePrincipalIdentityForbidden) Error() string {
	return fmt.Sprintf("[DELETE /trust-management/principal-identities/{principal-identity-id}][%d] deletePrincipalIdentityForbidden  %+v", 403, o.Payload)
}

func (o *DeletePrincipalIdentityForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePrincipalIdentityNotFound creates a DeletePrincipalIdentityNotFound with default headers values
func NewDeletePrincipalIdentityNotFound() *DeletePrincipalIdentityNotFound {
	return &DeletePrincipalIdentityNotFound{}
}

/*DeletePrincipalIdentityNotFound handles this case with default header values.

Resource not found
*/
type DeletePrincipalIdentityNotFound struct {
	Payload *models.APIError
}

func (o *DeletePrincipalIdentityNotFound) Error() string {
	return fmt.Sprintf("[DELETE /trust-management/principal-identities/{principal-identity-id}][%d] deletePrincipalIdentityNotFound  %+v", 404, o.Payload)
}

func (o *DeletePrincipalIdentityNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePrincipalIdentityPreconditionFailed creates a DeletePrincipalIdentityPreconditionFailed with default headers values
func NewDeletePrincipalIdentityPreconditionFailed() *DeletePrincipalIdentityPreconditionFailed {
	return &DeletePrincipalIdentityPreconditionFailed{}
}

/*DeletePrincipalIdentityPreconditionFailed handles this case with default header values.

Precondition failed
*/
type DeletePrincipalIdentityPreconditionFailed struct {
	Payload *models.APIError
}

func (o *DeletePrincipalIdentityPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /trust-management/principal-identities/{principal-identity-id}][%d] deletePrincipalIdentityPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeletePrincipalIdentityPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePrincipalIdentityInternalServerError creates a DeletePrincipalIdentityInternalServerError with default headers values
func NewDeletePrincipalIdentityInternalServerError() *DeletePrincipalIdentityInternalServerError {
	return &DeletePrincipalIdentityInternalServerError{}
}

/*DeletePrincipalIdentityInternalServerError handles this case with default header values.

Internal server error
*/
type DeletePrincipalIdentityInternalServerError struct {
	Payload *models.APIError
}

func (o *DeletePrincipalIdentityInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /trust-management/principal-identities/{principal-identity-id}][%d] deletePrincipalIdentityInternalServerError  %+v", 500, o.Payload)
}

func (o *DeletePrincipalIdentityInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePrincipalIdentityServiceUnavailable creates a DeletePrincipalIdentityServiceUnavailable with default headers values
func NewDeletePrincipalIdentityServiceUnavailable() *DeletePrincipalIdentityServiceUnavailable {
	return &DeletePrincipalIdentityServiceUnavailable{}
}

/*DeletePrincipalIdentityServiceUnavailable handles this case with default header values.

Service unavailable
*/
type DeletePrincipalIdentityServiceUnavailable struct {
	Payload *models.APIError
}

func (o *DeletePrincipalIdentityServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /trust-management/principal-identities/{principal-identity-id}][%d] deletePrincipalIdentityServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeletePrincipalIdentityServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
