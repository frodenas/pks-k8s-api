// Code generated by go-swagger; DO NOT EDIT.

package nsx_component_administration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// NewRegisterPrincipalIdentityParams creates a new RegisterPrincipalIdentityParams object
// with the default values initialized.
func NewRegisterPrincipalIdentityParams() *RegisterPrincipalIdentityParams {
	var ()
	return &RegisterPrincipalIdentityParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRegisterPrincipalIdentityParamsWithTimeout creates a new RegisterPrincipalIdentityParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRegisterPrincipalIdentityParamsWithTimeout(timeout time.Duration) *RegisterPrincipalIdentityParams {
	var ()
	return &RegisterPrincipalIdentityParams{

		timeout: timeout,
	}
}

// NewRegisterPrincipalIdentityParamsWithContext creates a new RegisterPrincipalIdentityParams object
// with the default values initialized, and the ability to set a context for a request
func NewRegisterPrincipalIdentityParamsWithContext(ctx context.Context) *RegisterPrincipalIdentityParams {
	var ()
	return &RegisterPrincipalIdentityParams{

		Context: ctx,
	}
}

// NewRegisterPrincipalIdentityParamsWithHTTPClient creates a new RegisterPrincipalIdentityParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRegisterPrincipalIdentityParamsWithHTTPClient(client *http.Client) *RegisterPrincipalIdentityParams {
	var ()
	return &RegisterPrincipalIdentityParams{
		HTTPClient: client,
	}
}

/*RegisterPrincipalIdentityParams contains all the parameters to send to the API endpoint
for the register principal identity operation typically these are written to a http.Request
*/
type RegisterPrincipalIdentityParams struct {

	/*PrincipalIdentity*/
	PrincipalIdentity *models.PrincipalIdentity

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the register principal identity params
func (o *RegisterPrincipalIdentityParams) WithTimeout(timeout time.Duration) *RegisterPrincipalIdentityParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the register principal identity params
func (o *RegisterPrincipalIdentityParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the register principal identity params
func (o *RegisterPrincipalIdentityParams) WithContext(ctx context.Context) *RegisterPrincipalIdentityParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the register principal identity params
func (o *RegisterPrincipalIdentityParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the register principal identity params
func (o *RegisterPrincipalIdentityParams) WithHTTPClient(client *http.Client) *RegisterPrincipalIdentityParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the register principal identity params
func (o *RegisterPrincipalIdentityParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPrincipalIdentity adds the principalIdentity to the register principal identity params
func (o *RegisterPrincipalIdentityParams) WithPrincipalIdentity(principalIdentity *models.PrincipalIdentity) *RegisterPrincipalIdentityParams {
	o.SetPrincipalIdentity(principalIdentity)
	return o
}

// SetPrincipalIdentity adds the principalIdentity to the register principal identity params
func (o *RegisterPrincipalIdentityParams) SetPrincipalIdentity(principalIdentity *models.PrincipalIdentity) {
	o.PrincipalIdentity = principalIdentity
}

// WriteToRequest writes these params to a swagger request
func (o *RegisterPrincipalIdentityParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.PrincipalIdentity == nil {
		o.PrincipalIdentity = new(models.PrincipalIdentity)
	}

	if err := r.SetBodyParam(o.PrincipalIdentity); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
