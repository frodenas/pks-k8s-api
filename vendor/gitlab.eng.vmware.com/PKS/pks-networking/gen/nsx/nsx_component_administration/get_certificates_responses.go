// Code generated by go-swagger; DO NOT EDIT.

package nsx_component_administration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// GetCertificatesReader is a Reader for the GetCertificates structure.
type GetCertificatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCertificatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCertificatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetCertificatesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCertificatesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCertificatesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewGetCertificatesPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCertificatesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCertificatesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCertificatesOK creates a GetCertificatesOK with default headers values
func NewGetCertificatesOK() *GetCertificatesOK {
	return &GetCertificatesOK{}
}

/*GetCertificatesOK handles this case with default header values.

OK
*/
type GetCertificatesOK struct {
	Payload *models.CertificateList
}

func (o *GetCertificatesOK) Error() string {
	return fmt.Sprintf("[GET /trust-management/certificates][%d] getCertificatesOK  %+v", 200, o.Payload)
}

func (o *GetCertificatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CertificateList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificatesBadRequest creates a GetCertificatesBadRequest with default headers values
func NewGetCertificatesBadRequest() *GetCertificatesBadRequest {
	return &GetCertificatesBadRequest{}
}

/*GetCertificatesBadRequest handles this case with default header values.

Bad request
*/
type GetCertificatesBadRequest struct {
	Payload *models.APIError
}

func (o *GetCertificatesBadRequest) Error() string {
	return fmt.Sprintf("[GET /trust-management/certificates][%d] getCertificatesBadRequest  %+v", 400, o.Payload)
}

func (o *GetCertificatesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificatesForbidden creates a GetCertificatesForbidden with default headers values
func NewGetCertificatesForbidden() *GetCertificatesForbidden {
	return &GetCertificatesForbidden{}
}

/*GetCertificatesForbidden handles this case with default header values.

Operation forbidden
*/
type GetCertificatesForbidden struct {
	Payload *models.APIError
}

func (o *GetCertificatesForbidden) Error() string {
	return fmt.Sprintf("[GET /trust-management/certificates][%d] getCertificatesForbidden  %+v", 403, o.Payload)
}

func (o *GetCertificatesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificatesNotFound creates a GetCertificatesNotFound with default headers values
func NewGetCertificatesNotFound() *GetCertificatesNotFound {
	return &GetCertificatesNotFound{}
}

/*GetCertificatesNotFound handles this case with default header values.

Resource not found
*/
type GetCertificatesNotFound struct {
	Payload *models.APIError
}

func (o *GetCertificatesNotFound) Error() string {
	return fmt.Sprintf("[GET /trust-management/certificates][%d] getCertificatesNotFound  %+v", 404, o.Payload)
}

func (o *GetCertificatesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificatesPreconditionFailed creates a GetCertificatesPreconditionFailed with default headers values
func NewGetCertificatesPreconditionFailed() *GetCertificatesPreconditionFailed {
	return &GetCertificatesPreconditionFailed{}
}

/*GetCertificatesPreconditionFailed handles this case with default header values.

Precondition failed
*/
type GetCertificatesPreconditionFailed struct {
	Payload *models.APIError
}

func (o *GetCertificatesPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /trust-management/certificates][%d] getCertificatesPreconditionFailed  %+v", 412, o.Payload)
}

func (o *GetCertificatesPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificatesInternalServerError creates a GetCertificatesInternalServerError with default headers values
func NewGetCertificatesInternalServerError() *GetCertificatesInternalServerError {
	return &GetCertificatesInternalServerError{}
}

/*GetCertificatesInternalServerError handles this case with default header values.

Internal server error
*/
type GetCertificatesInternalServerError struct {
	Payload *models.APIError
}

func (o *GetCertificatesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /trust-management/certificates][%d] getCertificatesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCertificatesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificatesServiceUnavailable creates a GetCertificatesServiceUnavailable with default headers values
func NewGetCertificatesServiceUnavailable() *GetCertificatesServiceUnavailable {
	return &GetCertificatesServiceUnavailable{}
}

/*GetCertificatesServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCertificatesServiceUnavailable struct {
	Payload *models.APIError
}

func (o *GetCertificatesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /trust-management/certificates][%d] getCertificatesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCertificatesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
