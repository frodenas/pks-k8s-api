// Code generated by go-swagger; DO NOT EDIT.

package nsx_component_administration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// RegisterPrincipalIdentityReader is a Reader for the RegisterPrincipalIdentity structure.
type RegisterPrincipalIdentityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterPrincipalIdentityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewRegisterPrincipalIdentityCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewRegisterPrincipalIdentityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewRegisterPrincipalIdentityForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewRegisterPrincipalIdentityNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewRegisterPrincipalIdentityPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewRegisterPrincipalIdentityInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewRegisterPrincipalIdentityServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRegisterPrincipalIdentityCreated creates a RegisterPrincipalIdentityCreated with default headers values
func NewRegisterPrincipalIdentityCreated() *RegisterPrincipalIdentityCreated {
	return &RegisterPrincipalIdentityCreated{}
}

/*RegisterPrincipalIdentityCreated handles this case with default header values.

Created
*/
type RegisterPrincipalIdentityCreated struct {
	Payload *models.PrincipalIdentity
}

func (o *RegisterPrincipalIdentityCreated) Error() string {
	return fmt.Sprintf("[POST /trust-management/principal-identities][%d] registerPrincipalIdentityCreated  %+v", 201, o.Payload)
}

func (o *RegisterPrincipalIdentityCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PrincipalIdentity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterPrincipalIdentityBadRequest creates a RegisterPrincipalIdentityBadRequest with default headers values
func NewRegisterPrincipalIdentityBadRequest() *RegisterPrincipalIdentityBadRequest {
	return &RegisterPrincipalIdentityBadRequest{}
}

/*RegisterPrincipalIdentityBadRequest handles this case with default header values.

Bad request
*/
type RegisterPrincipalIdentityBadRequest struct {
	Payload *models.APIError
}

func (o *RegisterPrincipalIdentityBadRequest) Error() string {
	return fmt.Sprintf("[POST /trust-management/principal-identities][%d] registerPrincipalIdentityBadRequest  %+v", 400, o.Payload)
}

func (o *RegisterPrincipalIdentityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterPrincipalIdentityForbidden creates a RegisterPrincipalIdentityForbidden with default headers values
func NewRegisterPrincipalIdentityForbidden() *RegisterPrincipalIdentityForbidden {
	return &RegisterPrincipalIdentityForbidden{}
}

/*RegisterPrincipalIdentityForbidden handles this case with default header values.

Operation forbidden
*/
type RegisterPrincipalIdentityForbidden struct {
	Payload *models.APIError
}

func (o *RegisterPrincipalIdentityForbidden) Error() string {
	return fmt.Sprintf("[POST /trust-management/principal-identities][%d] registerPrincipalIdentityForbidden  %+v", 403, o.Payload)
}

func (o *RegisterPrincipalIdentityForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterPrincipalIdentityNotFound creates a RegisterPrincipalIdentityNotFound with default headers values
func NewRegisterPrincipalIdentityNotFound() *RegisterPrincipalIdentityNotFound {
	return &RegisterPrincipalIdentityNotFound{}
}

/*RegisterPrincipalIdentityNotFound handles this case with default header values.

Resource not found
*/
type RegisterPrincipalIdentityNotFound struct {
	Payload *models.APIError
}

func (o *RegisterPrincipalIdentityNotFound) Error() string {
	return fmt.Sprintf("[POST /trust-management/principal-identities][%d] registerPrincipalIdentityNotFound  %+v", 404, o.Payload)
}

func (o *RegisterPrincipalIdentityNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterPrincipalIdentityPreconditionFailed creates a RegisterPrincipalIdentityPreconditionFailed with default headers values
func NewRegisterPrincipalIdentityPreconditionFailed() *RegisterPrincipalIdentityPreconditionFailed {
	return &RegisterPrincipalIdentityPreconditionFailed{}
}

/*RegisterPrincipalIdentityPreconditionFailed handles this case with default header values.

Precondition failed
*/
type RegisterPrincipalIdentityPreconditionFailed struct {
	Payload *models.APIError
}

func (o *RegisterPrincipalIdentityPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /trust-management/principal-identities][%d] registerPrincipalIdentityPreconditionFailed  %+v", 412, o.Payload)
}

func (o *RegisterPrincipalIdentityPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterPrincipalIdentityInternalServerError creates a RegisterPrincipalIdentityInternalServerError with default headers values
func NewRegisterPrincipalIdentityInternalServerError() *RegisterPrincipalIdentityInternalServerError {
	return &RegisterPrincipalIdentityInternalServerError{}
}

/*RegisterPrincipalIdentityInternalServerError handles this case with default header values.

Internal server error
*/
type RegisterPrincipalIdentityInternalServerError struct {
	Payload *models.APIError
}

func (o *RegisterPrincipalIdentityInternalServerError) Error() string {
	return fmt.Sprintf("[POST /trust-management/principal-identities][%d] registerPrincipalIdentityInternalServerError  %+v", 500, o.Payload)
}

func (o *RegisterPrincipalIdentityInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterPrincipalIdentityServiceUnavailable creates a RegisterPrincipalIdentityServiceUnavailable with default headers values
func NewRegisterPrincipalIdentityServiceUnavailable() *RegisterPrincipalIdentityServiceUnavailable {
	return &RegisterPrincipalIdentityServiceUnavailable{}
}

/*RegisterPrincipalIdentityServiceUnavailable handles this case with default header values.

Service unavailable
*/
type RegisterPrincipalIdentityServiceUnavailable struct {
	Payload *models.APIError
}

func (o *RegisterPrincipalIdentityServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /trust-management/principal-identities][%d] registerPrincipalIdentityServiceUnavailable  %+v", 503, o.Payload)
}

func (o *RegisterPrincipalIdentityServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
