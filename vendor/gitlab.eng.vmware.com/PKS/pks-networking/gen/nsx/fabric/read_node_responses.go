// Code generated by go-swagger; DO NOT EDIT.

package fabric

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// ReadNodeReader is a Reader for the ReadNode structure.
type ReadNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewReadNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewReadNodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewReadNodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewReadNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewReadNodePreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewReadNodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewReadNodeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadNodeOK creates a ReadNodeOK with default headers values
func NewReadNodeOK() *ReadNodeOK {
	return &ReadNodeOK{}
}

/*ReadNodeOK handles this case with default header values.

Success
*/
type ReadNodeOK struct {
	Payload *models.Node
}

func (o *ReadNodeOK) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}][%d] readNodeOK  %+v", 200, o.Payload)
}

func (o *ReadNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Node)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodeBadRequest creates a ReadNodeBadRequest with default headers values
func NewReadNodeBadRequest() *ReadNodeBadRequest {
	return &ReadNodeBadRequest{}
}

/*ReadNodeBadRequest handles this case with default header values.

Bad request
*/
type ReadNodeBadRequest struct {
	Payload *models.APIError
}

func (o *ReadNodeBadRequest) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}][%d] readNodeBadRequest  %+v", 400, o.Payload)
}

func (o *ReadNodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodeForbidden creates a ReadNodeForbidden with default headers values
func NewReadNodeForbidden() *ReadNodeForbidden {
	return &ReadNodeForbidden{}
}

/*ReadNodeForbidden handles this case with default header values.

Operation forbidden
*/
type ReadNodeForbidden struct {
	Payload *models.APIError
}

func (o *ReadNodeForbidden) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}][%d] readNodeForbidden  %+v", 403, o.Payload)
}

func (o *ReadNodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodeNotFound creates a ReadNodeNotFound with default headers values
func NewReadNodeNotFound() *ReadNodeNotFound {
	return &ReadNodeNotFound{}
}

/*ReadNodeNotFound handles this case with default header values.

Resource not found
*/
type ReadNodeNotFound struct {
	Payload *models.APIError
}

func (o *ReadNodeNotFound) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}][%d] readNodeNotFound  %+v", 404, o.Payload)
}

func (o *ReadNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodePreconditionFailed creates a ReadNodePreconditionFailed with default headers values
func NewReadNodePreconditionFailed() *ReadNodePreconditionFailed {
	return &ReadNodePreconditionFailed{}
}

/*ReadNodePreconditionFailed handles this case with default header values.

Precondition failed
*/
type ReadNodePreconditionFailed struct {
	Payload *models.APIError
}

func (o *ReadNodePreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}][%d] readNodePreconditionFailed  %+v", 412, o.Payload)
}

func (o *ReadNodePreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodeInternalServerError creates a ReadNodeInternalServerError with default headers values
func NewReadNodeInternalServerError() *ReadNodeInternalServerError {
	return &ReadNodeInternalServerError{}
}

/*ReadNodeInternalServerError handles this case with default header values.

Internal server error
*/
type ReadNodeInternalServerError struct {
	Payload *models.APIError
}

func (o *ReadNodeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}][%d] readNodeInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadNodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodeServiceUnavailable creates a ReadNodeServiceUnavailable with default headers values
func NewReadNodeServiceUnavailable() *ReadNodeServiceUnavailable {
	return &ReadNodeServiceUnavailable{}
}

/*ReadNodeServiceUnavailable handles this case with default header values.

Service unavailable
*/
type ReadNodeServiceUnavailable struct {
	Payload *models.APIError
}

func (o *ReadNodeServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}][%d] readNodeServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ReadNodeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
