// Code generated by go-swagger; DO NOT EDIT.

package fabric

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// GetFabricNodeStateReader is a Reader for the GetFabricNodeState structure.
type GetFabricNodeStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFabricNodeStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFabricNodeStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetFabricNodeStateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetFabricNodeStateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetFabricNodeStateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewGetFabricNodeStatePreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetFabricNodeStateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetFabricNodeStateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFabricNodeStateOK creates a GetFabricNodeStateOK with default headers values
func NewGetFabricNodeStateOK() *GetFabricNodeStateOK {
	return &GetFabricNodeStateOK{}
}

/*GetFabricNodeStateOK handles this case with default header values.

Success
*/
type GetFabricNodeStateOK struct {
	Payload *models.ConfigurationState
}

func (o *GetFabricNodeStateOK) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}/state][%d] getFabricNodeStateOK  %+v", 200, o.Payload)
}

func (o *GetFabricNodeStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigurationState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFabricNodeStateBadRequest creates a GetFabricNodeStateBadRequest with default headers values
func NewGetFabricNodeStateBadRequest() *GetFabricNodeStateBadRequest {
	return &GetFabricNodeStateBadRequest{}
}

/*GetFabricNodeStateBadRequest handles this case with default header values.

Bad request
*/
type GetFabricNodeStateBadRequest struct {
	Payload *models.APIError
}

func (o *GetFabricNodeStateBadRequest) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}/state][%d] getFabricNodeStateBadRequest  %+v", 400, o.Payload)
}

func (o *GetFabricNodeStateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFabricNodeStateForbidden creates a GetFabricNodeStateForbidden with default headers values
func NewGetFabricNodeStateForbidden() *GetFabricNodeStateForbidden {
	return &GetFabricNodeStateForbidden{}
}

/*GetFabricNodeStateForbidden handles this case with default header values.

Operation forbidden
*/
type GetFabricNodeStateForbidden struct {
	Payload *models.APIError
}

func (o *GetFabricNodeStateForbidden) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}/state][%d] getFabricNodeStateForbidden  %+v", 403, o.Payload)
}

func (o *GetFabricNodeStateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFabricNodeStateNotFound creates a GetFabricNodeStateNotFound with default headers values
func NewGetFabricNodeStateNotFound() *GetFabricNodeStateNotFound {
	return &GetFabricNodeStateNotFound{}
}

/*GetFabricNodeStateNotFound handles this case with default header values.

Resource not found
*/
type GetFabricNodeStateNotFound struct {
	Payload *models.APIError
}

func (o *GetFabricNodeStateNotFound) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}/state][%d] getFabricNodeStateNotFound  %+v", 404, o.Payload)
}

func (o *GetFabricNodeStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFabricNodeStatePreconditionFailed creates a GetFabricNodeStatePreconditionFailed with default headers values
func NewGetFabricNodeStatePreconditionFailed() *GetFabricNodeStatePreconditionFailed {
	return &GetFabricNodeStatePreconditionFailed{}
}

/*GetFabricNodeStatePreconditionFailed handles this case with default header values.

Precondition failed
*/
type GetFabricNodeStatePreconditionFailed struct {
	Payload *models.APIError
}

func (o *GetFabricNodeStatePreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}/state][%d] getFabricNodeStatePreconditionFailed  %+v", 412, o.Payload)
}

func (o *GetFabricNodeStatePreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFabricNodeStateInternalServerError creates a GetFabricNodeStateInternalServerError with default headers values
func NewGetFabricNodeStateInternalServerError() *GetFabricNodeStateInternalServerError {
	return &GetFabricNodeStateInternalServerError{}
}

/*GetFabricNodeStateInternalServerError handles this case with default header values.

Internal server error
*/
type GetFabricNodeStateInternalServerError struct {
	Payload *models.APIError
}

func (o *GetFabricNodeStateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}/state][%d] getFabricNodeStateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFabricNodeStateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFabricNodeStateServiceUnavailable creates a GetFabricNodeStateServiceUnavailable with default headers values
func NewGetFabricNodeStateServiceUnavailable() *GetFabricNodeStateServiceUnavailable {
	return &GetFabricNodeStateServiceUnavailable{}
}

/*GetFabricNodeStateServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetFabricNodeStateServiceUnavailable struct {
	Payload *models.APIError
}

func (o *GetFabricNodeStateServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}/state][%d] getFabricNodeStateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFabricNodeStateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
