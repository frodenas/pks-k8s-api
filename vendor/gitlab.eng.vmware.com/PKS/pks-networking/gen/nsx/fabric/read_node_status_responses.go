// Code generated by go-swagger; DO NOT EDIT.

package fabric

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// ReadNodeStatusReader is a Reader for the ReadNodeStatus structure.
type ReadNodeStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadNodeStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewReadNodeStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewReadNodeStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewReadNodeStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewReadNodeStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewReadNodeStatusPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewReadNodeStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewReadNodeStatusServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadNodeStatusOK creates a ReadNodeStatusOK with default headers values
func NewReadNodeStatusOK() *ReadNodeStatusOK {
	return &ReadNodeStatusOK{}
}

/*ReadNodeStatusOK handles this case with default header values.

Success
*/
type ReadNodeStatusOK struct {
	Payload *models.NodeStatus
}

func (o *ReadNodeStatusOK) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}/status][%d] readNodeStatusOK  %+v", 200, o.Payload)
}

func (o *ReadNodeStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NodeStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodeStatusBadRequest creates a ReadNodeStatusBadRequest with default headers values
func NewReadNodeStatusBadRequest() *ReadNodeStatusBadRequest {
	return &ReadNodeStatusBadRequest{}
}

/*ReadNodeStatusBadRequest handles this case with default header values.

Bad request
*/
type ReadNodeStatusBadRequest struct {
	Payload *models.APIError
}

func (o *ReadNodeStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}/status][%d] readNodeStatusBadRequest  %+v", 400, o.Payload)
}

func (o *ReadNodeStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodeStatusForbidden creates a ReadNodeStatusForbidden with default headers values
func NewReadNodeStatusForbidden() *ReadNodeStatusForbidden {
	return &ReadNodeStatusForbidden{}
}

/*ReadNodeStatusForbidden handles this case with default header values.

Operation forbidden
*/
type ReadNodeStatusForbidden struct {
	Payload *models.APIError
}

func (o *ReadNodeStatusForbidden) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}/status][%d] readNodeStatusForbidden  %+v", 403, o.Payload)
}

func (o *ReadNodeStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodeStatusNotFound creates a ReadNodeStatusNotFound with default headers values
func NewReadNodeStatusNotFound() *ReadNodeStatusNotFound {
	return &ReadNodeStatusNotFound{}
}

/*ReadNodeStatusNotFound handles this case with default header values.

Resource not found
*/
type ReadNodeStatusNotFound struct {
	Payload *models.APIError
}

func (o *ReadNodeStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}/status][%d] readNodeStatusNotFound  %+v", 404, o.Payload)
}

func (o *ReadNodeStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodeStatusPreconditionFailed creates a ReadNodeStatusPreconditionFailed with default headers values
func NewReadNodeStatusPreconditionFailed() *ReadNodeStatusPreconditionFailed {
	return &ReadNodeStatusPreconditionFailed{}
}

/*ReadNodeStatusPreconditionFailed handles this case with default header values.

Precondition failed
*/
type ReadNodeStatusPreconditionFailed struct {
	Payload *models.APIError
}

func (o *ReadNodeStatusPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}/status][%d] readNodeStatusPreconditionFailed  %+v", 412, o.Payload)
}

func (o *ReadNodeStatusPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodeStatusInternalServerError creates a ReadNodeStatusInternalServerError with default headers values
func NewReadNodeStatusInternalServerError() *ReadNodeStatusInternalServerError {
	return &ReadNodeStatusInternalServerError{}
}

/*ReadNodeStatusInternalServerError handles this case with default header values.

Internal server error
*/
type ReadNodeStatusInternalServerError struct {
	Payload *models.APIError
}

func (o *ReadNodeStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}/status][%d] readNodeStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadNodeStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadNodeStatusServiceUnavailable creates a ReadNodeStatusServiceUnavailable with default headers values
func NewReadNodeStatusServiceUnavailable() *ReadNodeStatusServiceUnavailable {
	return &ReadNodeStatusServiceUnavailable{}
}

/*ReadNodeStatusServiceUnavailable handles this case with default header values.

Service unavailable
*/
type ReadNodeStatusServiceUnavailable struct {
	Payload *models.APIError
}

func (o *ReadNodeStatusServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /fabric/nodes/{node-id}/status][%d] readNodeStatusServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ReadNodeStatusServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
