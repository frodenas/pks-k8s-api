// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// ListLoadBalancerVirtualServersReader is a Reader for the ListLoadBalancerVirtualServers structure.
type ListLoadBalancerVirtualServersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListLoadBalancerVirtualServersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListLoadBalancerVirtualServersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListLoadBalancerVirtualServersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListLoadBalancerVirtualServersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListLoadBalancerVirtualServersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewListLoadBalancerVirtualServersPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListLoadBalancerVirtualServersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewListLoadBalancerVirtualServersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListLoadBalancerVirtualServersOK creates a ListLoadBalancerVirtualServersOK with default headers values
func NewListLoadBalancerVirtualServersOK() *ListLoadBalancerVirtualServersOK {
	return &ListLoadBalancerVirtualServersOK{}
}

/*ListLoadBalancerVirtualServersOK handles this case with default header values.

OK
*/
type ListLoadBalancerVirtualServersOK struct {
	Payload *models.LbVirtualServerListResult
}

func (o *ListLoadBalancerVirtualServersOK) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/virtual-servers][%d] listLoadBalancerVirtualServersOK  %+v", 200, o.Payload)
}

func (o *ListLoadBalancerVirtualServersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LbVirtualServerListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLoadBalancerVirtualServersBadRequest creates a ListLoadBalancerVirtualServersBadRequest with default headers values
func NewListLoadBalancerVirtualServersBadRequest() *ListLoadBalancerVirtualServersBadRequest {
	return &ListLoadBalancerVirtualServersBadRequest{}
}

/*ListLoadBalancerVirtualServersBadRequest handles this case with default header values.

Bad request
*/
type ListLoadBalancerVirtualServersBadRequest struct {
	Payload *models.APIError
}

func (o *ListLoadBalancerVirtualServersBadRequest) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/virtual-servers][%d] listLoadBalancerVirtualServersBadRequest  %+v", 400, o.Payload)
}

func (o *ListLoadBalancerVirtualServersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLoadBalancerVirtualServersForbidden creates a ListLoadBalancerVirtualServersForbidden with default headers values
func NewListLoadBalancerVirtualServersForbidden() *ListLoadBalancerVirtualServersForbidden {
	return &ListLoadBalancerVirtualServersForbidden{}
}

/*ListLoadBalancerVirtualServersForbidden handles this case with default header values.

Operation forbidden
*/
type ListLoadBalancerVirtualServersForbidden struct {
	Payload *models.APIError
}

func (o *ListLoadBalancerVirtualServersForbidden) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/virtual-servers][%d] listLoadBalancerVirtualServersForbidden  %+v", 403, o.Payload)
}

func (o *ListLoadBalancerVirtualServersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLoadBalancerVirtualServersNotFound creates a ListLoadBalancerVirtualServersNotFound with default headers values
func NewListLoadBalancerVirtualServersNotFound() *ListLoadBalancerVirtualServersNotFound {
	return &ListLoadBalancerVirtualServersNotFound{}
}

/*ListLoadBalancerVirtualServersNotFound handles this case with default header values.

Resource not found
*/
type ListLoadBalancerVirtualServersNotFound struct {
	Payload *models.APIError
}

func (o *ListLoadBalancerVirtualServersNotFound) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/virtual-servers][%d] listLoadBalancerVirtualServersNotFound  %+v", 404, o.Payload)
}

func (o *ListLoadBalancerVirtualServersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLoadBalancerVirtualServersPreconditionFailed creates a ListLoadBalancerVirtualServersPreconditionFailed with default headers values
func NewListLoadBalancerVirtualServersPreconditionFailed() *ListLoadBalancerVirtualServersPreconditionFailed {
	return &ListLoadBalancerVirtualServersPreconditionFailed{}
}

/*ListLoadBalancerVirtualServersPreconditionFailed handles this case with default header values.

Precondition failed
*/
type ListLoadBalancerVirtualServersPreconditionFailed struct {
	Payload *models.APIError
}

func (o *ListLoadBalancerVirtualServersPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/virtual-servers][%d] listLoadBalancerVirtualServersPreconditionFailed  %+v", 412, o.Payload)
}

func (o *ListLoadBalancerVirtualServersPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLoadBalancerVirtualServersInternalServerError creates a ListLoadBalancerVirtualServersInternalServerError with default headers values
func NewListLoadBalancerVirtualServersInternalServerError() *ListLoadBalancerVirtualServersInternalServerError {
	return &ListLoadBalancerVirtualServersInternalServerError{}
}

/*ListLoadBalancerVirtualServersInternalServerError handles this case with default header values.

Internal server error
*/
type ListLoadBalancerVirtualServersInternalServerError struct {
	Payload *models.APIError
}

func (o *ListLoadBalancerVirtualServersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/virtual-servers][%d] listLoadBalancerVirtualServersInternalServerError  %+v", 500, o.Payload)
}

func (o *ListLoadBalancerVirtualServersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLoadBalancerVirtualServersServiceUnavailable creates a ListLoadBalancerVirtualServersServiceUnavailable with default headers values
func NewListLoadBalancerVirtualServersServiceUnavailable() *ListLoadBalancerVirtualServersServiceUnavailable {
	return &ListLoadBalancerVirtualServersServiceUnavailable{}
}

/*ListLoadBalancerVirtualServersServiceUnavailable handles this case with default header values.

Service unavailable
*/
type ListLoadBalancerVirtualServersServiceUnavailable struct {
	Payload *models.APIError
}

func (o *ListLoadBalancerVirtualServersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/virtual-servers][%d] listLoadBalancerVirtualServersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ListLoadBalancerVirtualServersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
