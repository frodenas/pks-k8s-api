// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// ListLoadBalancerPoolsReader is a Reader for the ListLoadBalancerPools structure.
type ListLoadBalancerPoolsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListLoadBalancerPoolsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListLoadBalancerPoolsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListLoadBalancerPoolsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListLoadBalancerPoolsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListLoadBalancerPoolsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewListLoadBalancerPoolsPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListLoadBalancerPoolsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewListLoadBalancerPoolsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListLoadBalancerPoolsOK creates a ListLoadBalancerPoolsOK with default headers values
func NewListLoadBalancerPoolsOK() *ListLoadBalancerPoolsOK {
	return &ListLoadBalancerPoolsOK{}
}

/*ListLoadBalancerPoolsOK handles this case with default header values.

OK
*/
type ListLoadBalancerPoolsOK struct {
	Payload *models.LbPoolListResult
}

func (o *ListLoadBalancerPoolsOK) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/pools][%d] listLoadBalancerPoolsOK  %+v", 200, o.Payload)
}

func (o *ListLoadBalancerPoolsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LbPoolListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLoadBalancerPoolsBadRequest creates a ListLoadBalancerPoolsBadRequest with default headers values
func NewListLoadBalancerPoolsBadRequest() *ListLoadBalancerPoolsBadRequest {
	return &ListLoadBalancerPoolsBadRequest{}
}

/*ListLoadBalancerPoolsBadRequest handles this case with default header values.

Bad request
*/
type ListLoadBalancerPoolsBadRequest struct {
	Payload *models.APIError
}

func (o *ListLoadBalancerPoolsBadRequest) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/pools][%d] listLoadBalancerPoolsBadRequest  %+v", 400, o.Payload)
}

func (o *ListLoadBalancerPoolsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLoadBalancerPoolsForbidden creates a ListLoadBalancerPoolsForbidden with default headers values
func NewListLoadBalancerPoolsForbidden() *ListLoadBalancerPoolsForbidden {
	return &ListLoadBalancerPoolsForbidden{}
}

/*ListLoadBalancerPoolsForbidden handles this case with default header values.

Operation forbidden
*/
type ListLoadBalancerPoolsForbidden struct {
	Payload *models.APIError
}

func (o *ListLoadBalancerPoolsForbidden) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/pools][%d] listLoadBalancerPoolsForbidden  %+v", 403, o.Payload)
}

func (o *ListLoadBalancerPoolsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLoadBalancerPoolsNotFound creates a ListLoadBalancerPoolsNotFound with default headers values
func NewListLoadBalancerPoolsNotFound() *ListLoadBalancerPoolsNotFound {
	return &ListLoadBalancerPoolsNotFound{}
}

/*ListLoadBalancerPoolsNotFound handles this case with default header values.

Resource not found
*/
type ListLoadBalancerPoolsNotFound struct {
	Payload *models.APIError
}

func (o *ListLoadBalancerPoolsNotFound) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/pools][%d] listLoadBalancerPoolsNotFound  %+v", 404, o.Payload)
}

func (o *ListLoadBalancerPoolsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLoadBalancerPoolsPreconditionFailed creates a ListLoadBalancerPoolsPreconditionFailed with default headers values
func NewListLoadBalancerPoolsPreconditionFailed() *ListLoadBalancerPoolsPreconditionFailed {
	return &ListLoadBalancerPoolsPreconditionFailed{}
}

/*ListLoadBalancerPoolsPreconditionFailed handles this case with default header values.

Precondition failed
*/
type ListLoadBalancerPoolsPreconditionFailed struct {
	Payload *models.APIError
}

func (o *ListLoadBalancerPoolsPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/pools][%d] listLoadBalancerPoolsPreconditionFailed  %+v", 412, o.Payload)
}

func (o *ListLoadBalancerPoolsPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLoadBalancerPoolsInternalServerError creates a ListLoadBalancerPoolsInternalServerError with default headers values
func NewListLoadBalancerPoolsInternalServerError() *ListLoadBalancerPoolsInternalServerError {
	return &ListLoadBalancerPoolsInternalServerError{}
}

/*ListLoadBalancerPoolsInternalServerError handles this case with default header values.

Internal server error
*/
type ListLoadBalancerPoolsInternalServerError struct {
	Payload *models.APIError
}

func (o *ListLoadBalancerPoolsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/pools][%d] listLoadBalancerPoolsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListLoadBalancerPoolsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLoadBalancerPoolsServiceUnavailable creates a ListLoadBalancerPoolsServiceUnavailable with default headers values
func NewListLoadBalancerPoolsServiceUnavailable() *ListLoadBalancerPoolsServiceUnavailable {
	return &ListLoadBalancerPoolsServiceUnavailable{}
}

/*ListLoadBalancerPoolsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type ListLoadBalancerPoolsServiceUnavailable struct {
	Payload *models.APIError
}

func (o *ListLoadBalancerPoolsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/pools][%d] listLoadBalancerPoolsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ListLoadBalancerPoolsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
