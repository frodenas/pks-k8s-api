// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// CreateLoadBalancerVirtualServerReader is a Reader for the CreateLoadBalancerVirtualServer structure.
type CreateLoadBalancerVirtualServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateLoadBalancerVirtualServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateLoadBalancerVirtualServerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewCreateLoadBalancerVirtualServerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateLoadBalancerVirtualServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateLoadBalancerVirtualServerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateLoadBalancerVirtualServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewCreateLoadBalancerVirtualServerPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateLoadBalancerVirtualServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewCreateLoadBalancerVirtualServerServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateLoadBalancerVirtualServerOK creates a CreateLoadBalancerVirtualServerOK with default headers values
func NewCreateLoadBalancerVirtualServerOK() *CreateLoadBalancerVirtualServerOK {
	return &CreateLoadBalancerVirtualServerOK{}
}

/*CreateLoadBalancerVirtualServerOK handles this case with default header values.

OK
*/
type CreateLoadBalancerVirtualServerOK struct {
	Payload *models.LbVirtualServer
}

func (o *CreateLoadBalancerVirtualServerOK) Error() string {
	return fmt.Sprintf("[POST /loadbalancer/virtual-servers][%d] createLoadBalancerVirtualServerOK  %+v", 200, o.Payload)
}

func (o *CreateLoadBalancerVirtualServerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LbVirtualServer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLoadBalancerVirtualServerCreated creates a CreateLoadBalancerVirtualServerCreated with default headers values
func NewCreateLoadBalancerVirtualServerCreated() *CreateLoadBalancerVirtualServerCreated {
	return &CreateLoadBalancerVirtualServerCreated{}
}

/*CreateLoadBalancerVirtualServerCreated handles this case with default header values.

Created
*/
type CreateLoadBalancerVirtualServerCreated struct {
	Payload *models.LbVirtualServer
}

func (o *CreateLoadBalancerVirtualServerCreated) Error() string {
	return fmt.Sprintf("[POST /loadbalancer/virtual-servers][%d] createLoadBalancerVirtualServerCreated  %+v", 201, o.Payload)
}

func (o *CreateLoadBalancerVirtualServerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LbVirtualServer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLoadBalancerVirtualServerBadRequest creates a CreateLoadBalancerVirtualServerBadRequest with default headers values
func NewCreateLoadBalancerVirtualServerBadRequest() *CreateLoadBalancerVirtualServerBadRequest {
	return &CreateLoadBalancerVirtualServerBadRequest{}
}

/*CreateLoadBalancerVirtualServerBadRequest handles this case with default header values.

Bad request
*/
type CreateLoadBalancerVirtualServerBadRequest struct {
	Payload *models.APIError
}

func (o *CreateLoadBalancerVirtualServerBadRequest) Error() string {
	return fmt.Sprintf("[POST /loadbalancer/virtual-servers][%d] createLoadBalancerVirtualServerBadRequest  %+v", 400, o.Payload)
}

func (o *CreateLoadBalancerVirtualServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLoadBalancerVirtualServerForbidden creates a CreateLoadBalancerVirtualServerForbidden with default headers values
func NewCreateLoadBalancerVirtualServerForbidden() *CreateLoadBalancerVirtualServerForbidden {
	return &CreateLoadBalancerVirtualServerForbidden{}
}

/*CreateLoadBalancerVirtualServerForbidden handles this case with default header values.

Operation forbidden
*/
type CreateLoadBalancerVirtualServerForbidden struct {
	Payload *models.APIError
}

func (o *CreateLoadBalancerVirtualServerForbidden) Error() string {
	return fmt.Sprintf("[POST /loadbalancer/virtual-servers][%d] createLoadBalancerVirtualServerForbidden  %+v", 403, o.Payload)
}

func (o *CreateLoadBalancerVirtualServerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLoadBalancerVirtualServerNotFound creates a CreateLoadBalancerVirtualServerNotFound with default headers values
func NewCreateLoadBalancerVirtualServerNotFound() *CreateLoadBalancerVirtualServerNotFound {
	return &CreateLoadBalancerVirtualServerNotFound{}
}

/*CreateLoadBalancerVirtualServerNotFound handles this case with default header values.

Resource not found
*/
type CreateLoadBalancerVirtualServerNotFound struct {
	Payload *models.APIError
}

func (o *CreateLoadBalancerVirtualServerNotFound) Error() string {
	return fmt.Sprintf("[POST /loadbalancer/virtual-servers][%d] createLoadBalancerVirtualServerNotFound  %+v", 404, o.Payload)
}

func (o *CreateLoadBalancerVirtualServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLoadBalancerVirtualServerPreconditionFailed creates a CreateLoadBalancerVirtualServerPreconditionFailed with default headers values
func NewCreateLoadBalancerVirtualServerPreconditionFailed() *CreateLoadBalancerVirtualServerPreconditionFailed {
	return &CreateLoadBalancerVirtualServerPreconditionFailed{}
}

/*CreateLoadBalancerVirtualServerPreconditionFailed handles this case with default header values.

Precondition failed
*/
type CreateLoadBalancerVirtualServerPreconditionFailed struct {
	Payload *models.APIError
}

func (o *CreateLoadBalancerVirtualServerPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /loadbalancer/virtual-servers][%d] createLoadBalancerVirtualServerPreconditionFailed  %+v", 412, o.Payload)
}

func (o *CreateLoadBalancerVirtualServerPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLoadBalancerVirtualServerInternalServerError creates a CreateLoadBalancerVirtualServerInternalServerError with default headers values
func NewCreateLoadBalancerVirtualServerInternalServerError() *CreateLoadBalancerVirtualServerInternalServerError {
	return &CreateLoadBalancerVirtualServerInternalServerError{}
}

/*CreateLoadBalancerVirtualServerInternalServerError handles this case with default header values.

Internal server error
*/
type CreateLoadBalancerVirtualServerInternalServerError struct {
	Payload *models.APIError
}

func (o *CreateLoadBalancerVirtualServerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /loadbalancer/virtual-servers][%d] createLoadBalancerVirtualServerInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateLoadBalancerVirtualServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLoadBalancerVirtualServerServiceUnavailable creates a CreateLoadBalancerVirtualServerServiceUnavailable with default headers values
func NewCreateLoadBalancerVirtualServerServiceUnavailable() *CreateLoadBalancerVirtualServerServiceUnavailable {
	return &CreateLoadBalancerVirtualServerServiceUnavailable{}
}

/*CreateLoadBalancerVirtualServerServiceUnavailable handles this case with default header values.

Service unavailable
*/
type CreateLoadBalancerVirtualServerServiceUnavailable struct {
	Payload *models.APIError
}

func (o *CreateLoadBalancerVirtualServerServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /loadbalancer/virtual-servers][%d] createLoadBalancerVirtualServerServiceUnavailable  %+v", 503, o.Payload)
}

func (o *CreateLoadBalancerVirtualServerServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
