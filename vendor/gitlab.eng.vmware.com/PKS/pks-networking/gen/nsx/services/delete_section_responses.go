// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// DeleteSectionReader is a Reader for the DeleteSection structure.
type DeleteSectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteSectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteSectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteSectionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteSectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewDeleteSectionPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteSectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteSectionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSectionOK creates a DeleteSectionOK with default headers values
func NewDeleteSectionOK() *DeleteSectionOK {
	return &DeleteSectionOK{}
}

/*DeleteSectionOK handles this case with default header values.

DeleteSectionOK delete section o k
*/
type DeleteSectionOK struct {
}

func (o *DeleteSectionOK) Error() string {
	return fmt.Sprintf("[DELETE /firewall/sections/{section-id}][%d] deleteSectionOK ", 200)
}

func (o *DeleteSectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSectionBadRequest creates a DeleteSectionBadRequest with default headers values
func NewDeleteSectionBadRequest() *DeleteSectionBadRequest {
	return &DeleteSectionBadRequest{}
}

/*DeleteSectionBadRequest handles this case with default header values.

Bad request
*/
type DeleteSectionBadRequest struct {
	Payload *models.APIError
}

func (o *DeleteSectionBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /firewall/sections/{section-id}][%d] deleteSectionBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSectionForbidden creates a DeleteSectionForbidden with default headers values
func NewDeleteSectionForbidden() *DeleteSectionForbidden {
	return &DeleteSectionForbidden{}
}

/*DeleteSectionForbidden handles this case with default header values.

Operation forbidden
*/
type DeleteSectionForbidden struct {
	Payload *models.APIError
}

func (o *DeleteSectionForbidden) Error() string {
	return fmt.Sprintf("[DELETE /firewall/sections/{section-id}][%d] deleteSectionForbidden  %+v", 403, o.Payload)
}

func (o *DeleteSectionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSectionNotFound creates a DeleteSectionNotFound with default headers values
func NewDeleteSectionNotFound() *DeleteSectionNotFound {
	return &DeleteSectionNotFound{}
}

/*DeleteSectionNotFound handles this case with default header values.

Resource not found
*/
type DeleteSectionNotFound struct {
	Payload *models.APIError
}

func (o *DeleteSectionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /firewall/sections/{section-id}][%d] deleteSectionNotFound  %+v", 404, o.Payload)
}

func (o *DeleteSectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSectionPreconditionFailed creates a DeleteSectionPreconditionFailed with default headers values
func NewDeleteSectionPreconditionFailed() *DeleteSectionPreconditionFailed {
	return &DeleteSectionPreconditionFailed{}
}

/*DeleteSectionPreconditionFailed handles this case with default header values.

Precondition failed
*/
type DeleteSectionPreconditionFailed struct {
	Payload *models.APIError
}

func (o *DeleteSectionPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /firewall/sections/{section-id}][%d] deleteSectionPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteSectionPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSectionInternalServerError creates a DeleteSectionInternalServerError with default headers values
func NewDeleteSectionInternalServerError() *DeleteSectionInternalServerError {
	return &DeleteSectionInternalServerError{}
}

/*DeleteSectionInternalServerError handles this case with default header values.

Internal server error
*/
type DeleteSectionInternalServerError struct {
	Payload *models.APIError
}

func (o *DeleteSectionInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /firewall/sections/{section-id}][%d] deleteSectionInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteSectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSectionServiceUnavailable creates a DeleteSectionServiceUnavailable with default headers values
func NewDeleteSectionServiceUnavailable() *DeleteSectionServiceUnavailable {
	return &DeleteSectionServiceUnavailable{}
}

/*DeleteSectionServiceUnavailable handles this case with default header values.

Service unavailable
*/
type DeleteSectionServiceUnavailable struct {
	Payload *models.APIError
}

func (o *DeleteSectionServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /firewall/sections/{section-id}][%d] deleteSectionServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteSectionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
