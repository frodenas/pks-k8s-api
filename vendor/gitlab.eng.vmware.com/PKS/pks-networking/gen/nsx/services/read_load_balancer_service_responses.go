// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// ReadLoadBalancerServiceReader is a Reader for the ReadLoadBalancerService structure.
type ReadLoadBalancerServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadLoadBalancerServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewReadLoadBalancerServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewReadLoadBalancerServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewReadLoadBalancerServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewReadLoadBalancerServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewReadLoadBalancerServicePreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewReadLoadBalancerServiceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewReadLoadBalancerServiceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadLoadBalancerServiceOK creates a ReadLoadBalancerServiceOK with default headers values
func NewReadLoadBalancerServiceOK() *ReadLoadBalancerServiceOK {
	return &ReadLoadBalancerServiceOK{}
}

/*ReadLoadBalancerServiceOK handles this case with default header values.

OK
*/
type ReadLoadBalancerServiceOK struct {
	Payload *models.LbService
}

func (o *ReadLoadBalancerServiceOK) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/services/{service-id}][%d] readLoadBalancerServiceOK  %+v", 200, o.Payload)
}

func (o *ReadLoadBalancerServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LbService)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLoadBalancerServiceBadRequest creates a ReadLoadBalancerServiceBadRequest with default headers values
func NewReadLoadBalancerServiceBadRequest() *ReadLoadBalancerServiceBadRequest {
	return &ReadLoadBalancerServiceBadRequest{}
}

/*ReadLoadBalancerServiceBadRequest handles this case with default header values.

Bad request
*/
type ReadLoadBalancerServiceBadRequest struct {
	Payload *models.APIError
}

func (o *ReadLoadBalancerServiceBadRequest) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/services/{service-id}][%d] readLoadBalancerServiceBadRequest  %+v", 400, o.Payload)
}

func (o *ReadLoadBalancerServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLoadBalancerServiceForbidden creates a ReadLoadBalancerServiceForbidden with default headers values
func NewReadLoadBalancerServiceForbidden() *ReadLoadBalancerServiceForbidden {
	return &ReadLoadBalancerServiceForbidden{}
}

/*ReadLoadBalancerServiceForbidden handles this case with default header values.

Operation forbidden
*/
type ReadLoadBalancerServiceForbidden struct {
	Payload *models.APIError
}

func (o *ReadLoadBalancerServiceForbidden) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/services/{service-id}][%d] readLoadBalancerServiceForbidden  %+v", 403, o.Payload)
}

func (o *ReadLoadBalancerServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLoadBalancerServiceNotFound creates a ReadLoadBalancerServiceNotFound with default headers values
func NewReadLoadBalancerServiceNotFound() *ReadLoadBalancerServiceNotFound {
	return &ReadLoadBalancerServiceNotFound{}
}

/*ReadLoadBalancerServiceNotFound handles this case with default header values.

Resource not found
*/
type ReadLoadBalancerServiceNotFound struct {
	Payload *models.APIError
}

func (o *ReadLoadBalancerServiceNotFound) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/services/{service-id}][%d] readLoadBalancerServiceNotFound  %+v", 404, o.Payload)
}

func (o *ReadLoadBalancerServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLoadBalancerServicePreconditionFailed creates a ReadLoadBalancerServicePreconditionFailed with default headers values
func NewReadLoadBalancerServicePreconditionFailed() *ReadLoadBalancerServicePreconditionFailed {
	return &ReadLoadBalancerServicePreconditionFailed{}
}

/*ReadLoadBalancerServicePreconditionFailed handles this case with default header values.

Precondition failed
*/
type ReadLoadBalancerServicePreconditionFailed struct {
	Payload *models.APIError
}

func (o *ReadLoadBalancerServicePreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/services/{service-id}][%d] readLoadBalancerServicePreconditionFailed  %+v", 412, o.Payload)
}

func (o *ReadLoadBalancerServicePreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLoadBalancerServiceInternalServerError creates a ReadLoadBalancerServiceInternalServerError with default headers values
func NewReadLoadBalancerServiceInternalServerError() *ReadLoadBalancerServiceInternalServerError {
	return &ReadLoadBalancerServiceInternalServerError{}
}

/*ReadLoadBalancerServiceInternalServerError handles this case with default header values.

Internal server error
*/
type ReadLoadBalancerServiceInternalServerError struct {
	Payload *models.APIError
}

func (o *ReadLoadBalancerServiceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/services/{service-id}][%d] readLoadBalancerServiceInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadLoadBalancerServiceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLoadBalancerServiceServiceUnavailable creates a ReadLoadBalancerServiceServiceUnavailable with default headers values
func NewReadLoadBalancerServiceServiceUnavailable() *ReadLoadBalancerServiceServiceUnavailable {
	return &ReadLoadBalancerServiceServiceUnavailable{}
}

/*ReadLoadBalancerServiceServiceUnavailable handles this case with default header values.

Service unavailable
*/
type ReadLoadBalancerServiceServiceUnavailable struct {
	Payload *models.APIError
}

func (o *ReadLoadBalancerServiceServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /loadbalancer/services/{service-id}][%d] readLoadBalancerServiceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ReadLoadBalancerServiceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
