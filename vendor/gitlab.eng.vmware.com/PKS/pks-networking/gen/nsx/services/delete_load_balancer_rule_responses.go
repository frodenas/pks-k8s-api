// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// DeleteLoadBalancerRuleReader is a Reader for the DeleteLoadBalancerRule structure.
type DeleteLoadBalancerRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLoadBalancerRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteLoadBalancerRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteLoadBalancerRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteLoadBalancerRuleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteLoadBalancerRuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewDeleteLoadBalancerRulePreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteLoadBalancerRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteLoadBalancerRuleServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteLoadBalancerRuleOK creates a DeleteLoadBalancerRuleOK with default headers values
func NewDeleteLoadBalancerRuleOK() *DeleteLoadBalancerRuleOK {
	return &DeleteLoadBalancerRuleOK{}
}

/*DeleteLoadBalancerRuleOK handles this case with default header values.

OK
*/
type DeleteLoadBalancerRuleOK struct {
}

func (o *DeleteLoadBalancerRuleOK) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/rules/{rule-id}][%d] deleteLoadBalancerRuleOK ", 200)
}

func (o *DeleteLoadBalancerRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLoadBalancerRuleBadRequest creates a DeleteLoadBalancerRuleBadRequest with default headers values
func NewDeleteLoadBalancerRuleBadRequest() *DeleteLoadBalancerRuleBadRequest {
	return &DeleteLoadBalancerRuleBadRequest{}
}

/*DeleteLoadBalancerRuleBadRequest handles this case with default header values.

Bad request
*/
type DeleteLoadBalancerRuleBadRequest struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerRuleBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/rules/{rule-id}][%d] deleteLoadBalancerRuleBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLoadBalancerRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerRuleForbidden creates a DeleteLoadBalancerRuleForbidden with default headers values
func NewDeleteLoadBalancerRuleForbidden() *DeleteLoadBalancerRuleForbidden {
	return &DeleteLoadBalancerRuleForbidden{}
}

/*DeleteLoadBalancerRuleForbidden handles this case with default header values.

Operation forbidden
*/
type DeleteLoadBalancerRuleForbidden struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerRuleForbidden) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/rules/{rule-id}][%d] deleteLoadBalancerRuleForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLoadBalancerRuleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerRuleNotFound creates a DeleteLoadBalancerRuleNotFound with default headers values
func NewDeleteLoadBalancerRuleNotFound() *DeleteLoadBalancerRuleNotFound {
	return &DeleteLoadBalancerRuleNotFound{}
}

/*DeleteLoadBalancerRuleNotFound handles this case with default header values.

Resource not found
*/
type DeleteLoadBalancerRuleNotFound struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerRuleNotFound) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/rules/{rule-id}][%d] deleteLoadBalancerRuleNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLoadBalancerRuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerRulePreconditionFailed creates a DeleteLoadBalancerRulePreconditionFailed with default headers values
func NewDeleteLoadBalancerRulePreconditionFailed() *DeleteLoadBalancerRulePreconditionFailed {
	return &DeleteLoadBalancerRulePreconditionFailed{}
}

/*DeleteLoadBalancerRulePreconditionFailed handles this case with default header values.

Precondition failed
*/
type DeleteLoadBalancerRulePreconditionFailed struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerRulePreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/rules/{rule-id}][%d] deleteLoadBalancerRulePreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteLoadBalancerRulePreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerRuleInternalServerError creates a DeleteLoadBalancerRuleInternalServerError with default headers values
func NewDeleteLoadBalancerRuleInternalServerError() *DeleteLoadBalancerRuleInternalServerError {
	return &DeleteLoadBalancerRuleInternalServerError{}
}

/*DeleteLoadBalancerRuleInternalServerError handles this case with default header values.

Internal server error
*/
type DeleteLoadBalancerRuleInternalServerError struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerRuleInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/rules/{rule-id}][%d] deleteLoadBalancerRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLoadBalancerRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerRuleServiceUnavailable creates a DeleteLoadBalancerRuleServiceUnavailable with default headers values
func NewDeleteLoadBalancerRuleServiceUnavailable() *DeleteLoadBalancerRuleServiceUnavailable {
	return &DeleteLoadBalancerRuleServiceUnavailable{}
}

/*DeleteLoadBalancerRuleServiceUnavailable handles this case with default header values.

Service unavailable
*/
type DeleteLoadBalancerRuleServiceUnavailable struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerRuleServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/rules/{rule-id}][%d] deleteLoadBalancerRuleServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteLoadBalancerRuleServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
