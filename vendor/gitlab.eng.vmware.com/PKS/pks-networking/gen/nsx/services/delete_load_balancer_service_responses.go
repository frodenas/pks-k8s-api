// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// DeleteLoadBalancerServiceReader is a Reader for the DeleteLoadBalancerService structure.
type DeleteLoadBalancerServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLoadBalancerServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteLoadBalancerServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteLoadBalancerServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteLoadBalancerServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteLoadBalancerServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewDeleteLoadBalancerServicePreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteLoadBalancerServiceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteLoadBalancerServiceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteLoadBalancerServiceOK creates a DeleteLoadBalancerServiceOK with default headers values
func NewDeleteLoadBalancerServiceOK() *DeleteLoadBalancerServiceOK {
	return &DeleteLoadBalancerServiceOK{}
}

/*DeleteLoadBalancerServiceOK handles this case with default header values.

OK
*/
type DeleteLoadBalancerServiceOK struct {
}

func (o *DeleteLoadBalancerServiceOK) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/services/{service-id}][%d] deleteLoadBalancerServiceOK ", 200)
}

func (o *DeleteLoadBalancerServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLoadBalancerServiceBadRequest creates a DeleteLoadBalancerServiceBadRequest with default headers values
func NewDeleteLoadBalancerServiceBadRequest() *DeleteLoadBalancerServiceBadRequest {
	return &DeleteLoadBalancerServiceBadRequest{}
}

/*DeleteLoadBalancerServiceBadRequest handles this case with default header values.

Bad request
*/
type DeleteLoadBalancerServiceBadRequest struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerServiceBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/services/{service-id}][%d] deleteLoadBalancerServiceBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLoadBalancerServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerServiceForbidden creates a DeleteLoadBalancerServiceForbidden with default headers values
func NewDeleteLoadBalancerServiceForbidden() *DeleteLoadBalancerServiceForbidden {
	return &DeleteLoadBalancerServiceForbidden{}
}

/*DeleteLoadBalancerServiceForbidden handles this case with default header values.

Operation forbidden
*/
type DeleteLoadBalancerServiceForbidden struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerServiceForbidden) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/services/{service-id}][%d] deleteLoadBalancerServiceForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLoadBalancerServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerServiceNotFound creates a DeleteLoadBalancerServiceNotFound with default headers values
func NewDeleteLoadBalancerServiceNotFound() *DeleteLoadBalancerServiceNotFound {
	return &DeleteLoadBalancerServiceNotFound{}
}

/*DeleteLoadBalancerServiceNotFound handles this case with default header values.

Resource not found
*/
type DeleteLoadBalancerServiceNotFound struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerServiceNotFound) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/services/{service-id}][%d] deleteLoadBalancerServiceNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLoadBalancerServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerServicePreconditionFailed creates a DeleteLoadBalancerServicePreconditionFailed with default headers values
func NewDeleteLoadBalancerServicePreconditionFailed() *DeleteLoadBalancerServicePreconditionFailed {
	return &DeleteLoadBalancerServicePreconditionFailed{}
}

/*DeleteLoadBalancerServicePreconditionFailed handles this case with default header values.

Precondition failed
*/
type DeleteLoadBalancerServicePreconditionFailed struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerServicePreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/services/{service-id}][%d] deleteLoadBalancerServicePreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteLoadBalancerServicePreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerServiceInternalServerError creates a DeleteLoadBalancerServiceInternalServerError with default headers values
func NewDeleteLoadBalancerServiceInternalServerError() *DeleteLoadBalancerServiceInternalServerError {
	return &DeleteLoadBalancerServiceInternalServerError{}
}

/*DeleteLoadBalancerServiceInternalServerError handles this case with default header values.

Internal server error
*/
type DeleteLoadBalancerServiceInternalServerError struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerServiceInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/services/{service-id}][%d] deleteLoadBalancerServiceInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLoadBalancerServiceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerServiceServiceUnavailable creates a DeleteLoadBalancerServiceServiceUnavailable with default headers values
func NewDeleteLoadBalancerServiceServiceUnavailable() *DeleteLoadBalancerServiceServiceUnavailable {
	return &DeleteLoadBalancerServiceServiceUnavailable{}
}

/*DeleteLoadBalancerServiceServiceUnavailable handles this case with default header values.

Service unavailable
*/
type DeleteLoadBalancerServiceServiceUnavailable struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerServiceServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/services/{service-id}][%d] deleteLoadBalancerServiceServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteLoadBalancerServiceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
