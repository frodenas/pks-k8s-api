// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteLoadBalancerVirtualServerParams creates a new DeleteLoadBalancerVirtualServerParams object
// with the default values initialized.
func NewDeleteLoadBalancerVirtualServerParams() *DeleteLoadBalancerVirtualServerParams {
	var (
		deleteAssociatedRulesDefault = bool(false)
	)
	return &DeleteLoadBalancerVirtualServerParams{
		DeleteAssociatedRules: &deleteAssociatedRulesDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteLoadBalancerVirtualServerParamsWithTimeout creates a new DeleteLoadBalancerVirtualServerParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteLoadBalancerVirtualServerParamsWithTimeout(timeout time.Duration) *DeleteLoadBalancerVirtualServerParams {
	var (
		deleteAssociatedRulesDefault = bool(false)
	)
	return &DeleteLoadBalancerVirtualServerParams{
		DeleteAssociatedRules: &deleteAssociatedRulesDefault,

		timeout: timeout,
	}
}

// NewDeleteLoadBalancerVirtualServerParamsWithContext creates a new DeleteLoadBalancerVirtualServerParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteLoadBalancerVirtualServerParamsWithContext(ctx context.Context) *DeleteLoadBalancerVirtualServerParams {
	var (
		deleteAssociatedRulesDefault = bool(false)
	)
	return &DeleteLoadBalancerVirtualServerParams{
		DeleteAssociatedRules: &deleteAssociatedRulesDefault,

		Context: ctx,
	}
}

// NewDeleteLoadBalancerVirtualServerParamsWithHTTPClient creates a new DeleteLoadBalancerVirtualServerParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteLoadBalancerVirtualServerParamsWithHTTPClient(client *http.Client) *DeleteLoadBalancerVirtualServerParams {
	var (
		deleteAssociatedRulesDefault = bool(false)
	)
	return &DeleteLoadBalancerVirtualServerParams{
		DeleteAssociatedRules: &deleteAssociatedRulesDefault,
		HTTPClient:            client,
	}
}

/*DeleteLoadBalancerVirtualServerParams contains all the parameters to send to the API endpoint
for the delete load balancer virtual server operation typically these are written to a http.Request
*/
type DeleteLoadBalancerVirtualServerParams struct {

	/*DeleteAssociatedRules
	  Delete associated rules

	*/
	DeleteAssociatedRules *bool
	/*VirtualServerID*/
	VirtualServerID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete load balancer virtual server params
func (o *DeleteLoadBalancerVirtualServerParams) WithTimeout(timeout time.Duration) *DeleteLoadBalancerVirtualServerParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete load balancer virtual server params
func (o *DeleteLoadBalancerVirtualServerParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete load balancer virtual server params
func (o *DeleteLoadBalancerVirtualServerParams) WithContext(ctx context.Context) *DeleteLoadBalancerVirtualServerParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete load balancer virtual server params
func (o *DeleteLoadBalancerVirtualServerParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete load balancer virtual server params
func (o *DeleteLoadBalancerVirtualServerParams) WithHTTPClient(client *http.Client) *DeleteLoadBalancerVirtualServerParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete load balancer virtual server params
func (o *DeleteLoadBalancerVirtualServerParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeleteAssociatedRules adds the deleteAssociatedRules to the delete load balancer virtual server params
func (o *DeleteLoadBalancerVirtualServerParams) WithDeleteAssociatedRules(deleteAssociatedRules *bool) *DeleteLoadBalancerVirtualServerParams {
	o.SetDeleteAssociatedRules(deleteAssociatedRules)
	return o
}

// SetDeleteAssociatedRules adds the deleteAssociatedRules to the delete load balancer virtual server params
func (o *DeleteLoadBalancerVirtualServerParams) SetDeleteAssociatedRules(deleteAssociatedRules *bool) {
	o.DeleteAssociatedRules = deleteAssociatedRules
}

// WithVirtualServerID adds the virtualServerID to the delete load balancer virtual server params
func (o *DeleteLoadBalancerVirtualServerParams) WithVirtualServerID(virtualServerID string) *DeleteLoadBalancerVirtualServerParams {
	o.SetVirtualServerID(virtualServerID)
	return o
}

// SetVirtualServerID adds the virtualServerId to the delete load balancer virtual server params
func (o *DeleteLoadBalancerVirtualServerParams) SetVirtualServerID(virtualServerID string) {
	o.VirtualServerID = virtualServerID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteLoadBalancerVirtualServerParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DeleteAssociatedRules != nil {

		// query param delete_associated_rules
		var qrDeleteAssociatedRules bool
		if o.DeleteAssociatedRules != nil {
			qrDeleteAssociatedRules = *o.DeleteAssociatedRules
		}
		qDeleteAssociatedRules := swag.FormatBool(qrDeleteAssociatedRules)
		if qDeleteAssociatedRules != "" {
			if err := r.SetQueryParam("delete_associated_rules", qDeleteAssociatedRules); err != nil {
				return err
			}
		}

	}

	// path param virtual-server-id
	if err := r.SetPathParam("virtual-server-id", o.VirtualServerID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
