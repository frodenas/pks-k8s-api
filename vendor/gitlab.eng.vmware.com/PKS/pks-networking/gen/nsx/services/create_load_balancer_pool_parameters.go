// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// NewCreateLoadBalancerPoolParams creates a new CreateLoadBalancerPoolParams object
// with the default values initialized.
func NewCreateLoadBalancerPoolParams() *CreateLoadBalancerPoolParams {
	var ()
	return &CreateLoadBalancerPoolParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateLoadBalancerPoolParamsWithTimeout creates a new CreateLoadBalancerPoolParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateLoadBalancerPoolParamsWithTimeout(timeout time.Duration) *CreateLoadBalancerPoolParams {
	var ()
	return &CreateLoadBalancerPoolParams{

		timeout: timeout,
	}
}

// NewCreateLoadBalancerPoolParamsWithContext creates a new CreateLoadBalancerPoolParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateLoadBalancerPoolParamsWithContext(ctx context.Context) *CreateLoadBalancerPoolParams {
	var ()
	return &CreateLoadBalancerPoolParams{

		Context: ctx,
	}
}

// NewCreateLoadBalancerPoolParamsWithHTTPClient creates a new CreateLoadBalancerPoolParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateLoadBalancerPoolParamsWithHTTPClient(client *http.Client) *CreateLoadBalancerPoolParams {
	var ()
	return &CreateLoadBalancerPoolParams{
		HTTPClient: client,
	}
}

/*CreateLoadBalancerPoolParams contains all the parameters to send to the API endpoint
for the create load balancer pool operation typically these are written to a http.Request
*/
type CreateLoadBalancerPoolParams struct {

	/*LbPool*/
	LbPool *models.LbPool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create load balancer pool params
func (o *CreateLoadBalancerPoolParams) WithTimeout(timeout time.Duration) *CreateLoadBalancerPoolParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create load balancer pool params
func (o *CreateLoadBalancerPoolParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create load balancer pool params
func (o *CreateLoadBalancerPoolParams) WithContext(ctx context.Context) *CreateLoadBalancerPoolParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create load balancer pool params
func (o *CreateLoadBalancerPoolParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create load balancer pool params
func (o *CreateLoadBalancerPoolParams) WithHTTPClient(client *http.Client) *CreateLoadBalancerPoolParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create load balancer pool params
func (o *CreateLoadBalancerPoolParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLbPool adds the lbPool to the create load balancer pool params
func (o *CreateLoadBalancerPoolParams) WithLbPool(lbPool *models.LbPool) *CreateLoadBalancerPoolParams {
	o.SetLbPool(lbPool)
	return o
}

// SetLbPool adds the lbPool to the create load balancer pool params
func (o *CreateLoadBalancerPoolParams) SetLbPool(lbPool *models.LbPool) {
	o.LbPool = lbPool
}

// WriteToRequest writes these params to a swagger request
func (o *CreateLoadBalancerPoolParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.LbPool == nil {
		o.LbPool = new(models.LbPool)
	}

	if err := r.SetBodyParam(o.LbPool); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
