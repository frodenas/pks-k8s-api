// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// DeleteLoadBalancerPoolReader is a Reader for the DeleteLoadBalancerPool structure.
type DeleteLoadBalancerPoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLoadBalancerPoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteLoadBalancerPoolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteLoadBalancerPoolBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteLoadBalancerPoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteLoadBalancerPoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewDeleteLoadBalancerPoolPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteLoadBalancerPoolInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteLoadBalancerPoolServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteLoadBalancerPoolOK creates a DeleteLoadBalancerPoolOK with default headers values
func NewDeleteLoadBalancerPoolOK() *DeleteLoadBalancerPoolOK {
	return &DeleteLoadBalancerPoolOK{}
}

/*DeleteLoadBalancerPoolOK handles this case with default header values.

OK
*/
type DeleteLoadBalancerPoolOK struct {
}

func (o *DeleteLoadBalancerPoolOK) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/pools/{pool-id}][%d] deleteLoadBalancerPoolOK ", 200)
}

func (o *DeleteLoadBalancerPoolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLoadBalancerPoolBadRequest creates a DeleteLoadBalancerPoolBadRequest with default headers values
func NewDeleteLoadBalancerPoolBadRequest() *DeleteLoadBalancerPoolBadRequest {
	return &DeleteLoadBalancerPoolBadRequest{}
}

/*DeleteLoadBalancerPoolBadRequest handles this case with default header values.

Bad request
*/
type DeleteLoadBalancerPoolBadRequest struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerPoolBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/pools/{pool-id}][%d] deleteLoadBalancerPoolBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLoadBalancerPoolBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerPoolForbidden creates a DeleteLoadBalancerPoolForbidden with default headers values
func NewDeleteLoadBalancerPoolForbidden() *DeleteLoadBalancerPoolForbidden {
	return &DeleteLoadBalancerPoolForbidden{}
}

/*DeleteLoadBalancerPoolForbidden handles this case with default header values.

Operation forbidden
*/
type DeleteLoadBalancerPoolForbidden struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerPoolForbidden) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/pools/{pool-id}][%d] deleteLoadBalancerPoolForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLoadBalancerPoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerPoolNotFound creates a DeleteLoadBalancerPoolNotFound with default headers values
func NewDeleteLoadBalancerPoolNotFound() *DeleteLoadBalancerPoolNotFound {
	return &DeleteLoadBalancerPoolNotFound{}
}

/*DeleteLoadBalancerPoolNotFound handles this case with default header values.

Resource not found
*/
type DeleteLoadBalancerPoolNotFound struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerPoolNotFound) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/pools/{pool-id}][%d] deleteLoadBalancerPoolNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLoadBalancerPoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerPoolPreconditionFailed creates a DeleteLoadBalancerPoolPreconditionFailed with default headers values
func NewDeleteLoadBalancerPoolPreconditionFailed() *DeleteLoadBalancerPoolPreconditionFailed {
	return &DeleteLoadBalancerPoolPreconditionFailed{}
}

/*DeleteLoadBalancerPoolPreconditionFailed handles this case with default header values.

Precondition failed
*/
type DeleteLoadBalancerPoolPreconditionFailed struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerPoolPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/pools/{pool-id}][%d] deleteLoadBalancerPoolPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteLoadBalancerPoolPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerPoolInternalServerError creates a DeleteLoadBalancerPoolInternalServerError with default headers values
func NewDeleteLoadBalancerPoolInternalServerError() *DeleteLoadBalancerPoolInternalServerError {
	return &DeleteLoadBalancerPoolInternalServerError{}
}

/*DeleteLoadBalancerPoolInternalServerError handles this case with default header values.

Internal server error
*/
type DeleteLoadBalancerPoolInternalServerError struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerPoolInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/pools/{pool-id}][%d] deleteLoadBalancerPoolInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLoadBalancerPoolInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLoadBalancerPoolServiceUnavailable creates a DeleteLoadBalancerPoolServiceUnavailable with default headers values
func NewDeleteLoadBalancerPoolServiceUnavailable() *DeleteLoadBalancerPoolServiceUnavailable {
	return &DeleteLoadBalancerPoolServiceUnavailable{}
}

/*DeleteLoadBalancerPoolServiceUnavailable handles this case with default header values.

Service unavailable
*/
type DeleteLoadBalancerPoolServiceUnavailable struct {
	Payload *models.APIError
}

func (o *DeleteLoadBalancerPoolServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /loadbalancer/pools/{pool-id}][%d] deleteLoadBalancerPoolServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteLoadBalancerPoolServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
