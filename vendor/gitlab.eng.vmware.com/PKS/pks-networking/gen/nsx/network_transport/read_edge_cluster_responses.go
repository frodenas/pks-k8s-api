// Code generated by go-swagger; DO NOT EDIT.

package network_transport

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// ReadEdgeClusterReader is a Reader for the ReadEdgeCluster structure.
type ReadEdgeClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadEdgeClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewReadEdgeClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewReadEdgeClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewReadEdgeClusterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewReadEdgeClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewReadEdgeClusterPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewReadEdgeClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewReadEdgeClusterServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadEdgeClusterOK creates a ReadEdgeClusterOK with default headers values
func NewReadEdgeClusterOK() *ReadEdgeClusterOK {
	return &ReadEdgeClusterOK{}
}

/*ReadEdgeClusterOK handles this case with default header values.

Success
*/
type ReadEdgeClusterOK struct {
	Payload *models.EdgeCluster
}

func (o *ReadEdgeClusterOK) Error() string {
	return fmt.Sprintf("[GET /edge-clusters/{edge-cluster-id}][%d] readEdgeClusterOK  %+v", 200, o.Payload)
}

func (o *ReadEdgeClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EdgeCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadEdgeClusterBadRequest creates a ReadEdgeClusterBadRequest with default headers values
func NewReadEdgeClusterBadRequest() *ReadEdgeClusterBadRequest {
	return &ReadEdgeClusterBadRequest{}
}

/*ReadEdgeClusterBadRequest handles this case with default header values.

Bad request
*/
type ReadEdgeClusterBadRequest struct {
	Payload *models.APIError
}

func (o *ReadEdgeClusterBadRequest) Error() string {
	return fmt.Sprintf("[GET /edge-clusters/{edge-cluster-id}][%d] readEdgeClusterBadRequest  %+v", 400, o.Payload)
}

func (o *ReadEdgeClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadEdgeClusterForbidden creates a ReadEdgeClusterForbidden with default headers values
func NewReadEdgeClusterForbidden() *ReadEdgeClusterForbidden {
	return &ReadEdgeClusterForbidden{}
}

/*ReadEdgeClusterForbidden handles this case with default header values.

Operation forbidden
*/
type ReadEdgeClusterForbidden struct {
	Payload *models.APIError
}

func (o *ReadEdgeClusterForbidden) Error() string {
	return fmt.Sprintf("[GET /edge-clusters/{edge-cluster-id}][%d] readEdgeClusterForbidden  %+v", 403, o.Payload)
}

func (o *ReadEdgeClusterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadEdgeClusterNotFound creates a ReadEdgeClusterNotFound with default headers values
func NewReadEdgeClusterNotFound() *ReadEdgeClusterNotFound {
	return &ReadEdgeClusterNotFound{}
}

/*ReadEdgeClusterNotFound handles this case with default header values.

Resource not found
*/
type ReadEdgeClusterNotFound struct {
	Payload *models.APIError
}

func (o *ReadEdgeClusterNotFound) Error() string {
	return fmt.Sprintf("[GET /edge-clusters/{edge-cluster-id}][%d] readEdgeClusterNotFound  %+v", 404, o.Payload)
}

func (o *ReadEdgeClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadEdgeClusterPreconditionFailed creates a ReadEdgeClusterPreconditionFailed with default headers values
func NewReadEdgeClusterPreconditionFailed() *ReadEdgeClusterPreconditionFailed {
	return &ReadEdgeClusterPreconditionFailed{}
}

/*ReadEdgeClusterPreconditionFailed handles this case with default header values.

Precondition failed
*/
type ReadEdgeClusterPreconditionFailed struct {
	Payload *models.APIError
}

func (o *ReadEdgeClusterPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /edge-clusters/{edge-cluster-id}][%d] readEdgeClusterPreconditionFailed  %+v", 412, o.Payload)
}

func (o *ReadEdgeClusterPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadEdgeClusterInternalServerError creates a ReadEdgeClusterInternalServerError with default headers values
func NewReadEdgeClusterInternalServerError() *ReadEdgeClusterInternalServerError {
	return &ReadEdgeClusterInternalServerError{}
}

/*ReadEdgeClusterInternalServerError handles this case with default header values.

Internal server error
*/
type ReadEdgeClusterInternalServerError struct {
	Payload *models.APIError
}

func (o *ReadEdgeClusterInternalServerError) Error() string {
	return fmt.Sprintf("[GET /edge-clusters/{edge-cluster-id}][%d] readEdgeClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadEdgeClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadEdgeClusterServiceUnavailable creates a ReadEdgeClusterServiceUnavailable with default headers values
func NewReadEdgeClusterServiceUnavailable() *ReadEdgeClusterServiceUnavailable {
	return &ReadEdgeClusterServiceUnavailable{}
}

/*ReadEdgeClusterServiceUnavailable handles this case with default header values.

Service unavailable
*/
type ReadEdgeClusterServiceUnavailable struct {
	Payload *models.APIError
}

func (o *ReadEdgeClusterServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /edge-clusters/{edge-cluster-id}][%d] readEdgeClusterServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ReadEdgeClusterServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
