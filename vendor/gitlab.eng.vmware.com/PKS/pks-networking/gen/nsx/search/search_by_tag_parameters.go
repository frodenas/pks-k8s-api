// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSearchByTagParams creates a new SearchByTagParams object
// with the default values initialized.
func NewSearchByTagParams() *SearchByTagParams {
	var ()
	return &SearchByTagParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSearchByTagParamsWithTimeout creates a new SearchByTagParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSearchByTagParamsWithTimeout(timeout time.Duration) *SearchByTagParams {
	var ()
	return &SearchByTagParams{

		timeout: timeout,
	}
}

// NewSearchByTagParamsWithContext creates a new SearchByTagParams object
// with the default values initialized, and the ability to set a context for a request
func NewSearchByTagParamsWithContext(ctx context.Context) *SearchByTagParams {
	var ()
	return &SearchByTagParams{

		Context: ctx,
	}
}

// NewSearchByTagParamsWithHTTPClient creates a new SearchByTagParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSearchByTagParamsWithHTTPClient(client *http.Client) *SearchByTagParams {
	var ()
	return &SearchByTagParams{
		HTTPClient: client,
	}
}

/*SearchByTagParams contains all the parameters to send to the API endpoint
for the search by tag operation typically these are written to a http.Request
*/
type SearchByTagParams struct {

	/*Cursor
	  Opaque cursor to be used for getting next page of records (supplied
	by current result page)

	*/
	Cursor *string
	/*PageSize
	  Maximum number of results to return in this page (server may
	return fewer)

	*/
	PageSize *int64
	/*Query
	  Query

	*/
	Query string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the search by tag params
func (o *SearchByTagParams) WithTimeout(timeout time.Duration) *SearchByTagParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the search by tag params
func (o *SearchByTagParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the search by tag params
func (o *SearchByTagParams) WithContext(ctx context.Context) *SearchByTagParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the search by tag params
func (o *SearchByTagParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the search by tag params
func (o *SearchByTagParams) WithHTTPClient(client *http.Client) *SearchByTagParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the search by tag params
func (o *SearchByTagParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCursor adds the cursor to the search by tag params
func (o *SearchByTagParams) WithCursor(cursor *string) *SearchByTagParams {
	o.SetCursor(cursor)
	return o
}

// SetCursor adds the cursor to the search by tag params
func (o *SearchByTagParams) SetCursor(cursor *string) {
	o.Cursor = cursor
}

// WithPageSize adds the pageSize to the search by tag params
func (o *SearchByTagParams) WithPageSize(pageSize *int64) *SearchByTagParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the search by tag params
func (o *SearchByTagParams) SetPageSize(pageSize *int64) {
	o.PageSize = pageSize
}

// WithQuery adds the query to the search by tag params
func (o *SearchByTagParams) WithQuery(query string) *SearchByTagParams {
	o.SetQuery(query)
	return o
}

// SetQuery adds the query to the search by tag params
func (o *SearchByTagParams) SetQuery(query string) {
	o.Query = query
}

// WriteToRequest writes these params to a swagger request
func (o *SearchByTagParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Cursor != nil {

		// query param cursor
		var qrCursor string
		if o.Cursor != nil {
			qrCursor = *o.Cursor
		}
		qCursor := qrCursor
		if qCursor != "" {
			if err := r.SetQueryParam("cursor", qCursor); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize int64
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {
			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}

	}

	// query param query
	qrQuery := o.Query
	qQuery := qrQuery
	if qQuery != "" {
		if err := r.SetQueryParam("query", qQuery); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
