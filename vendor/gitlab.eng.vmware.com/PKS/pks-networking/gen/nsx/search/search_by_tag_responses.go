// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// SearchByTagReader is a Reader for the SearchByTag structure.
type SearchByTagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchByTagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSearchByTagOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSearchByTagBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSearchByTagForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSearchByTagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewSearchByTagPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSearchByTagInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewSearchByTagServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSearchByTagOK creates a SearchByTagOK with default headers values
func NewSearchByTagOK() *SearchByTagOK {
	return &SearchByTagOK{}
}

/*SearchByTagOK handles this case with default header values.

Success
*/
type SearchByTagOK struct {
	Payload *models.SearchResults
}

func (o *SearchByTagOK) Error() string {
	return fmt.Sprintf("[GET /search][%d] searchByTagOK  %+v", 200, o.Payload)
}

func (o *SearchByTagOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SearchResults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchByTagBadRequest creates a SearchByTagBadRequest with default headers values
func NewSearchByTagBadRequest() *SearchByTagBadRequest {
	return &SearchByTagBadRequest{}
}

/*SearchByTagBadRequest handles this case with default header values.

Bad request
*/
type SearchByTagBadRequest struct {
	Payload *models.APIError
}

func (o *SearchByTagBadRequest) Error() string {
	return fmt.Sprintf("[GET /search][%d] searchByTagBadRequest  %+v", 400, o.Payload)
}

func (o *SearchByTagBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchByTagForbidden creates a SearchByTagForbidden with default headers values
func NewSearchByTagForbidden() *SearchByTagForbidden {
	return &SearchByTagForbidden{}
}

/*SearchByTagForbidden handles this case with default header values.

Operation forbidden
*/
type SearchByTagForbidden struct {
	Payload *models.APIError
}

func (o *SearchByTagForbidden) Error() string {
	return fmt.Sprintf("[GET /search][%d] searchByTagForbidden  %+v", 403, o.Payload)
}

func (o *SearchByTagForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchByTagNotFound creates a SearchByTagNotFound with default headers values
func NewSearchByTagNotFound() *SearchByTagNotFound {
	return &SearchByTagNotFound{}
}

/*SearchByTagNotFound handles this case with default header values.

Resource not found
*/
type SearchByTagNotFound struct {
	Payload *models.APIError
}

func (o *SearchByTagNotFound) Error() string {
	return fmt.Sprintf("[GET /search][%d] searchByTagNotFound  %+v", 404, o.Payload)
}

func (o *SearchByTagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchByTagPreconditionFailed creates a SearchByTagPreconditionFailed with default headers values
func NewSearchByTagPreconditionFailed() *SearchByTagPreconditionFailed {
	return &SearchByTagPreconditionFailed{}
}

/*SearchByTagPreconditionFailed handles this case with default header values.

Precondition failed
*/
type SearchByTagPreconditionFailed struct {
	Payload *models.APIError
}

func (o *SearchByTagPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /search][%d] searchByTagPreconditionFailed  %+v", 412, o.Payload)
}

func (o *SearchByTagPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchByTagInternalServerError creates a SearchByTagInternalServerError with default headers values
func NewSearchByTagInternalServerError() *SearchByTagInternalServerError {
	return &SearchByTagInternalServerError{}
}

/*SearchByTagInternalServerError handles this case with default header values.

Internal server error
*/
type SearchByTagInternalServerError struct {
	Payload *models.APIError
}

func (o *SearchByTagInternalServerError) Error() string {
	return fmt.Sprintf("[GET /search][%d] searchByTagInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchByTagInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchByTagServiceUnavailable creates a SearchByTagServiceUnavailable with default headers values
func NewSearchByTagServiceUnavailable() *SearchByTagServiceUnavailable {
	return &SearchByTagServiceUnavailable{}
}

/*SearchByTagServiceUnavailable handles this case with default header values.

Service unavailable
*/
type SearchByTagServiceUnavailable struct {
	Payload *models.APIError
}

func (o *SearchByTagServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /search][%d] searchByTagServiceUnavailable  %+v", 503, o.Payload)
}

func (o *SearchByTagServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
