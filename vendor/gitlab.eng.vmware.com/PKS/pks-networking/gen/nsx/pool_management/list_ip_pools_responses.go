// Code generated by go-swagger; DO NOT EDIT.

package pool_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// ListIPPoolsReader is a Reader for the ListIPPools structure.
type ListIPPoolsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIPPoolsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListIPPoolsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListIPPoolsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListIPPoolsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListIPPoolsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewListIPPoolsPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListIPPoolsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewListIPPoolsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListIPPoolsOK creates a ListIPPoolsOK with default headers values
func NewListIPPoolsOK() *ListIPPoolsOK {
	return &ListIPPoolsOK{}
}

/*ListIPPoolsOK handles this case with default header values.

Success
*/
type ListIPPoolsOK struct {
	Payload *models.IPPoolListResult
}

func (o *ListIPPoolsOK) Error() string {
	return fmt.Sprintf("[GET /pools/ip-pools][%d] listIpPoolsOK  %+v", 200, o.Payload)
}

func (o *ListIPPoolsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IPPoolListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPPoolsBadRequest creates a ListIPPoolsBadRequest with default headers values
func NewListIPPoolsBadRequest() *ListIPPoolsBadRequest {
	return &ListIPPoolsBadRequest{}
}

/*ListIPPoolsBadRequest handles this case with default header values.

Bad request
*/
type ListIPPoolsBadRequest struct {
	Payload *models.APIError
}

func (o *ListIPPoolsBadRequest) Error() string {
	return fmt.Sprintf("[GET /pools/ip-pools][%d] listIpPoolsBadRequest  %+v", 400, o.Payload)
}

func (o *ListIPPoolsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPPoolsForbidden creates a ListIPPoolsForbidden with default headers values
func NewListIPPoolsForbidden() *ListIPPoolsForbidden {
	return &ListIPPoolsForbidden{}
}

/*ListIPPoolsForbidden handles this case with default header values.

Operation forbidden
*/
type ListIPPoolsForbidden struct {
	Payload *models.APIError
}

func (o *ListIPPoolsForbidden) Error() string {
	return fmt.Sprintf("[GET /pools/ip-pools][%d] listIpPoolsForbidden  %+v", 403, o.Payload)
}

func (o *ListIPPoolsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPPoolsNotFound creates a ListIPPoolsNotFound with default headers values
func NewListIPPoolsNotFound() *ListIPPoolsNotFound {
	return &ListIPPoolsNotFound{}
}

/*ListIPPoolsNotFound handles this case with default header values.

Resource not found
*/
type ListIPPoolsNotFound struct {
	Payload *models.APIError
}

func (o *ListIPPoolsNotFound) Error() string {
	return fmt.Sprintf("[GET /pools/ip-pools][%d] listIpPoolsNotFound  %+v", 404, o.Payload)
}

func (o *ListIPPoolsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPPoolsPreconditionFailed creates a ListIPPoolsPreconditionFailed with default headers values
func NewListIPPoolsPreconditionFailed() *ListIPPoolsPreconditionFailed {
	return &ListIPPoolsPreconditionFailed{}
}

/*ListIPPoolsPreconditionFailed handles this case with default header values.

Precondition failed
*/
type ListIPPoolsPreconditionFailed struct {
	Payload *models.APIError
}

func (o *ListIPPoolsPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /pools/ip-pools][%d] listIpPoolsPreconditionFailed  %+v", 412, o.Payload)
}

func (o *ListIPPoolsPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPPoolsInternalServerError creates a ListIPPoolsInternalServerError with default headers values
func NewListIPPoolsInternalServerError() *ListIPPoolsInternalServerError {
	return &ListIPPoolsInternalServerError{}
}

/*ListIPPoolsInternalServerError handles this case with default header values.

Internal server error
*/
type ListIPPoolsInternalServerError struct {
	Payload *models.APIError
}

func (o *ListIPPoolsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /pools/ip-pools][%d] listIpPoolsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListIPPoolsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPPoolsServiceUnavailable creates a ListIPPoolsServiceUnavailable with default headers values
func NewListIPPoolsServiceUnavailable() *ListIPPoolsServiceUnavailable {
	return &ListIPPoolsServiceUnavailable{}
}

/*ListIPPoolsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type ListIPPoolsServiceUnavailable struct {
	Payload *models.APIError
}

func (o *ListIPPoolsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /pools/ip-pools][%d] listIpPoolsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ListIPPoolsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
