// Code generated by go-swagger; DO NOT EDIT.

package pool_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// CreateIPBlockSubnetReader is a Reader for the CreateIPBlockSubnet structure.
type CreateIPBlockSubnetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateIPBlockSubnetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateIPBlockSubnetCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateIPBlockSubnetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateIPBlockSubnetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateIPBlockSubnetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateIPBlockSubnetConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewCreateIPBlockSubnetPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateIPBlockSubnetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewCreateIPBlockSubnetServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateIPBlockSubnetCreated creates a CreateIPBlockSubnetCreated with default headers values
func NewCreateIPBlockSubnetCreated() *CreateIPBlockSubnetCreated {
	return &CreateIPBlockSubnetCreated{}
}

/*CreateIPBlockSubnetCreated handles this case with default header values.

Resource created successfully
*/
type CreateIPBlockSubnetCreated struct {
	Payload *models.IPBlockSubnet
}

func (o *CreateIPBlockSubnetCreated) Error() string {
	return fmt.Sprintf("[POST /pools/ip-subnets][%d] createIpBlockSubnetCreated  %+v", 201, o.Payload)
}

func (o *CreateIPBlockSubnetCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IPBlockSubnet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPBlockSubnetBadRequest creates a CreateIPBlockSubnetBadRequest with default headers values
func NewCreateIPBlockSubnetBadRequest() *CreateIPBlockSubnetBadRequest {
	return &CreateIPBlockSubnetBadRequest{}
}

/*CreateIPBlockSubnetBadRequest handles this case with default header values.

Bad request
*/
type CreateIPBlockSubnetBadRequest struct {
	Payload *models.APIError
}

func (o *CreateIPBlockSubnetBadRequest) Error() string {
	return fmt.Sprintf("[POST /pools/ip-subnets][%d] createIpBlockSubnetBadRequest  %+v", 400, o.Payload)
}

func (o *CreateIPBlockSubnetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPBlockSubnetForbidden creates a CreateIPBlockSubnetForbidden with default headers values
func NewCreateIPBlockSubnetForbidden() *CreateIPBlockSubnetForbidden {
	return &CreateIPBlockSubnetForbidden{}
}

/*CreateIPBlockSubnetForbidden handles this case with default header values.

Operation forbidden
*/
type CreateIPBlockSubnetForbidden struct {
	Payload *models.APIError
}

func (o *CreateIPBlockSubnetForbidden) Error() string {
	return fmt.Sprintf("[POST /pools/ip-subnets][%d] createIpBlockSubnetForbidden  %+v", 403, o.Payload)
}

func (o *CreateIPBlockSubnetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPBlockSubnetNotFound creates a CreateIPBlockSubnetNotFound with default headers values
func NewCreateIPBlockSubnetNotFound() *CreateIPBlockSubnetNotFound {
	return &CreateIPBlockSubnetNotFound{}
}

/*CreateIPBlockSubnetNotFound handles this case with default header values.

Resource not found
*/
type CreateIPBlockSubnetNotFound struct {
	Payload *models.APIError
}

func (o *CreateIPBlockSubnetNotFound) Error() string {
	return fmt.Sprintf("[POST /pools/ip-subnets][%d] createIpBlockSubnetNotFound  %+v", 404, o.Payload)
}

func (o *CreateIPBlockSubnetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPBlockSubnetConflict creates a CreateIPBlockSubnetConflict with default headers values
func NewCreateIPBlockSubnetConflict() *CreateIPBlockSubnetConflict {
	return &CreateIPBlockSubnetConflict{}
}

/*CreateIPBlockSubnetConflict handles this case with default header values.

Resource conflict
*/
type CreateIPBlockSubnetConflict struct {
	Payload *models.APIError
}

func (o *CreateIPBlockSubnetConflict) Error() string {
	return fmt.Sprintf("[POST /pools/ip-subnets][%d] createIpBlockSubnetConflict  %+v", 409, o.Payload)
}

func (o *CreateIPBlockSubnetConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPBlockSubnetPreconditionFailed creates a CreateIPBlockSubnetPreconditionFailed with default headers values
func NewCreateIPBlockSubnetPreconditionFailed() *CreateIPBlockSubnetPreconditionFailed {
	return &CreateIPBlockSubnetPreconditionFailed{}
}

/*CreateIPBlockSubnetPreconditionFailed handles this case with default header values.

Precondition failed
*/
type CreateIPBlockSubnetPreconditionFailed struct {
	Payload *models.APIError
}

func (o *CreateIPBlockSubnetPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /pools/ip-subnets][%d] createIpBlockSubnetPreconditionFailed  %+v", 412, o.Payload)
}

func (o *CreateIPBlockSubnetPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPBlockSubnetInternalServerError creates a CreateIPBlockSubnetInternalServerError with default headers values
func NewCreateIPBlockSubnetInternalServerError() *CreateIPBlockSubnetInternalServerError {
	return &CreateIPBlockSubnetInternalServerError{}
}

/*CreateIPBlockSubnetInternalServerError handles this case with default header values.

Internal server error
*/
type CreateIPBlockSubnetInternalServerError struct {
	Payload *models.APIError
}

func (o *CreateIPBlockSubnetInternalServerError) Error() string {
	return fmt.Sprintf("[POST /pools/ip-subnets][%d] createIpBlockSubnetInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateIPBlockSubnetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPBlockSubnetServiceUnavailable creates a CreateIPBlockSubnetServiceUnavailable with default headers values
func NewCreateIPBlockSubnetServiceUnavailable() *CreateIPBlockSubnetServiceUnavailable {
	return &CreateIPBlockSubnetServiceUnavailable{}
}

/*CreateIPBlockSubnetServiceUnavailable handles this case with default header values.

Service unavailable
*/
type CreateIPBlockSubnetServiceUnavailable struct {
	Payload *models.APIError
}

func (o *CreateIPBlockSubnetServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /pools/ip-subnets][%d] createIpBlockSubnetServiceUnavailable  %+v", 503, o.Payload)
}

func (o *CreateIPBlockSubnetServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
