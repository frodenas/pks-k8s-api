// Code generated by go-swagger; DO NOT EDIT.

package pool_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// DeleteIPPoolReader is a Reader for the DeleteIPPool structure.
type DeleteIPPoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteIPPoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteIPPoolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteIPPoolBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteIPPoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteIPPoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewDeleteIPPoolPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteIPPoolInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteIPPoolServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteIPPoolOK creates a DeleteIPPoolOK with default headers values
func NewDeleteIPPoolOK() *DeleteIPPoolOK {
	return &DeleteIPPoolOK{}
}

/*DeleteIPPoolOK handles this case with default header values.

IP pool deletion was successful
*/
type DeleteIPPoolOK struct {
}

func (o *DeleteIPPoolOK) Error() string {
	return fmt.Sprintf("[DELETE /pools/ip-pools/{pool-id}][%d] deleteIpPoolOK ", 200)
}

func (o *DeleteIPPoolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIPPoolBadRequest creates a DeleteIPPoolBadRequest with default headers values
func NewDeleteIPPoolBadRequest() *DeleteIPPoolBadRequest {
	return &DeleteIPPoolBadRequest{}
}

/*DeleteIPPoolBadRequest handles this case with default header values.

Bad request
*/
type DeleteIPPoolBadRequest struct {
	Payload *models.APIError
}

func (o *DeleteIPPoolBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /pools/ip-pools/{pool-id}][%d] deleteIpPoolBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteIPPoolBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIPPoolForbidden creates a DeleteIPPoolForbidden with default headers values
func NewDeleteIPPoolForbidden() *DeleteIPPoolForbidden {
	return &DeleteIPPoolForbidden{}
}

/*DeleteIPPoolForbidden handles this case with default header values.

Operation forbidden
*/
type DeleteIPPoolForbidden struct {
	Payload *models.APIError
}

func (o *DeleteIPPoolForbidden) Error() string {
	return fmt.Sprintf("[DELETE /pools/ip-pools/{pool-id}][%d] deleteIpPoolForbidden  %+v", 403, o.Payload)
}

func (o *DeleteIPPoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIPPoolNotFound creates a DeleteIPPoolNotFound with default headers values
func NewDeleteIPPoolNotFound() *DeleteIPPoolNotFound {
	return &DeleteIPPoolNotFound{}
}

/*DeleteIPPoolNotFound handles this case with default header values.

Resource not found
*/
type DeleteIPPoolNotFound struct {
	Payload *models.APIError
}

func (o *DeleteIPPoolNotFound) Error() string {
	return fmt.Sprintf("[DELETE /pools/ip-pools/{pool-id}][%d] deleteIpPoolNotFound  %+v", 404, o.Payload)
}

func (o *DeleteIPPoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIPPoolPreconditionFailed creates a DeleteIPPoolPreconditionFailed with default headers values
func NewDeleteIPPoolPreconditionFailed() *DeleteIPPoolPreconditionFailed {
	return &DeleteIPPoolPreconditionFailed{}
}

/*DeleteIPPoolPreconditionFailed handles this case with default header values.

Precondition failed
*/
type DeleteIPPoolPreconditionFailed struct {
	Payload *models.APIError
}

func (o *DeleteIPPoolPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /pools/ip-pools/{pool-id}][%d] deleteIpPoolPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteIPPoolPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIPPoolInternalServerError creates a DeleteIPPoolInternalServerError with default headers values
func NewDeleteIPPoolInternalServerError() *DeleteIPPoolInternalServerError {
	return &DeleteIPPoolInternalServerError{}
}

/*DeleteIPPoolInternalServerError handles this case with default header values.

Internal server error
*/
type DeleteIPPoolInternalServerError struct {
	Payload *models.APIError
}

func (o *DeleteIPPoolInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /pools/ip-pools/{pool-id}][%d] deleteIpPoolInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteIPPoolInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIPPoolServiceUnavailable creates a DeleteIPPoolServiceUnavailable with default headers values
func NewDeleteIPPoolServiceUnavailable() *DeleteIPPoolServiceUnavailable {
	return &DeleteIPPoolServiceUnavailable{}
}

/*DeleteIPPoolServiceUnavailable handles this case with default header values.

Service unavailable
*/
type DeleteIPPoolServiceUnavailable struct {
	Payload *models.APIError
}

func (o *DeleteIPPoolServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /pools/ip-pools/{pool-id}][%d] deleteIpPoolServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteIPPoolServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
