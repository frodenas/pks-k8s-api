// Code generated by go-swagger; DO NOT EDIT.

package pool_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// CreateIPPoolReader is a Reader for the CreateIPPool structure.
type CreateIPPoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateIPPoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateIPPoolCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateIPPoolBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateIPPoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateIPPoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewCreateIPPoolPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateIPPoolInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewCreateIPPoolServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateIPPoolCreated creates a CreateIPPoolCreated with default headers values
func NewCreateIPPoolCreated() *CreateIPPoolCreated {
	return &CreateIPPoolCreated{}
}

/*CreateIPPoolCreated handles this case with default header values.

Resource created successfully
*/
type CreateIPPoolCreated struct {
	Payload *models.IPPool
}

func (o *CreateIPPoolCreated) Error() string {
	return fmt.Sprintf("[POST /pools/ip-pools][%d] createIpPoolCreated  %+v", 201, o.Payload)
}

func (o *CreateIPPoolCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IPPool)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPPoolBadRequest creates a CreateIPPoolBadRequest with default headers values
func NewCreateIPPoolBadRequest() *CreateIPPoolBadRequest {
	return &CreateIPPoolBadRequest{}
}

/*CreateIPPoolBadRequest handles this case with default header values.

Bad request
*/
type CreateIPPoolBadRequest struct {
	Payload *models.APIError
}

func (o *CreateIPPoolBadRequest) Error() string {
	return fmt.Sprintf("[POST /pools/ip-pools][%d] createIpPoolBadRequest  %+v", 400, o.Payload)
}

func (o *CreateIPPoolBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPPoolForbidden creates a CreateIPPoolForbidden with default headers values
func NewCreateIPPoolForbidden() *CreateIPPoolForbidden {
	return &CreateIPPoolForbidden{}
}

/*CreateIPPoolForbidden handles this case with default header values.

Operation forbidden
*/
type CreateIPPoolForbidden struct {
	Payload *models.APIError
}

func (o *CreateIPPoolForbidden) Error() string {
	return fmt.Sprintf("[POST /pools/ip-pools][%d] createIpPoolForbidden  %+v", 403, o.Payload)
}

func (o *CreateIPPoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPPoolNotFound creates a CreateIPPoolNotFound with default headers values
func NewCreateIPPoolNotFound() *CreateIPPoolNotFound {
	return &CreateIPPoolNotFound{}
}

/*CreateIPPoolNotFound handles this case with default header values.

Resource not found
*/
type CreateIPPoolNotFound struct {
	Payload *models.APIError
}

func (o *CreateIPPoolNotFound) Error() string {
	return fmt.Sprintf("[POST /pools/ip-pools][%d] createIpPoolNotFound  %+v", 404, o.Payload)
}

func (o *CreateIPPoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPPoolPreconditionFailed creates a CreateIPPoolPreconditionFailed with default headers values
func NewCreateIPPoolPreconditionFailed() *CreateIPPoolPreconditionFailed {
	return &CreateIPPoolPreconditionFailed{}
}

/*CreateIPPoolPreconditionFailed handles this case with default header values.

Precondition failed
*/
type CreateIPPoolPreconditionFailed struct {
	Payload *models.APIError
}

func (o *CreateIPPoolPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /pools/ip-pools][%d] createIpPoolPreconditionFailed  %+v", 412, o.Payload)
}

func (o *CreateIPPoolPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPPoolInternalServerError creates a CreateIPPoolInternalServerError with default headers values
func NewCreateIPPoolInternalServerError() *CreateIPPoolInternalServerError {
	return &CreateIPPoolInternalServerError{}
}

/*CreateIPPoolInternalServerError handles this case with default header values.

Internal server error
*/
type CreateIPPoolInternalServerError struct {
	Payload *models.APIError
}

func (o *CreateIPPoolInternalServerError) Error() string {
	return fmt.Sprintf("[POST /pools/ip-pools][%d] createIpPoolInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateIPPoolInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIPPoolServiceUnavailable creates a CreateIPPoolServiceUnavailable with default headers values
func NewCreateIPPoolServiceUnavailable() *CreateIPPoolServiceUnavailable {
	return &CreateIPPoolServiceUnavailable{}
}

/*CreateIPPoolServiceUnavailable handles this case with default header values.

Service unavailable
*/
type CreateIPPoolServiceUnavailable struct {
	Payload *models.APIError
}

func (o *CreateIPPoolServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /pools/ip-pools][%d] createIpPoolServiceUnavailable  %+v", 503, o.Payload)
}

func (o *CreateIPPoolServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
