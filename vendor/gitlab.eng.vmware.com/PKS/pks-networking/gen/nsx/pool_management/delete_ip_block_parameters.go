// Code generated by go-swagger; DO NOT EDIT.

package pool_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteIPBlockParams creates a new DeleteIPBlockParams object
// with the default values initialized.
func NewDeleteIPBlockParams() *DeleteIPBlockParams {
	var ()
	return &DeleteIPBlockParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteIPBlockParamsWithTimeout creates a new DeleteIPBlockParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteIPBlockParamsWithTimeout(timeout time.Duration) *DeleteIPBlockParams {
	var ()
	return &DeleteIPBlockParams{

		timeout: timeout,
	}
}

// NewDeleteIPBlockParamsWithContext creates a new DeleteIPBlockParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteIPBlockParamsWithContext(ctx context.Context) *DeleteIPBlockParams {
	var ()
	return &DeleteIPBlockParams{

		Context: ctx,
	}
}

// NewDeleteIPBlockParamsWithHTTPClient creates a new DeleteIPBlockParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteIPBlockParamsWithHTTPClient(client *http.Client) *DeleteIPBlockParams {
	var ()
	return &DeleteIPBlockParams{
		HTTPClient: client,
	}
}

/*DeleteIPBlockParams contains all the parameters to send to the API endpoint
for the delete Ip block operation typically these are written to a http.Request
*/
type DeleteIPBlockParams struct {

	/*BlockID
	  IP address block id

	*/
	BlockID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete Ip block params
func (o *DeleteIPBlockParams) WithTimeout(timeout time.Duration) *DeleteIPBlockParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete Ip block params
func (o *DeleteIPBlockParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete Ip block params
func (o *DeleteIPBlockParams) WithContext(ctx context.Context) *DeleteIPBlockParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete Ip block params
func (o *DeleteIPBlockParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete Ip block params
func (o *DeleteIPBlockParams) WithHTTPClient(client *http.Client) *DeleteIPBlockParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete Ip block params
func (o *DeleteIPBlockParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBlockID adds the blockID to the delete Ip block params
func (o *DeleteIPBlockParams) WithBlockID(blockID string) *DeleteIPBlockParams {
	o.SetBlockID(blockID)
	return o
}

// SetBlockID adds the blockId to the delete Ip block params
func (o *DeleteIPBlockParams) SetBlockID(blockID string) {
	o.BlockID = blockID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteIPBlockParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param block-id
	if err := r.SetPathParam("block-id", o.BlockID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
