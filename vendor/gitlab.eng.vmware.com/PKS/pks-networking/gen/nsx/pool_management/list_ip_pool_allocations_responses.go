// Code generated by go-swagger; DO NOT EDIT.

package pool_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// ListIPPoolAllocationsReader is a Reader for the ListIPPoolAllocations structure.
type ListIPPoolAllocationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIPPoolAllocationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListIPPoolAllocationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListIPPoolAllocationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListIPPoolAllocationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListIPPoolAllocationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewListIPPoolAllocationsPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListIPPoolAllocationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewListIPPoolAllocationsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListIPPoolAllocationsOK creates a ListIPPoolAllocationsOK with default headers values
func NewListIPPoolAllocationsOK() *ListIPPoolAllocationsOK {
	return &ListIPPoolAllocationsOK{}
}

/*ListIPPoolAllocationsOK handles this case with default header values.

Success
*/
type ListIPPoolAllocationsOK struct {
	Payload *models.AllocationIPAddressListResult
}

func (o *ListIPPoolAllocationsOK) Error() string {
	return fmt.Sprintf("[GET /pools/ip-pools/{pool-id}/allocations][%d] listIpPoolAllocationsOK  %+v", 200, o.Payload)
}

func (o *ListIPPoolAllocationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AllocationIPAddressListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPPoolAllocationsBadRequest creates a ListIPPoolAllocationsBadRequest with default headers values
func NewListIPPoolAllocationsBadRequest() *ListIPPoolAllocationsBadRequest {
	return &ListIPPoolAllocationsBadRequest{}
}

/*ListIPPoolAllocationsBadRequest handles this case with default header values.

Bad request
*/
type ListIPPoolAllocationsBadRequest struct {
	Payload *models.APIError
}

func (o *ListIPPoolAllocationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /pools/ip-pools/{pool-id}/allocations][%d] listIpPoolAllocationsBadRequest  %+v", 400, o.Payload)
}

func (o *ListIPPoolAllocationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPPoolAllocationsForbidden creates a ListIPPoolAllocationsForbidden with default headers values
func NewListIPPoolAllocationsForbidden() *ListIPPoolAllocationsForbidden {
	return &ListIPPoolAllocationsForbidden{}
}

/*ListIPPoolAllocationsForbidden handles this case with default header values.

Operation forbidden
*/
type ListIPPoolAllocationsForbidden struct {
	Payload *models.APIError
}

func (o *ListIPPoolAllocationsForbidden) Error() string {
	return fmt.Sprintf("[GET /pools/ip-pools/{pool-id}/allocations][%d] listIpPoolAllocationsForbidden  %+v", 403, o.Payload)
}

func (o *ListIPPoolAllocationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPPoolAllocationsNotFound creates a ListIPPoolAllocationsNotFound with default headers values
func NewListIPPoolAllocationsNotFound() *ListIPPoolAllocationsNotFound {
	return &ListIPPoolAllocationsNotFound{}
}

/*ListIPPoolAllocationsNotFound handles this case with default header values.

Resource not found
*/
type ListIPPoolAllocationsNotFound struct {
	Payload *models.APIError
}

func (o *ListIPPoolAllocationsNotFound) Error() string {
	return fmt.Sprintf("[GET /pools/ip-pools/{pool-id}/allocations][%d] listIpPoolAllocationsNotFound  %+v", 404, o.Payload)
}

func (o *ListIPPoolAllocationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPPoolAllocationsPreconditionFailed creates a ListIPPoolAllocationsPreconditionFailed with default headers values
func NewListIPPoolAllocationsPreconditionFailed() *ListIPPoolAllocationsPreconditionFailed {
	return &ListIPPoolAllocationsPreconditionFailed{}
}

/*ListIPPoolAllocationsPreconditionFailed handles this case with default header values.

Precondition failed
*/
type ListIPPoolAllocationsPreconditionFailed struct {
	Payload *models.APIError
}

func (o *ListIPPoolAllocationsPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /pools/ip-pools/{pool-id}/allocations][%d] listIpPoolAllocationsPreconditionFailed  %+v", 412, o.Payload)
}

func (o *ListIPPoolAllocationsPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPPoolAllocationsInternalServerError creates a ListIPPoolAllocationsInternalServerError with default headers values
func NewListIPPoolAllocationsInternalServerError() *ListIPPoolAllocationsInternalServerError {
	return &ListIPPoolAllocationsInternalServerError{}
}

/*ListIPPoolAllocationsInternalServerError handles this case with default header values.

Internal server error
*/
type ListIPPoolAllocationsInternalServerError struct {
	Payload *models.APIError
}

func (o *ListIPPoolAllocationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /pools/ip-pools/{pool-id}/allocations][%d] listIpPoolAllocationsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListIPPoolAllocationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPPoolAllocationsServiceUnavailable creates a ListIPPoolAllocationsServiceUnavailable with default headers values
func NewListIPPoolAllocationsServiceUnavailable() *ListIPPoolAllocationsServiceUnavailable {
	return &ListIPPoolAllocationsServiceUnavailable{}
}

/*ListIPPoolAllocationsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type ListIPPoolAllocationsServiceUnavailable struct {
	Payload *models.APIError
}

func (o *ListIPPoolAllocationsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /pools/ip-pools/{pool-id}/allocations][%d] listIpPoolAllocationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ListIPPoolAllocationsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
