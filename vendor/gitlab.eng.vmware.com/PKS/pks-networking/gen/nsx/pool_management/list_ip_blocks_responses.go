// Code generated by go-swagger; DO NOT EDIT.

package pool_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// ListIPBlocksReader is a Reader for the ListIPBlocks structure.
type ListIPBlocksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIPBlocksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListIPBlocksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListIPBlocksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListIPBlocksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListIPBlocksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewListIPBlocksPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListIPBlocksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewListIPBlocksServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListIPBlocksOK creates a ListIPBlocksOK with default headers values
func NewListIPBlocksOK() *ListIPBlocksOK {
	return &ListIPBlocksOK{}
}

/*ListIPBlocksOK handles this case with default header values.

Success
*/
type ListIPBlocksOK struct {
	Payload *models.IPBlockListResult
}

func (o *ListIPBlocksOK) Error() string {
	return fmt.Sprintf("[GET /pools/ip-blocks][%d] listIpBlocksOK  %+v", 200, o.Payload)
}

func (o *ListIPBlocksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IPBlockListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPBlocksBadRequest creates a ListIPBlocksBadRequest with default headers values
func NewListIPBlocksBadRequest() *ListIPBlocksBadRequest {
	return &ListIPBlocksBadRequest{}
}

/*ListIPBlocksBadRequest handles this case with default header values.

Bad request
*/
type ListIPBlocksBadRequest struct {
	Payload *models.APIError
}

func (o *ListIPBlocksBadRequest) Error() string {
	return fmt.Sprintf("[GET /pools/ip-blocks][%d] listIpBlocksBadRequest  %+v", 400, o.Payload)
}

func (o *ListIPBlocksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPBlocksForbidden creates a ListIPBlocksForbidden with default headers values
func NewListIPBlocksForbidden() *ListIPBlocksForbidden {
	return &ListIPBlocksForbidden{}
}

/*ListIPBlocksForbidden handles this case with default header values.

Operation forbidden
*/
type ListIPBlocksForbidden struct {
	Payload *models.APIError
}

func (o *ListIPBlocksForbidden) Error() string {
	return fmt.Sprintf("[GET /pools/ip-blocks][%d] listIpBlocksForbidden  %+v", 403, o.Payload)
}

func (o *ListIPBlocksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPBlocksNotFound creates a ListIPBlocksNotFound with default headers values
func NewListIPBlocksNotFound() *ListIPBlocksNotFound {
	return &ListIPBlocksNotFound{}
}

/*ListIPBlocksNotFound handles this case with default header values.

Resource not found
*/
type ListIPBlocksNotFound struct {
	Payload *models.APIError
}

func (o *ListIPBlocksNotFound) Error() string {
	return fmt.Sprintf("[GET /pools/ip-blocks][%d] listIpBlocksNotFound  %+v", 404, o.Payload)
}

func (o *ListIPBlocksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPBlocksPreconditionFailed creates a ListIPBlocksPreconditionFailed with default headers values
func NewListIPBlocksPreconditionFailed() *ListIPBlocksPreconditionFailed {
	return &ListIPBlocksPreconditionFailed{}
}

/*ListIPBlocksPreconditionFailed handles this case with default header values.

Precondition failed
*/
type ListIPBlocksPreconditionFailed struct {
	Payload *models.APIError
}

func (o *ListIPBlocksPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /pools/ip-blocks][%d] listIpBlocksPreconditionFailed  %+v", 412, o.Payload)
}

func (o *ListIPBlocksPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPBlocksInternalServerError creates a ListIPBlocksInternalServerError with default headers values
func NewListIPBlocksInternalServerError() *ListIPBlocksInternalServerError {
	return &ListIPBlocksInternalServerError{}
}

/*ListIPBlocksInternalServerError handles this case with default header values.

Internal server error
*/
type ListIPBlocksInternalServerError struct {
	Payload *models.APIError
}

func (o *ListIPBlocksInternalServerError) Error() string {
	return fmt.Sprintf("[GET /pools/ip-blocks][%d] listIpBlocksInternalServerError  %+v", 500, o.Payload)
}

func (o *ListIPBlocksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPBlocksServiceUnavailable creates a ListIPBlocksServiceUnavailable with default headers values
func NewListIPBlocksServiceUnavailable() *ListIPBlocksServiceUnavailable {
	return &ListIPBlocksServiceUnavailable{}
}

/*ListIPBlocksServiceUnavailable handles this case with default header values.

Service unavailable
*/
type ListIPBlocksServiceUnavailable struct {
	Payload *models.APIError
}

func (o *ListIPBlocksServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /pools/ip-blocks][%d] listIpBlocksServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ListIPBlocksServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
