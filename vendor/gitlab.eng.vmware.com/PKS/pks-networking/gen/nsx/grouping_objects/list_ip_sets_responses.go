// Code generated by go-swagger; DO NOT EDIT.

package grouping_objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// ListIPSetsReader is a Reader for the ListIPSets structure.
type ListIPSetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIPSetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListIPSetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListIPSetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListIPSetsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListIPSetsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewListIPSetsPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListIPSetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewListIPSetsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListIPSetsOK creates a ListIPSetsOK with default headers values
func NewListIPSetsOK() *ListIPSetsOK {
	return &ListIPSetsOK{}
}

/*ListIPSetsOK handles this case with default header values.

OK
*/
type ListIPSetsOK struct {
	Payload *models.IPSetListResult
}

func (o *ListIPSetsOK) Error() string {
	return fmt.Sprintf("[GET /ip-sets][%d] listIpSetsOK  %+v", 200, o.Payload)
}

func (o *ListIPSetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IPSetListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPSetsBadRequest creates a ListIPSetsBadRequest with default headers values
func NewListIPSetsBadRequest() *ListIPSetsBadRequest {
	return &ListIPSetsBadRequest{}
}

/*ListIPSetsBadRequest handles this case with default header values.

Bad request
*/
type ListIPSetsBadRequest struct {
	Payload *models.APIError
}

func (o *ListIPSetsBadRequest) Error() string {
	return fmt.Sprintf("[GET /ip-sets][%d] listIpSetsBadRequest  %+v", 400, o.Payload)
}

func (o *ListIPSetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPSetsForbidden creates a ListIPSetsForbidden with default headers values
func NewListIPSetsForbidden() *ListIPSetsForbidden {
	return &ListIPSetsForbidden{}
}

/*ListIPSetsForbidden handles this case with default header values.

Operation forbidden
*/
type ListIPSetsForbidden struct {
	Payload *models.APIError
}

func (o *ListIPSetsForbidden) Error() string {
	return fmt.Sprintf("[GET /ip-sets][%d] listIpSetsForbidden  %+v", 403, o.Payload)
}

func (o *ListIPSetsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPSetsNotFound creates a ListIPSetsNotFound with default headers values
func NewListIPSetsNotFound() *ListIPSetsNotFound {
	return &ListIPSetsNotFound{}
}

/*ListIPSetsNotFound handles this case with default header values.

Resource not found
*/
type ListIPSetsNotFound struct {
	Payload *models.APIError
}

func (o *ListIPSetsNotFound) Error() string {
	return fmt.Sprintf("[GET /ip-sets][%d] listIpSetsNotFound  %+v", 404, o.Payload)
}

func (o *ListIPSetsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPSetsPreconditionFailed creates a ListIPSetsPreconditionFailed with default headers values
func NewListIPSetsPreconditionFailed() *ListIPSetsPreconditionFailed {
	return &ListIPSetsPreconditionFailed{}
}

/*ListIPSetsPreconditionFailed handles this case with default header values.

Precondition failed
*/
type ListIPSetsPreconditionFailed struct {
	Payload *models.APIError
}

func (o *ListIPSetsPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /ip-sets][%d] listIpSetsPreconditionFailed  %+v", 412, o.Payload)
}

func (o *ListIPSetsPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPSetsInternalServerError creates a ListIPSetsInternalServerError with default headers values
func NewListIPSetsInternalServerError() *ListIPSetsInternalServerError {
	return &ListIPSetsInternalServerError{}
}

/*ListIPSetsInternalServerError handles this case with default header values.

Internal server error
*/
type ListIPSetsInternalServerError struct {
	Payload *models.APIError
}

func (o *ListIPSetsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /ip-sets][%d] listIpSetsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListIPSetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIPSetsServiceUnavailable creates a ListIPSetsServiceUnavailable with default headers values
func NewListIPSetsServiceUnavailable() *ListIPSetsServiceUnavailable {
	return &ListIPSetsServiceUnavailable{}
}

/*ListIPSetsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type ListIPSetsServiceUnavailable struct {
	Payload *models.APIError
}

func (o *ListIPSetsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /ip-sets][%d] listIpSetsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ListIPSetsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
