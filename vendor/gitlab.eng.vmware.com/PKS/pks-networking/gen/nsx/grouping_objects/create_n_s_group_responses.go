// Code generated by go-swagger; DO NOT EDIT.

package grouping_objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// CreateNSGroupReader is a Reader for the CreateNSGroup structure.
type CreateNSGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateNSGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateNSGroupCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateNSGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateNSGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateNSGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewCreateNSGroupPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateNSGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewCreateNSGroupServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateNSGroupCreated creates a CreateNSGroupCreated with default headers values
func NewCreateNSGroupCreated() *CreateNSGroupCreated {
	return &CreateNSGroupCreated{}
}

/*CreateNSGroupCreated handles this case with default header values.

Created
*/
type CreateNSGroupCreated struct {
	Payload *models.NSGroup
}

func (o *CreateNSGroupCreated) Error() string {
	return fmt.Sprintf("[POST /ns-groups][%d] createNSGroupCreated  %+v", 201, o.Payload)
}

func (o *CreateNSGroupCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NSGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNSGroupBadRequest creates a CreateNSGroupBadRequest with default headers values
func NewCreateNSGroupBadRequest() *CreateNSGroupBadRequest {
	return &CreateNSGroupBadRequest{}
}

/*CreateNSGroupBadRequest handles this case with default header values.

Bad request
*/
type CreateNSGroupBadRequest struct {
	Payload *models.APIError
}

func (o *CreateNSGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /ns-groups][%d] createNSGroupBadRequest  %+v", 400, o.Payload)
}

func (o *CreateNSGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNSGroupForbidden creates a CreateNSGroupForbidden with default headers values
func NewCreateNSGroupForbidden() *CreateNSGroupForbidden {
	return &CreateNSGroupForbidden{}
}

/*CreateNSGroupForbidden handles this case with default header values.

Operation forbidden
*/
type CreateNSGroupForbidden struct {
	Payload *models.APIError
}

func (o *CreateNSGroupForbidden) Error() string {
	return fmt.Sprintf("[POST /ns-groups][%d] createNSGroupForbidden  %+v", 403, o.Payload)
}

func (o *CreateNSGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNSGroupNotFound creates a CreateNSGroupNotFound with default headers values
func NewCreateNSGroupNotFound() *CreateNSGroupNotFound {
	return &CreateNSGroupNotFound{}
}

/*CreateNSGroupNotFound handles this case with default header values.

Resource not found
*/
type CreateNSGroupNotFound struct {
	Payload *models.APIError
}

func (o *CreateNSGroupNotFound) Error() string {
	return fmt.Sprintf("[POST /ns-groups][%d] createNSGroupNotFound  %+v", 404, o.Payload)
}

func (o *CreateNSGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNSGroupPreconditionFailed creates a CreateNSGroupPreconditionFailed with default headers values
func NewCreateNSGroupPreconditionFailed() *CreateNSGroupPreconditionFailed {
	return &CreateNSGroupPreconditionFailed{}
}

/*CreateNSGroupPreconditionFailed handles this case with default header values.

Precondition failed
*/
type CreateNSGroupPreconditionFailed struct {
	Payload *models.APIError
}

func (o *CreateNSGroupPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /ns-groups][%d] createNSGroupPreconditionFailed  %+v", 412, o.Payload)
}

func (o *CreateNSGroupPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNSGroupInternalServerError creates a CreateNSGroupInternalServerError with default headers values
func NewCreateNSGroupInternalServerError() *CreateNSGroupInternalServerError {
	return &CreateNSGroupInternalServerError{}
}

/*CreateNSGroupInternalServerError handles this case with default header values.

Internal server error
*/
type CreateNSGroupInternalServerError struct {
	Payload *models.APIError
}

func (o *CreateNSGroupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ns-groups][%d] createNSGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateNSGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNSGroupServiceUnavailable creates a CreateNSGroupServiceUnavailable with default headers values
func NewCreateNSGroupServiceUnavailable() *CreateNSGroupServiceUnavailable {
	return &CreateNSGroupServiceUnavailable{}
}

/*CreateNSGroupServiceUnavailable handles this case with default header values.

Service unavailable
*/
type CreateNSGroupServiceUnavailable struct {
	Payload *models.APIError
}

func (o *CreateNSGroupServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /ns-groups][%d] createNSGroupServiceUnavailable  %+v", 503, o.Payload)
}

func (o *CreateNSGroupServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
