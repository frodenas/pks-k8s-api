// Code generated by go-swagger; DO NOT EDIT.

package logical_switching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// DeleteLogicalPortReader is a Reader for the DeleteLogicalPort structure.
type DeleteLogicalPortReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLogicalPortReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteLogicalPortOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteLogicalPortBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteLogicalPortForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteLogicalPortNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewDeleteLogicalPortPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteLogicalPortInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteLogicalPortServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteLogicalPortOK creates a DeleteLogicalPortOK with default headers values
func NewDeleteLogicalPortOK() *DeleteLogicalPortOK {
	return &DeleteLogicalPortOK{}
}

/*DeleteLogicalPortOK handles this case with default header values.

OK
*/
type DeleteLogicalPortOK struct {
}

func (o *DeleteLogicalPortOK) Error() string {
	return fmt.Sprintf("[DELETE /logical-ports/{lport-id}][%d] deleteLogicalPortOK ", 200)
}

func (o *DeleteLogicalPortOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLogicalPortBadRequest creates a DeleteLogicalPortBadRequest with default headers values
func NewDeleteLogicalPortBadRequest() *DeleteLogicalPortBadRequest {
	return &DeleteLogicalPortBadRequest{}
}

/*DeleteLogicalPortBadRequest handles this case with default header values.

Bad request
*/
type DeleteLogicalPortBadRequest struct {
	Payload *models.APIError
}

func (o *DeleteLogicalPortBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /logical-ports/{lport-id}][%d] deleteLogicalPortBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLogicalPortBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogicalPortForbidden creates a DeleteLogicalPortForbidden with default headers values
func NewDeleteLogicalPortForbidden() *DeleteLogicalPortForbidden {
	return &DeleteLogicalPortForbidden{}
}

/*DeleteLogicalPortForbidden handles this case with default header values.

Operation forbidden
*/
type DeleteLogicalPortForbidden struct {
	Payload *models.APIError
}

func (o *DeleteLogicalPortForbidden) Error() string {
	return fmt.Sprintf("[DELETE /logical-ports/{lport-id}][%d] deleteLogicalPortForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLogicalPortForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogicalPortNotFound creates a DeleteLogicalPortNotFound with default headers values
func NewDeleteLogicalPortNotFound() *DeleteLogicalPortNotFound {
	return &DeleteLogicalPortNotFound{}
}

/*DeleteLogicalPortNotFound handles this case with default header values.

Resource not found
*/
type DeleteLogicalPortNotFound struct {
	Payload *models.APIError
}

func (o *DeleteLogicalPortNotFound) Error() string {
	return fmt.Sprintf("[DELETE /logical-ports/{lport-id}][%d] deleteLogicalPortNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLogicalPortNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogicalPortPreconditionFailed creates a DeleteLogicalPortPreconditionFailed with default headers values
func NewDeleteLogicalPortPreconditionFailed() *DeleteLogicalPortPreconditionFailed {
	return &DeleteLogicalPortPreconditionFailed{}
}

/*DeleteLogicalPortPreconditionFailed handles this case with default header values.

Precondition failed
*/
type DeleteLogicalPortPreconditionFailed struct {
	Payload *models.APIError
}

func (o *DeleteLogicalPortPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /logical-ports/{lport-id}][%d] deleteLogicalPortPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteLogicalPortPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogicalPortInternalServerError creates a DeleteLogicalPortInternalServerError with default headers values
func NewDeleteLogicalPortInternalServerError() *DeleteLogicalPortInternalServerError {
	return &DeleteLogicalPortInternalServerError{}
}

/*DeleteLogicalPortInternalServerError handles this case with default header values.

Internal server error
*/
type DeleteLogicalPortInternalServerError struct {
	Payload *models.APIError
}

func (o *DeleteLogicalPortInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /logical-ports/{lport-id}][%d] deleteLogicalPortInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLogicalPortInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogicalPortServiceUnavailable creates a DeleteLogicalPortServiceUnavailable with default headers values
func NewDeleteLogicalPortServiceUnavailable() *DeleteLogicalPortServiceUnavailable {
	return &DeleteLogicalPortServiceUnavailable{}
}

/*DeleteLogicalPortServiceUnavailable handles this case with default header values.

Service unavailable
*/
type DeleteLogicalPortServiceUnavailable struct {
	Payload *models.APIError
}

func (o *DeleteLogicalPortServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /logical-ports/{lport-id}][%d] deleteLogicalPortServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteLogicalPortServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
