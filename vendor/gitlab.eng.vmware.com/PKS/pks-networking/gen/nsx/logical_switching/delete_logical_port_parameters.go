// Code generated by go-swagger; DO NOT EDIT.

package logical_switching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteLogicalPortParams creates a new DeleteLogicalPortParams object
// with the default values initialized.
func NewDeleteLogicalPortParams() *DeleteLogicalPortParams {
	var (
		detachDefault = bool(false)
	)
	return &DeleteLogicalPortParams{
		Detach: &detachDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteLogicalPortParamsWithTimeout creates a new DeleteLogicalPortParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteLogicalPortParamsWithTimeout(timeout time.Duration) *DeleteLogicalPortParams {
	var (
		detachDefault = bool(false)
	)
	return &DeleteLogicalPortParams{
		Detach: &detachDefault,

		timeout: timeout,
	}
}

// NewDeleteLogicalPortParamsWithContext creates a new DeleteLogicalPortParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteLogicalPortParamsWithContext(ctx context.Context) *DeleteLogicalPortParams {
	var (
		detachDefault = bool(false)
	)
	return &DeleteLogicalPortParams{
		Detach: &detachDefault,

		Context: ctx,
	}
}

// NewDeleteLogicalPortParamsWithHTTPClient creates a new DeleteLogicalPortParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteLogicalPortParamsWithHTTPClient(client *http.Client) *DeleteLogicalPortParams {
	var (
		detachDefault = bool(false)
	)
	return &DeleteLogicalPortParams{
		Detach:     &detachDefault,
		HTTPClient: client,
	}
}

/*DeleteLogicalPortParams contains all the parameters to send to the API endpoint
for the delete logical port operation typically these are written to a http.Request
*/
type DeleteLogicalPortParams struct {

	/*Detach
	  force delete even if attached or referenced by a group

	*/
	Detach *bool
	/*LportID*/
	LportID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete logical port params
func (o *DeleteLogicalPortParams) WithTimeout(timeout time.Duration) *DeleteLogicalPortParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete logical port params
func (o *DeleteLogicalPortParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete logical port params
func (o *DeleteLogicalPortParams) WithContext(ctx context.Context) *DeleteLogicalPortParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete logical port params
func (o *DeleteLogicalPortParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete logical port params
func (o *DeleteLogicalPortParams) WithHTTPClient(client *http.Client) *DeleteLogicalPortParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete logical port params
func (o *DeleteLogicalPortParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDetach adds the detach to the delete logical port params
func (o *DeleteLogicalPortParams) WithDetach(detach *bool) *DeleteLogicalPortParams {
	o.SetDetach(detach)
	return o
}

// SetDetach adds the detach to the delete logical port params
func (o *DeleteLogicalPortParams) SetDetach(detach *bool) {
	o.Detach = detach
}

// WithLportID adds the lportID to the delete logical port params
func (o *DeleteLogicalPortParams) WithLportID(lportID string) *DeleteLogicalPortParams {
	o.SetLportID(lportID)
	return o
}

// SetLportID adds the lportId to the delete logical port params
func (o *DeleteLogicalPortParams) SetLportID(lportID string) {
	o.LportID = lportID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteLogicalPortParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Detach != nil {

		// query param detach
		var qrDetach bool
		if o.Detach != nil {
			qrDetach = *o.Detach
		}
		qDetach := swag.FormatBool(qrDetach)
		if qDetach != "" {
			if err := r.SetQueryParam("detach", qDetach); err != nil {
				return err
			}
		}

	}

	// path param lport-id
	if err := r.SetPathParam("lport-id", o.LportID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
