// Code generated by go-swagger; DO NOT EDIT.

package logical_switching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// NewCreateLogicalPortParams creates a new CreateLogicalPortParams object
// with the default values initialized.
func NewCreateLogicalPortParams() *CreateLogicalPortParams {
	var ()
	return &CreateLogicalPortParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateLogicalPortParamsWithTimeout creates a new CreateLogicalPortParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateLogicalPortParamsWithTimeout(timeout time.Duration) *CreateLogicalPortParams {
	var ()
	return &CreateLogicalPortParams{

		timeout: timeout,
	}
}

// NewCreateLogicalPortParamsWithContext creates a new CreateLogicalPortParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateLogicalPortParamsWithContext(ctx context.Context) *CreateLogicalPortParams {
	var ()
	return &CreateLogicalPortParams{

		Context: ctx,
	}
}

// NewCreateLogicalPortParamsWithHTTPClient creates a new CreateLogicalPortParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateLogicalPortParamsWithHTTPClient(client *http.Client) *CreateLogicalPortParams {
	var ()
	return &CreateLogicalPortParams{
		HTTPClient: client,
	}
}

/*CreateLogicalPortParams contains all the parameters to send to the API endpoint
for the create logical port operation typically these are written to a http.Request
*/
type CreateLogicalPortParams struct {

	/*LogicalPort*/
	LogicalPort *models.LogicalPort

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create logical port params
func (o *CreateLogicalPortParams) WithTimeout(timeout time.Duration) *CreateLogicalPortParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create logical port params
func (o *CreateLogicalPortParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create logical port params
func (o *CreateLogicalPortParams) WithContext(ctx context.Context) *CreateLogicalPortParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create logical port params
func (o *CreateLogicalPortParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create logical port params
func (o *CreateLogicalPortParams) WithHTTPClient(client *http.Client) *CreateLogicalPortParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create logical port params
func (o *CreateLogicalPortParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLogicalPort adds the logicalPort to the create logical port params
func (o *CreateLogicalPortParams) WithLogicalPort(logicalPort *models.LogicalPort) *CreateLogicalPortParams {
	o.SetLogicalPort(logicalPort)
	return o
}

// SetLogicalPort adds the logicalPort to the create logical port params
func (o *CreateLogicalPortParams) SetLogicalPort(logicalPort *models.LogicalPort) {
	o.LogicalPort = logicalPort
}

// WriteToRequest writes these params to a swagger request
func (o *CreateLogicalPortParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.LogicalPort == nil {
		o.LogicalPort = new(models.LogicalPort)
	}

	if err := r.SetBodyParam(o.LogicalPort); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
