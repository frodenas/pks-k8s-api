// Code generated by go-swagger; DO NOT EDIT.

package logical_switching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// ListLogicalSwitchesReader is a Reader for the ListLogicalSwitches structure.
type ListLogicalSwitchesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListLogicalSwitchesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListLogicalSwitchesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListLogicalSwitchesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListLogicalSwitchesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListLogicalSwitchesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewListLogicalSwitchesPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListLogicalSwitchesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewListLogicalSwitchesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListLogicalSwitchesOK creates a ListLogicalSwitchesOK with default headers values
func NewListLogicalSwitchesOK() *ListLogicalSwitchesOK {
	return &ListLogicalSwitchesOK{}
}

/*ListLogicalSwitchesOK handles this case with default header values.

Success
*/
type ListLogicalSwitchesOK struct {
	Payload *models.LogicalSwitchListResult
}

func (o *ListLogicalSwitchesOK) Error() string {
	return fmt.Sprintf("[GET /logical-switches][%d] listLogicalSwitchesOK  %+v", 200, o.Payload)
}

func (o *ListLogicalSwitchesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogicalSwitchListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLogicalSwitchesBadRequest creates a ListLogicalSwitchesBadRequest with default headers values
func NewListLogicalSwitchesBadRequest() *ListLogicalSwitchesBadRequest {
	return &ListLogicalSwitchesBadRequest{}
}

/*ListLogicalSwitchesBadRequest handles this case with default header values.

Bad request
*/
type ListLogicalSwitchesBadRequest struct {
	Payload *models.APIError
}

func (o *ListLogicalSwitchesBadRequest) Error() string {
	return fmt.Sprintf("[GET /logical-switches][%d] listLogicalSwitchesBadRequest  %+v", 400, o.Payload)
}

func (o *ListLogicalSwitchesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLogicalSwitchesForbidden creates a ListLogicalSwitchesForbidden with default headers values
func NewListLogicalSwitchesForbidden() *ListLogicalSwitchesForbidden {
	return &ListLogicalSwitchesForbidden{}
}

/*ListLogicalSwitchesForbidden handles this case with default header values.

Operation forbidden
*/
type ListLogicalSwitchesForbidden struct {
	Payload *models.APIError
}

func (o *ListLogicalSwitchesForbidden) Error() string {
	return fmt.Sprintf("[GET /logical-switches][%d] listLogicalSwitchesForbidden  %+v", 403, o.Payload)
}

func (o *ListLogicalSwitchesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLogicalSwitchesNotFound creates a ListLogicalSwitchesNotFound with default headers values
func NewListLogicalSwitchesNotFound() *ListLogicalSwitchesNotFound {
	return &ListLogicalSwitchesNotFound{}
}

/*ListLogicalSwitchesNotFound handles this case with default header values.

Resource not found
*/
type ListLogicalSwitchesNotFound struct {
	Payload *models.APIError
}

func (o *ListLogicalSwitchesNotFound) Error() string {
	return fmt.Sprintf("[GET /logical-switches][%d] listLogicalSwitchesNotFound  %+v", 404, o.Payload)
}

func (o *ListLogicalSwitchesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLogicalSwitchesPreconditionFailed creates a ListLogicalSwitchesPreconditionFailed with default headers values
func NewListLogicalSwitchesPreconditionFailed() *ListLogicalSwitchesPreconditionFailed {
	return &ListLogicalSwitchesPreconditionFailed{}
}

/*ListLogicalSwitchesPreconditionFailed handles this case with default header values.

Precondition failed
*/
type ListLogicalSwitchesPreconditionFailed struct {
	Payload *models.APIError
}

func (o *ListLogicalSwitchesPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /logical-switches][%d] listLogicalSwitchesPreconditionFailed  %+v", 412, o.Payload)
}

func (o *ListLogicalSwitchesPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLogicalSwitchesInternalServerError creates a ListLogicalSwitchesInternalServerError with default headers values
func NewListLogicalSwitchesInternalServerError() *ListLogicalSwitchesInternalServerError {
	return &ListLogicalSwitchesInternalServerError{}
}

/*ListLogicalSwitchesInternalServerError handles this case with default header values.

Internal server error
*/
type ListLogicalSwitchesInternalServerError struct {
	Payload *models.APIError
}

func (o *ListLogicalSwitchesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /logical-switches][%d] listLogicalSwitchesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListLogicalSwitchesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLogicalSwitchesServiceUnavailable creates a ListLogicalSwitchesServiceUnavailable with default headers values
func NewListLogicalSwitchesServiceUnavailable() *ListLogicalSwitchesServiceUnavailable {
	return &ListLogicalSwitchesServiceUnavailable{}
}

/*ListLogicalSwitchesServiceUnavailable handles this case with default header values.

Service unavailable
*/
type ListLogicalSwitchesServiceUnavailable struct {
	Payload *models.APIError
}

func (o *ListLogicalSwitchesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /logical-switches][%d] listLogicalSwitchesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ListLogicalSwitchesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
