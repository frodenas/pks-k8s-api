// Code generated by go-swagger; DO NOT EDIT.

package logical_switching

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// ListLogicalPortsReader is a Reader for the ListLogicalPorts structure.
type ListLogicalPortsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListLogicalPortsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListLogicalPortsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListLogicalPortsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListLogicalPortsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListLogicalPortsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewListLogicalPortsPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListLogicalPortsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewListLogicalPortsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListLogicalPortsOK creates a ListLogicalPortsOK with default headers values
func NewListLogicalPortsOK() *ListLogicalPortsOK {
	return &ListLogicalPortsOK{}
}

/*ListLogicalPortsOK handles this case with default header values.

Success
*/
type ListLogicalPortsOK struct {
	Payload *models.LogicalPortListResult
}

func (o *ListLogicalPortsOK) Error() string {
	return fmt.Sprintf("[GET /logical-ports][%d] listLogicalPortsOK  %+v", 200, o.Payload)
}

func (o *ListLogicalPortsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogicalPortListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLogicalPortsBadRequest creates a ListLogicalPortsBadRequest with default headers values
func NewListLogicalPortsBadRequest() *ListLogicalPortsBadRequest {
	return &ListLogicalPortsBadRequest{}
}

/*ListLogicalPortsBadRequest handles this case with default header values.

Bad request
*/
type ListLogicalPortsBadRequest struct {
	Payload *models.APIError
}

func (o *ListLogicalPortsBadRequest) Error() string {
	return fmt.Sprintf("[GET /logical-ports][%d] listLogicalPortsBadRequest  %+v", 400, o.Payload)
}

func (o *ListLogicalPortsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLogicalPortsForbidden creates a ListLogicalPortsForbidden with default headers values
func NewListLogicalPortsForbidden() *ListLogicalPortsForbidden {
	return &ListLogicalPortsForbidden{}
}

/*ListLogicalPortsForbidden handles this case with default header values.

Operation forbidden
*/
type ListLogicalPortsForbidden struct {
	Payload *models.APIError
}

func (o *ListLogicalPortsForbidden) Error() string {
	return fmt.Sprintf("[GET /logical-ports][%d] listLogicalPortsForbidden  %+v", 403, o.Payload)
}

func (o *ListLogicalPortsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLogicalPortsNotFound creates a ListLogicalPortsNotFound with default headers values
func NewListLogicalPortsNotFound() *ListLogicalPortsNotFound {
	return &ListLogicalPortsNotFound{}
}

/*ListLogicalPortsNotFound handles this case with default header values.

Resource not found
*/
type ListLogicalPortsNotFound struct {
	Payload *models.APIError
}

func (o *ListLogicalPortsNotFound) Error() string {
	return fmt.Sprintf("[GET /logical-ports][%d] listLogicalPortsNotFound  %+v", 404, o.Payload)
}

func (o *ListLogicalPortsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLogicalPortsPreconditionFailed creates a ListLogicalPortsPreconditionFailed with default headers values
func NewListLogicalPortsPreconditionFailed() *ListLogicalPortsPreconditionFailed {
	return &ListLogicalPortsPreconditionFailed{}
}

/*ListLogicalPortsPreconditionFailed handles this case with default header values.

Precondition failed
*/
type ListLogicalPortsPreconditionFailed struct {
	Payload *models.APIError
}

func (o *ListLogicalPortsPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /logical-ports][%d] listLogicalPortsPreconditionFailed  %+v", 412, o.Payload)
}

func (o *ListLogicalPortsPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLogicalPortsInternalServerError creates a ListLogicalPortsInternalServerError with default headers values
func NewListLogicalPortsInternalServerError() *ListLogicalPortsInternalServerError {
	return &ListLogicalPortsInternalServerError{}
}

/*ListLogicalPortsInternalServerError handles this case with default header values.

Internal server error
*/
type ListLogicalPortsInternalServerError struct {
	Payload *models.APIError
}

func (o *ListLogicalPortsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /logical-ports][%d] listLogicalPortsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListLogicalPortsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLogicalPortsServiceUnavailable creates a ListLogicalPortsServiceUnavailable with default headers values
func NewListLogicalPortsServiceUnavailable() *ListLogicalPortsServiceUnavailable {
	return &ListLogicalPortsServiceUnavailable{}
}

/*ListLogicalPortsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type ListLogicalPortsServiceUnavailable struct {
	Payload *models.APIError
}

func (o *ListLogicalPortsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /logical-ports][%d] listLogicalPortsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ListLogicalPortsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
