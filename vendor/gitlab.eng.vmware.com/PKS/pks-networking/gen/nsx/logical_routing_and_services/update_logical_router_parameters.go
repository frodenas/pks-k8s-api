// Code generated by go-swagger; DO NOT EDIT.

package logical_routing_and_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// NewUpdateLogicalRouterParams creates a new UpdateLogicalRouterParams object
// with the default values initialized.
func NewUpdateLogicalRouterParams() *UpdateLogicalRouterParams {
	var ()
	return &UpdateLogicalRouterParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateLogicalRouterParamsWithTimeout creates a new UpdateLogicalRouterParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateLogicalRouterParamsWithTimeout(timeout time.Duration) *UpdateLogicalRouterParams {
	var ()
	return &UpdateLogicalRouterParams{

		timeout: timeout,
	}
}

// NewUpdateLogicalRouterParamsWithContext creates a new UpdateLogicalRouterParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateLogicalRouterParamsWithContext(ctx context.Context) *UpdateLogicalRouterParams {
	var ()
	return &UpdateLogicalRouterParams{

		Context: ctx,
	}
}

// NewUpdateLogicalRouterParamsWithHTTPClient creates a new UpdateLogicalRouterParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateLogicalRouterParamsWithHTTPClient(client *http.Client) *UpdateLogicalRouterParams {
	var ()
	return &UpdateLogicalRouterParams{
		HTTPClient: client,
	}
}

/*UpdateLogicalRouterParams contains all the parameters to send to the API endpoint
for the update logical router operation typically these are written to a http.Request
*/
type UpdateLogicalRouterParams struct {

	/*LogicalRouter*/
	LogicalRouter *models.LogicalRouter
	/*LogicalRouterID*/
	LogicalRouterID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update logical router params
func (o *UpdateLogicalRouterParams) WithTimeout(timeout time.Duration) *UpdateLogicalRouterParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update logical router params
func (o *UpdateLogicalRouterParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update logical router params
func (o *UpdateLogicalRouterParams) WithContext(ctx context.Context) *UpdateLogicalRouterParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update logical router params
func (o *UpdateLogicalRouterParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update logical router params
func (o *UpdateLogicalRouterParams) WithHTTPClient(client *http.Client) *UpdateLogicalRouterParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update logical router params
func (o *UpdateLogicalRouterParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLogicalRouter adds the logicalRouter to the update logical router params
func (o *UpdateLogicalRouterParams) WithLogicalRouter(logicalRouter *models.LogicalRouter) *UpdateLogicalRouterParams {
	o.SetLogicalRouter(logicalRouter)
	return o
}

// SetLogicalRouter adds the logicalRouter to the update logical router params
func (o *UpdateLogicalRouterParams) SetLogicalRouter(logicalRouter *models.LogicalRouter) {
	o.LogicalRouter = logicalRouter
}

// WithLogicalRouterID adds the logicalRouterID to the update logical router params
func (o *UpdateLogicalRouterParams) WithLogicalRouterID(logicalRouterID string) *UpdateLogicalRouterParams {
	o.SetLogicalRouterID(logicalRouterID)
	return o
}

// SetLogicalRouterID adds the logicalRouterId to the update logical router params
func (o *UpdateLogicalRouterParams) SetLogicalRouterID(logicalRouterID string) {
	o.LogicalRouterID = logicalRouterID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateLogicalRouterParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.LogicalRouter == nil {
		o.LogicalRouter = new(models.LogicalRouter)
	}

	if err := r.SetBodyParam(o.LogicalRouter); err != nil {
		return err
	}

	// path param logical-router-id
	if err := r.SetPathParam("logical-router-id", o.LogicalRouterID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
