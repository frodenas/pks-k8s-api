// Code generated by go-swagger; DO NOT EDIT.

package logical_routing_and_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteLogicalRouterParams creates a new DeleteLogicalRouterParams object
// with the default values initialized.
func NewDeleteLogicalRouterParams() *DeleteLogicalRouterParams {
	var (
		forceDefault = bool(false)
	)
	return &DeleteLogicalRouterParams{
		Force: &forceDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteLogicalRouterParamsWithTimeout creates a new DeleteLogicalRouterParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteLogicalRouterParamsWithTimeout(timeout time.Duration) *DeleteLogicalRouterParams {
	var (
		forceDefault = bool(false)
	)
	return &DeleteLogicalRouterParams{
		Force: &forceDefault,

		timeout: timeout,
	}
}

// NewDeleteLogicalRouterParamsWithContext creates a new DeleteLogicalRouterParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteLogicalRouterParamsWithContext(ctx context.Context) *DeleteLogicalRouterParams {
	var (
		forceDefault = bool(false)
	)
	return &DeleteLogicalRouterParams{
		Force: &forceDefault,

		Context: ctx,
	}
}

// NewDeleteLogicalRouterParamsWithHTTPClient creates a new DeleteLogicalRouterParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteLogicalRouterParamsWithHTTPClient(client *http.Client) *DeleteLogicalRouterParams {
	var (
		forceDefault = bool(false)
	)
	return &DeleteLogicalRouterParams{
		Force:      &forceDefault,
		HTTPClient: client,
	}
}

/*DeleteLogicalRouterParams contains all the parameters to send to the API endpoint
for the delete logical router operation typically these are written to a http.Request
*/
type DeleteLogicalRouterParams struct {

	/*Force
	  Force delete the resource even if it is being used somewhere


	*/
	Force *bool
	/*LogicalRouterID*/
	LogicalRouterID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete logical router params
func (o *DeleteLogicalRouterParams) WithTimeout(timeout time.Duration) *DeleteLogicalRouterParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete logical router params
func (o *DeleteLogicalRouterParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete logical router params
func (o *DeleteLogicalRouterParams) WithContext(ctx context.Context) *DeleteLogicalRouterParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete logical router params
func (o *DeleteLogicalRouterParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete logical router params
func (o *DeleteLogicalRouterParams) WithHTTPClient(client *http.Client) *DeleteLogicalRouterParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete logical router params
func (o *DeleteLogicalRouterParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithForce adds the force to the delete logical router params
func (o *DeleteLogicalRouterParams) WithForce(force *bool) *DeleteLogicalRouterParams {
	o.SetForce(force)
	return o
}

// SetForce adds the force to the delete logical router params
func (o *DeleteLogicalRouterParams) SetForce(force *bool) {
	o.Force = force
}

// WithLogicalRouterID adds the logicalRouterID to the delete logical router params
func (o *DeleteLogicalRouterParams) WithLogicalRouterID(logicalRouterID string) *DeleteLogicalRouterParams {
	o.SetLogicalRouterID(logicalRouterID)
	return o
}

// SetLogicalRouterID adds the logicalRouterId to the delete logical router params
func (o *DeleteLogicalRouterParams) SetLogicalRouterID(logicalRouterID string) {
	o.LogicalRouterID = logicalRouterID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteLogicalRouterParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Force != nil {

		// query param force
		var qrForce bool
		if o.Force != nil {
			qrForce = *o.Force
		}
		qForce := swag.FormatBool(qrForce)
		if qForce != "" {
			if err := r.SetQueryParam("force", qForce); err != nil {
				return err
			}
		}

	}

	// path param logical-router-id
	if err := r.SetPathParam("logical-router-id", o.LogicalRouterID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
