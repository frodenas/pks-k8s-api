// Code generated by go-swagger; DO NOT EDIT.

package logical_routing_and_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// CreateLogicalRouterReader is a Reader for the CreateLogicalRouter structure.
type CreateLogicalRouterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateLogicalRouterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateLogicalRouterCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateLogicalRouterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateLogicalRouterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateLogicalRouterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewCreateLogicalRouterPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateLogicalRouterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewCreateLogicalRouterServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateLogicalRouterCreated creates a CreateLogicalRouterCreated with default headers values
func NewCreateLogicalRouterCreated() *CreateLogicalRouterCreated {
	return &CreateLogicalRouterCreated{}
}

/*CreateLogicalRouterCreated handles this case with default header values.

Created
*/
type CreateLogicalRouterCreated struct {
	Payload *models.LogicalRouter
}

func (o *CreateLogicalRouterCreated) Error() string {
	return fmt.Sprintf("[POST /logical-routers][%d] createLogicalRouterCreated  %+v", 201, o.Payload)
}

func (o *CreateLogicalRouterCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogicalRouter)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogicalRouterBadRequest creates a CreateLogicalRouterBadRequest with default headers values
func NewCreateLogicalRouterBadRequest() *CreateLogicalRouterBadRequest {
	return &CreateLogicalRouterBadRequest{}
}

/*CreateLogicalRouterBadRequest handles this case with default header values.

Bad request
*/
type CreateLogicalRouterBadRequest struct {
	Payload *models.APIError
}

func (o *CreateLogicalRouterBadRequest) Error() string {
	return fmt.Sprintf("[POST /logical-routers][%d] createLogicalRouterBadRequest  %+v", 400, o.Payload)
}

func (o *CreateLogicalRouterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogicalRouterForbidden creates a CreateLogicalRouterForbidden with default headers values
func NewCreateLogicalRouterForbidden() *CreateLogicalRouterForbidden {
	return &CreateLogicalRouterForbidden{}
}

/*CreateLogicalRouterForbidden handles this case with default header values.

Operation forbidden
*/
type CreateLogicalRouterForbidden struct {
	Payload *models.APIError
}

func (o *CreateLogicalRouterForbidden) Error() string {
	return fmt.Sprintf("[POST /logical-routers][%d] createLogicalRouterForbidden  %+v", 403, o.Payload)
}

func (o *CreateLogicalRouterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogicalRouterNotFound creates a CreateLogicalRouterNotFound with default headers values
func NewCreateLogicalRouterNotFound() *CreateLogicalRouterNotFound {
	return &CreateLogicalRouterNotFound{}
}

/*CreateLogicalRouterNotFound handles this case with default header values.

Resource not found
*/
type CreateLogicalRouterNotFound struct {
	Payload *models.APIError
}

func (o *CreateLogicalRouterNotFound) Error() string {
	return fmt.Sprintf("[POST /logical-routers][%d] createLogicalRouterNotFound  %+v", 404, o.Payload)
}

func (o *CreateLogicalRouterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogicalRouterPreconditionFailed creates a CreateLogicalRouterPreconditionFailed with default headers values
func NewCreateLogicalRouterPreconditionFailed() *CreateLogicalRouterPreconditionFailed {
	return &CreateLogicalRouterPreconditionFailed{}
}

/*CreateLogicalRouterPreconditionFailed handles this case with default header values.

Precondition failed
*/
type CreateLogicalRouterPreconditionFailed struct {
	Payload *models.APIError
}

func (o *CreateLogicalRouterPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /logical-routers][%d] createLogicalRouterPreconditionFailed  %+v", 412, o.Payload)
}

func (o *CreateLogicalRouterPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogicalRouterInternalServerError creates a CreateLogicalRouterInternalServerError with default headers values
func NewCreateLogicalRouterInternalServerError() *CreateLogicalRouterInternalServerError {
	return &CreateLogicalRouterInternalServerError{}
}

/*CreateLogicalRouterInternalServerError handles this case with default header values.

Internal server error
*/
type CreateLogicalRouterInternalServerError struct {
	Payload *models.APIError
}

func (o *CreateLogicalRouterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /logical-routers][%d] createLogicalRouterInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateLogicalRouterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLogicalRouterServiceUnavailable creates a CreateLogicalRouterServiceUnavailable with default headers values
func NewCreateLogicalRouterServiceUnavailable() *CreateLogicalRouterServiceUnavailable {
	return &CreateLogicalRouterServiceUnavailable{}
}

/*CreateLogicalRouterServiceUnavailable handles this case with default header values.

Service unavailable
*/
type CreateLogicalRouterServiceUnavailable struct {
	Payload *models.APIError
}

func (o *CreateLogicalRouterServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /logical-routers][%d] createLogicalRouterServiceUnavailable  %+v", 503, o.Payload)
}

func (o *CreateLogicalRouterServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
