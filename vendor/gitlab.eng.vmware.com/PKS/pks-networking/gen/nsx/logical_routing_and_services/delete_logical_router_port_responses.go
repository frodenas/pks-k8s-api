// Code generated by go-swagger; DO NOT EDIT.

package logical_routing_and_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"gitlab.eng.vmware.com/PKS/pks-networking/gen/models"
)

// DeleteLogicalRouterPortReader is a Reader for the DeleteLogicalRouterPort structure.
type DeleteLogicalRouterPortReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLogicalRouterPortReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteLogicalRouterPortOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteLogicalRouterPortBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteLogicalRouterPortForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteLogicalRouterPortNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewDeleteLogicalRouterPortPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteLogicalRouterPortInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteLogicalRouterPortServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteLogicalRouterPortOK creates a DeleteLogicalRouterPortOK with default headers values
func NewDeleteLogicalRouterPortOK() *DeleteLogicalRouterPortOK {
	return &DeleteLogicalRouterPortOK{}
}

/*DeleteLogicalRouterPortOK handles this case with default header values.

Logical Router Port successfully deleted
*/
type DeleteLogicalRouterPortOK struct {
}

func (o *DeleteLogicalRouterPortOK) Error() string {
	return fmt.Sprintf("[DELETE /logical-router-ports/{logical-router-port-id}][%d] deleteLogicalRouterPortOK ", 200)
}

func (o *DeleteLogicalRouterPortOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLogicalRouterPortBadRequest creates a DeleteLogicalRouterPortBadRequest with default headers values
func NewDeleteLogicalRouterPortBadRequest() *DeleteLogicalRouterPortBadRequest {
	return &DeleteLogicalRouterPortBadRequest{}
}

/*DeleteLogicalRouterPortBadRequest handles this case with default header values.

Bad request
*/
type DeleteLogicalRouterPortBadRequest struct {
	Payload *models.APIError
}

func (o *DeleteLogicalRouterPortBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /logical-router-ports/{logical-router-port-id}][%d] deleteLogicalRouterPortBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLogicalRouterPortBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogicalRouterPortForbidden creates a DeleteLogicalRouterPortForbidden with default headers values
func NewDeleteLogicalRouterPortForbidden() *DeleteLogicalRouterPortForbidden {
	return &DeleteLogicalRouterPortForbidden{}
}

/*DeleteLogicalRouterPortForbidden handles this case with default header values.

Operation forbidden
*/
type DeleteLogicalRouterPortForbidden struct {
	Payload *models.APIError
}

func (o *DeleteLogicalRouterPortForbidden) Error() string {
	return fmt.Sprintf("[DELETE /logical-router-ports/{logical-router-port-id}][%d] deleteLogicalRouterPortForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLogicalRouterPortForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogicalRouterPortNotFound creates a DeleteLogicalRouterPortNotFound with default headers values
func NewDeleteLogicalRouterPortNotFound() *DeleteLogicalRouterPortNotFound {
	return &DeleteLogicalRouterPortNotFound{}
}

/*DeleteLogicalRouterPortNotFound handles this case with default header values.

Resource not found
*/
type DeleteLogicalRouterPortNotFound struct {
	Payload *models.APIError
}

func (o *DeleteLogicalRouterPortNotFound) Error() string {
	return fmt.Sprintf("[DELETE /logical-router-ports/{logical-router-port-id}][%d] deleteLogicalRouterPortNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLogicalRouterPortNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogicalRouterPortPreconditionFailed creates a DeleteLogicalRouterPortPreconditionFailed with default headers values
func NewDeleteLogicalRouterPortPreconditionFailed() *DeleteLogicalRouterPortPreconditionFailed {
	return &DeleteLogicalRouterPortPreconditionFailed{}
}

/*DeleteLogicalRouterPortPreconditionFailed handles this case with default header values.

Precondition failed
*/
type DeleteLogicalRouterPortPreconditionFailed struct {
	Payload *models.APIError
}

func (o *DeleteLogicalRouterPortPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /logical-router-ports/{logical-router-port-id}][%d] deleteLogicalRouterPortPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteLogicalRouterPortPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogicalRouterPortInternalServerError creates a DeleteLogicalRouterPortInternalServerError with default headers values
func NewDeleteLogicalRouterPortInternalServerError() *DeleteLogicalRouterPortInternalServerError {
	return &DeleteLogicalRouterPortInternalServerError{}
}

/*DeleteLogicalRouterPortInternalServerError handles this case with default header values.

Internal server error
*/
type DeleteLogicalRouterPortInternalServerError struct {
	Payload *models.APIError
}

func (o *DeleteLogicalRouterPortInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /logical-router-ports/{logical-router-port-id}][%d] deleteLogicalRouterPortInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLogicalRouterPortInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLogicalRouterPortServiceUnavailable creates a DeleteLogicalRouterPortServiceUnavailable with default headers values
func NewDeleteLogicalRouterPortServiceUnavailable() *DeleteLogicalRouterPortServiceUnavailable {
	return &DeleteLogicalRouterPortServiceUnavailable{}
}

/*DeleteLogicalRouterPortServiceUnavailable handles this case with default header values.

Service unavailable
*/
type DeleteLogicalRouterPortServiceUnavailable struct {
	Payload *models.APIError
}

func (o *DeleteLogicalRouterPortServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /logical-router-ports/{logical-router-port-id}][%d] deleteLogicalRouterPortServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteLogicalRouterPortServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
