// Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/README.md
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/cfcr.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/cloud-config/iaas/aws/use-vm-extensions.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/cloud-config/iaas/azure/use-vm-extensions.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/cloud-config/iaas/gcp/use-vm-extensions.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/cloud-config/iaas/vsphere/use-vm-extensions.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/add-hostname-to-master-certificate.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/add-oidc-endpoint.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/add-proxy.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/add-vm-extensions-to-master.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/addons-spec.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/allow-privileged-containers.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/change-cidrs.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/change-etcd-metrics-url.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/disable-anonymous-auth.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/enable-bbr.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/enable-denyescalatingexec.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/enable-encryption-config.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/enable-nfs.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/enable-podsecuritypolicy.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/enable-securitycontextdeny.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/example-vars-files/iaas/azure/cloud-provider.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/example-vars-files/iaas/gcp/cloud-provider.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/example-vars-files/iaas/openstack/cloud-provider.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/example-vars-files/iaas/vsphere/cloud-provider.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/example-vars-files/iaas/vsphere/set-working-dir-no-rp.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/example-vars-files/misc/bootstrap.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/example-vars-files/misc/oidc.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/example-vars-files/new-cidrs.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/example-vars-files/system-specs.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/aws/add-master-credentials.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/aws/add-worker-credentials.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/aws/cloud-config/lb.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/aws/cloud-provider.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/aws/lb.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/azure/cloud-config/lb.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/azure/cloud-provider.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/azure/subnet.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/azure/use-cifs.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/azure/use-credentials.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/gcp/add-service-key-master.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/gcp/add-service-key-worker.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/gcp/add-subnetwork-for-internal-load-balancer.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/gcp/cloud-config/load-balancer-target-pools.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/gcp/cloud-config/remove-service-account-master.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/gcp/cloud-config/remove-service-account-worker.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/gcp/cloud-provider.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/openstack/cloud-provider.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/openstack/master-static-ip.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/virtualbox/bosh-lite.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/vsphere/cloud-provider.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/vsphere/master-static-ip.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/vsphere/set-working-dir-no-rp.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/iaas/vsphere/use-vm-extensions.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/kubo-local-release.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/misc/bootstrap.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/misc/dev.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/misc/first-time-deploy.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/misc/local-config-server.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/misc/scale-to-one-az.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/misc/single-master.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/misc/small-vm.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/non-precompiled-releases.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/rename.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/set-certificate-duration.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/use-coredns.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/use-runtime-config-bosh-dns.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/use-vm-extensions.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/vm-types.yml
// ../../../../vendor/github.com/pivotal-cf/pks-kubo-deployment/manifests/ops-files/worker_count.yml
// ops-files/aws-overrides.yml
// ops-files/azure-overrides.yml
// ops-files/custom-docker-config.yml
// ops-files/drain-cluster-errand.yml
// ops-files/eviction-hard-imagefs-inodes-spec.yml
// ops-files/eviction-hard-imagefs-spec.yml
// ops-files/eviction-hard-memory-spec.yml
// ops-files/eviction-hard-nodefs-inodes-spec.yml
// ops-files/eviction-hard-nodefs-spec.yml
// ops-files/gcp-overrides.yml
// ops-files/generate-2018-cas.yml
// ops-files/generate-2018-certificates.yml
// ops-files/modify-audit-log.yml
// ops-files/pks-master-aliases.yml
// ops-files/set-first-ip.yml
// ops-files/syslog.yml
// ops-files/syslog_and_routesync.yml
// ops-files/system-reserved-cpu-spec.yml
// ops-files/system-reserved-ephemeral-storage-spec.yml
// ops-files/system-reserved-memory-spec.yml
// ops-files/update-overrides.yml
// ops-files/update-trust-lists.yml
// ops-files/update-worker-overrides.yml
// ops-files/vsphere-enable-disk-uuid.yml
// ops-files/vsphere-overrides.yml
package boshmanifest

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x5a\x5f\x6f\xe3\x36\x12\x7f\xf7\xa7\x18\x74\x81\xeb\xc6\x88\xec\xf6\xb6\x7d\x09\xae\x05\x76\x9d\x6c\x1b\xdc\xed\xc6\x88\x73\xed\x15\x45\x11\xd3\xe4\xd8\x66\x43\x91\x2a\x49\x39\xd1\xc1\x1f\xfe\x30\xa4\xfe\xd9\x96\x1c\xa7\x0d\xee\x25\xb1\xc4\x21\x39\x7f\x7f\x33\x1c\xea\x0d\x5c\x62\xa6\x4c\x21\xf5\x0a\x26\x1f\x27\xb7\x83\xc1\xdd\x1a\x61\xc1\x1c\x42\xca\xb4\x5c\xa2\xf3\xf0\xc5\xef\xb9\xf3\xf0\x68\xec\x83\xfb\x02\x98\x16\xf0\x28\x95\x02\x11\xe6\x01\x03\x9b\x6b\x4d\xd3\xb9\xca\x9d\x47\x0b\x66\x09\xff\xcc\x17\x68\x35\x7a\x74\x17\x83\xc1\x7c\x3e\x1f\x2c\x8c\x5b\x43\x22\x80\x2f\xb9\xad\x66\x3e\xe4\x0b\x93\xc4\xdf\x29\x6a\x3f\xae\xf6\x73\x63\xa2\x1a\x15\xa9\x0a\x53\x07\x1f\x0d\x4d\xc1\x0c\x2d\x08\xc3\x73\xa2\x65\x5e\x1a\x0d\xde\x54\x4b\x11\xe7\xb0\x32\xf0\xeb\x1a\x2d\xfe\xf6\x76\xed\x7d\xe6\x2e\xc6\xe3\x95\xf4\xeb\x7c\x31\xe2\x26\x1d\x73\x65\x72\xb1\x34\xb9\x16\xb6\x48\xa4\xe6\xf9\x82\x79\x63\xc7\x81\x07\x8b\x0a\x99\xc3\xf1\x1b\x51\xa9\x22\x21\x0e\xce\x46\x83\xc1\xe0\xcd\x1b\xb8\xc9\xd0\x12\x31\x2c\xa5\x42\x47\xaf\xde\xc0\x87\x9b\xd9\x8f\x60\x32\x62\xc3\x0d\x06\x5b\xf8\xcc\x52\x84\x2d\x4c\x73\x9b\x19\x47\xbf\x3e\x1b\x8f\x0e\xb6\x83\xed\x45\x92\x24\x00\xe5\x3f\x68\x7e\x6d\x07\x5b\xf8\x75\x6e\x32\x97\x84\x65\xc7\xb9\xc3\xc4\xe6\xda\xcb\x14\x13\x6e\xf4\x52\xae\x12\x52\x5a\x22\xb4\x23\x55\xcc\x7f\x7b\x7b\x32\xed\x19\x6c\x01\xb6\x64\x58\x8b\x9c\x79\x14\xe7\xc0\x73\x6b\x51\x7b\x55\x00\xa6\x99\x2f\x46\x70\x67\x60\x81\x60\x31\x35\x1b\x14\x20\x35\x68\x7c\xf2\x50\x6a\xe2\x80\x39\x8b\x9a\xa5\x78\xc0\x47\xf3\x9a\xb6\x9c\x65\xc8\xe5\xb2\x00\xbf\x46\x68\xcc\x0a\x3a\xaa\xe6\xae\xe3\xad\x74\xc0\x94\x33\x90\x3b\x14\xb0\x34\x16\xd0\x73\x01\x1c\xad\x97\x4b\x49\x9c\xbb\xd1\x01\x2b\x9b\x34\xf1\x45\x86\x87\x4a\x69\x0f\xec\xb3\x33\xdf\xa4\xf7\x34\x38\x0f\xbb\xcc\x53\x46\x8e\x3a\x3f\x87\x39\x39\x35\xda\x79\xf0\xea\x39\xcb\x32\x55\x24\x4c\x08\xa3\xdd\x1c\xa4\x76\x9e\x69\x4e\x56\x84\x0f\x05\x08\x5c\xb2\x5c\xf9\xf3\x17\xcf\x66\xce\xe5\x69\xc3\xc2\x05\xb8\x94\x29\x45\xd3\x77\xdf\x24\x6b\xb9\x5a\xa7\x98\x96\xcb\xd5\x83\xa9\xd4\x32\x65\x34\xc1\xa2\xcb\x90\x7b\xb9\x41\x55\xc0\xdb\x8a\xc2\xcd\xc1\xaf\x99\x07\x66\x31\x6a\x33\x6e\x28\x28\x3c\xf0\x49\x3a\xef\x60\x51\xc0\x33\x21\x31\xe6\xcb\x56\x28\xd6\xa1\xef\xce\x46\xf0\x8b\xc9\x21\x65\x05\x3c\x32\xed\x69\xcd\xdc\x21\x2c\xd0\x65\xe6\xa1\x11\xca\xcd\x21\x6c\x4c\xe3\x8e\x33\x85\xa4\xf5\xf4\x1c\x3c\x5b\x95\xbf\x8c\x85\xa0\x20\xc8\xb5\xfc\x23\x47\x98\x87\xdd\xef\x33\x6b\x32\x32\x37\x06\x95\x09\xcc\x50\x8b\xe8\xa7\x66\x09\xc6\xaf\xd1\xb6\x9c\xc6\x91\x9f\x92\x39\x1d\x39\x4f\x08\x41\xd4\x1b\x69\x8d\xa6\xd1\x43\x57\x61\x42\x24\x9b\x34\xc1\x27\x8f\xda\x51\xa4\x26\xde\x24\xd1\x7a\x07\xde\xf3\x0c\x2d\x39\xd4\x7b\x21\xe0\xa7\x4f\x70\x55\x93\x04\x67\x52\x86\x89\x05\x53\x64\x6b\x1b\xe4\x8f\x93\x60\xdb\x19\xe1\x3b\x5b\x74\xc6\xf5\x01\x05\x6d\x3d\x09\x41\x9e\x5b\x8c\xde\x5c\x7a\x60\x74\x94\xca\x09\x2b\x8f\x83\x95\x35\x79\xe6\xc0\x68\x78\xff\xf3\x2c\xd0\xfc\x30\x99\x12\x67\xdc\xe8\xe0\x8a\x7e\x8d\xd2\xb6\xbc\x29\x98\xb1\xd9\x74\x0e\x5b\xb8\xd1\xaa\x88\x88\x0f\x8f\x6b\xd4\x31\x42\x49\xfb\x4c\x0b\x4c\xe1\x51\xfa\x75\x60\x25\x18\x21\x98\xb2\x04\xa2\xa8\x14\xda\xd8\xd8\xb0\xaf\xc9\xbd\x92\x1a\x05\x2c\x50\x99\xc7\x03\xa5\x48\xc6\xdc\x78\xe3\x32\x02\xee\x13\x34\xf4\x3c\xf9\xae\xba\x36\xb3\x40\xda\xaf\xa5\xff\x93\x5a\x82\x56\x2a\x66\x9e\x51\x49\x64\xf5\x9e\x9b\x5c\xfb\x03\x05\xec\x0f\xee\x23\x5d\x18\x88\x28\xb7\x2f\xf2\x3e\x90\xbd\xeb\x20\x39\x0c\x22\x6d\x74\x42\x79\xc4\xa4\x99\x54\x28\xaa\x64\x79\x68\x9a\x63\x84\xc4\xe5\xbf\x1d\xc2\x1e\x4d\x95\x6f\x4a\x6d\x8a\x9d\x4a\x84\x58\x69\x72\xed\x84\x94\x59\x1a\xf6\xcf\x27\xdc\xe1\xf0\xfd\xcf\xb3\xe1\x30\x88\xd8\x36\x4f\xf4\x2b\xf6\xd8\x1f\xa4\x2f\xa0\x3e\x0c\xd8\x1d\x4f\x88\x1e\xe7\xad\x51\x61\x8c\x42\x25\x0a\x37\xb5\x66\x23\x05\x5a\xc8\x1d\xe9\x60\xdf\xfb\x4a\x44\x19\x0e\x7f\x98\x4c\x7b\x45\x58\xf1\xec\x05\x22\xf4\x52\xbf\x4c\x04\x0a\xf3\x93\x44\xa8\x24\x28\x03\xa1\x57\x8a\xe7\xf0\xe0\x85\x33\x5e\x26\x4d\x15\xa5\x27\x4b\x14\x9c\xf4\xd6\xe4\x9e\x08\xfe\x72\x4d\x38\x1c\xde\x64\xa8\x67\x9e\xf1\x87\xe1\x90\xd6\xef\x86\x4c\x93\x21\xc5\x2c\x7f\x18\xc7\x64\x90\x38\x2a\x8a\x79\x22\xb3\x6e\xcc\x3c\x4e\x1f\xd2\x9b\xf7\x8c\xaf\x61\xa9\x0c\x0b\x92\x5c\x87\x9c\x41\x95\x3c\xbc\x9f\x5e\x13\x81\x73\x72\xa5\x81\x29\x65\x42\x55\xb9\x4f\x5a\xa7\xa5\x0a\x4d\x46\x34\x20\x35\x57\xb9\x88\x30\x79\xf7\xaf\x59\x47\x75\xd7\xf2\x87\x7e\x79\x2b\x03\x9f\x26\xed\x31\xea\xb3\x46\x94\xf8\xbe\x57\xd2\x9d\xe1\x3f\x2f\xdd\x8a\x67\xc7\x24\xa3\x20\xa4\xea\xc3\xa1\xdd\x48\x8e\xc9\x03\x16\x7d\x45\xca\x09\xf4\x41\x3a\x45\x69\x25\x77\x68\x43\x3d\x56\x66\x07\x8a\xd2\x07\x2c\x02\xff\xc8\x04\x15\x58\xe5\x12\xc0\x78\x4c\x1b\xdb\xc3\x63\x49\xef\x96\x31\x75\x9c\xce\x62\x43\xff\xd7\x59\x0c\x11\x77\xad\x97\x96\x39\x6f\x73\xee\x73\x8b\x7f\x39\x27\xf4\x1b\x88\x80\x3e\x02\x46\x56\x82\x41\xb7\xd4\xdd\x74\x24\xed\x95\x66\x0b\x75\x80\x28\x55\xa1\xb4\x85\x5b\xfc\x23\x97\x16\x5d\x78\xbc\xae\x2a\x94\xa9\x35\x61\x75\x78\xab\x8d\x0f\x9e\xf9\x80\x85\x3b\x23\x85\xad\x2c\x15\xe3\xcd\x29\x9b\xd4\x83\x2e\x54\x33\x61\xc5\x3e\x31\xd4\xa2\x9f\xf5\x38\xd6\x62\xb7\x2e\x95\x3c\x5b\xad\x28\xcc\x1b\x86\xfb\x77\x20\xb3\x97\x51\xc7\x2d\x52\x2d\x2f\x99\xea\xa9\xe3\x8e\xd3\x87\xca\x06\x7d\xd8\xb1\x35\x14\xb8\x20\x9c\xae\xe3\x95\x2a\xdc\xf0\x30\x89\x28\xae\xd0\xc2\x27\xa6\xd9\x2a\x54\xe1\xc7\x59\x8d\x5e\x79\x3a\xab\xdd\xf4\xa7\xb0\xaa\xb0\x8e\xaf\x17\x43\xfc\x29\xde\x77\x8c\xfa\xb8\x0f\xd6\xcc\x9c\x4a\xd5\x54\x21\xc7\x51\xed\x14\xb6\xbb\xe9\x8e\x33\x4c\x30\xb1\x85\xe4\x19\xac\xca\x17\x1a\x3d\xd9\x2b\x59\x1a\x9b\x48\xed\xd1\x6a\xa6\x12\x3a\xaf\x25\xd5\x81\xed\x19\xf8\x3a\x75\x89\x76\x11\xde\x4c\x6a\xf1\xba\x27\xc4\x3a\x9e\x94\x17\x08\x18\x84\x14\xb0\x94\xd6\xf9\x97\x67\xc3\x53\x34\xdc\x4f\x7b\x5c\xcb\x55\x1d\xd4\xab\xe9\x6a\x61\x87\x3e\xc4\x85\xd4\xab\x44\x48\x9b\x68\x93\xd8\x67\xf2\x72\xef\x94\xee\xd3\x5b\x60\x1d\x2a\xd6\xbf\x74\x50\xce\x05\x21\x2d\xc8\x25\xc5\x98\x0d\xdd\x24\x6d\xe8\xfc\x66\x72\xcb\x11\x32\x63\x54\xcd\xfc\x70\xb8\x91\xd6\xe7\x4c\x2d\xcc\xd3\x51\xc5\xd6\x54\xe3\xd0\x51\x53\xd2\x1f\xb6\xbd\x8e\x52\x36\x4a\x75\xb1\x2d\xe9\x0d\xd8\x5c\xd3\x71\x9c\x41\x33\x09\xea\x49\xed\x1e\x46\xec\xda\x29\x53\x38\xf8\xba\x6a\x24\x10\xbc\xbd\x83\x08\x3c\x6e\x04\x9f\xe2\x5b\xe9\xca\xe3\x52\x6c\xf4\xb0\xaa\x58\x91\xd9\x05\x7c\xfd\xd5\xe8\xef\xdf\x7c\x33\xfa\x6a\xf4\xee\x9b\x2a\xc3\xfd\x37\x3f\xee\x50\x8c\x08\x4e\xcb\x72\x3d\x94\xcf\xe4\x39\x9a\xb5\x93\xe9\xc2\x8b\xc9\xf4\x1a\xbe\xff\x0e\x36\xef\xbe\x1d\x7d\x3b\xfa\xea\x18\x6b\x31\xac\x8e\xb1\xd4\x50\x04\x27\x5a\x33\xbd\x42\x17\xdb\x45\x61\xe4\xb8\xe8\x74\x70\xe0\x72\xd9\x07\xff\x07\x34\xb4\x47\xc8\xd4\x4a\x39\x98\x5c\x7f\x9c\x41\xee\xa5\x72\xc1\x5a\x54\x21\x3f\xba\xf2\xc4\x10\xa6\x86\xb5\x60\x63\x54\x1e\x2a\x94\xe7\xf8\x78\x36\x1b\xf5\x91\x96\xe7\x6c\x07\xef\x2f\x77\x12\x51\xab\xa0\x8a\x99\x51\xc0\x75\x18\xf4\x45\x73\x84\x99\x5a\xf3\x54\xbc\x4e\x33\x9b\xd0\x33\xa3\xe5\x3a\xfb\x6c\xf5\xc8\x6e\xb4\xff\x78\x77\x37\xbd\x9f\xde\xde\xfc\xe7\x97\xf3\xf0\x7b\x56\x3d\x90\x4e\x3f\xdf\xc4\xa7\xe0\x4d\xad\xc2\x87\x9b\x34\x33\x3a\x34\x07\x43\x55\xd9\x33\xc6\x08\x45\xaa\x9d\x44\xd3\xa8\x99\xaf\xbd\xcf\xee\x03\x43\xf3\xf3\xf8\xe4\xea\xc7\xd0\x5e\xd3\xa6\x7c\xde\x89\xd3\x0d\xb3\x32\xc6\x78\xa9\xbc\x66\xdb\x57\xd3\xa0\xd1\x2e\xa1\xca\xb8\x4b\x87\xed\xb1\xb2\x37\x69\x74\x95\x54\x6a\x60\x90\xda\x9b\xba\x00\xa9\x94\x52\xde\xd2\x74\xc1\x7a\x70\xdc\x24\xb3\x72\x23\x15\xae\x30\x9c\x90\x3d\x93\x9a\x80\xe7\x80\x89\xe3\xb4\x75\x91\xef\xa0\xa1\x81\x86\x66\xa7\x36\xda\x65\x6d\x44\xa1\xe5\x23\x9c\x7b\x08\xdd\xa2\x14\xb5\x88\x40\x97\x3b\xec\x59\x70\x6d\x1e\x71\x83\x16\x9c\x49\x31\xc0\x25\xa5\x69\x07\x36\x22\x0e\x48\x3f\x0a\x05\x62\xa0\x6e\x96\x70\xc0\x99\x26\xa5\x29\x99\x4a\xdf\x76\x8d\x19\xf2\xdc\x4a\x5f\xd0\x24\x7c\xf2\x97\xa8\x0b\x60\x22\x95\x8e\x8e\xfe\x90\xa9\x7c\x25\x35\xbc\x75\xe8\x61\x51\x37\xd5\xe8\x18\x48\xa0\x7f\x36\x82\x19\x22\x3c\x34\xb2\xed\xde\x5c\x91\xf0\xa9\x21\xae\xf4\xd2\xd8\x34\xbe\xdc\xb7\x86\x90\x8e\x5c\x2c\x61\xda\xe8\x22\x35\xb9\x4b\x58\xee\xd7\x07\x86\xe8\x27\x23\x1b\x5c\xc6\x51\x98\xef\x0e\xcf\x29\x1f\x85\xf6\xd3\xf4\x3a\x9c\xb1\xfa\x3c\x42\x88\xc4\x48\xc1\x13\xd4\x22\x33\xb2\xa3\x21\xd9\x49\xd1\x4a\x06\x37\xd7\x97\x13\xa0\x2d\x09\x6e\x78\x23\xfe\x0b\xdc\x92\x07\x2c\x4f\xb8\x14\x1d\x7e\xb8\x3f\xd8\x80\x3f\x4c\x6f\x2e\x61\x72\x7d\x79\x1b\x02\x79\x56\x1e\x24\x27\xe5\x46\x34\x30\x82\xbb\xb5\x74\xe0\xd6\x26\x57\x02\x8c\x56\x05\x79\x02\xcb\x32\x25\xab\xb4\xaa\xf1\xb1\xe2\xed\x1c\xb2\x78\x3b\x26\x4c\xf0\xcc\x78\x9f\x41\x54\x3a\x5e\xb4\xb4\x2e\x41\xc9\x87\xaf\x9e\xbc\x65\xf0\x13\xb3\xae\x4a\x7b\xe2\xe2\x1f\x0b\xfb\x7d\x02\xc3\x61\xa8\xf7\xee\x65\x76\x6f\x96\xf7\xe5\x11\xf7\xbe\x9c\x7a\x4f\xa2\x5c\x0c\x87\xf5\xa4\xa0\xae\xbd\xe6\x02\x21\x39\xcb\x64\xb4\x5c\xb5\x28\xb9\x9b\xd0\xae\x5e\x50\x66\xc3\xe1\xc5\xee\x32\x44\x02\x42\x3b\xb8\x9e\x02\x13\xc2\xa2\x73\xe7\xa0\x11\x45\x85\x1d\x19\xb3\xbe\x75\xee\xde\x61\xea\xc0\x30\xb1\x7a\x4d\x04\xea\x02\x1d\x67\x2a\x74\x83\xf0\xa9\x03\xb2\x8e\x52\xb6\x4b\x26\x72\x0b\x0a\xb5\xab\x9a\xea\xea\x09\xf9\x41\xe0\x8d\xc2\x8d\xa2\x74\x50\x6d\x41\x70\xd1\x86\x8a\x18\x61\xce\x57\x06\x71\xa3\x4e\xd7\x2a\xf9\x72\x65\xac\xf3\x18\xeb\xc4\x66\x9f\x08\x3d\xa4\xfb\x32\x9c\x82\x1e\xaf\x2c\x44\x66\x44\xc5\x5c\x66\x94\xe4\xbd\x22\x74\x12\xee\x0b\x30\x35\xa2\x92\x61\x1a\x88\x3a\xd9\x9f\xc6\x88\x40\xed\x62\x6b\x95\x79\x28\x4c\x0e\x6b\xb6\x69\xe2\x88\x69\xfa\x69\x4d\x66\x25\x79\x6e\xdc\x12\x16\xb8\x24\x00\x0c\x2c\x51\xe0\x78\x52\x44\xb5\x30\x7c\x64\x52\x85\x15\x0d\x45\x9b\x33\xf1\x93\x03\x8b\xae\x04\xd9\x65\x39\x6e\x96\xb4\x9f\x6d\xf0\xbe\xfb\x16\x70\x6d\x9c\xd7\x2c\xc5\xe6\x52\x2f\x69\x05\x53\x27\xa6\x3d\x3f\xa5\xba\x13\xac\x28\x5b\x97\x7f\xed\x48\x3d\x0e\x04\x2c\x93\xf5\x56\x2f\x0a\xfa\xce\xeb\x45\x6e\x2c\xf6\x7d\x30\xd0\x1a\xab\x38\x9f\x18\x8b\x97\x9f\x67\x50\x56\x09\x4a\xba\x10\xfb\xb1\xbe\x68\xca\x88\x45\xbc\x5a\x8a\x17\xdc\x54\x75\x38\x40\x6b\x09\x54\x8f\x78\x23\x6a\x6e\x8b\xd0\x0c\x2f\xfb\xec\x7d\xde\xd8\x49\xd8\x4a\x20\x82\x79\x06\x0d\x11\x30\xaa\x09\xe8\xb0\x7c\x54\xaf\x07\xab\x92\x72\xaf\x9a\x55\xaa\x62\x30\x26\x24\x46\xd2\x3a\x6e\xe5\x02\xc5\xfe\x47\x24\x4d\x12\x1f\x49\x33\x16\x86\xbb\xb1\x67\xee\x81\xbc\x24\x95\x5a\x46\xcf\x88\xf1\x39\x2e\x77\x4d\x88\xe7\xf1\x9b\x5c\x0b\xb4\xce\x33\x2d\xe8\x9c\xeb\xd7\x3b\xb2\x32\x9f\x90\x18\xc9\x0e\x23\x67\x23\xf8\x94\x3b\x1f\xb2\x50\xf8\xdc\xe4\x1c\x42\xd7\x21\x33\x8a\xd5\xc5\xc9\x3c\x49\x36\xcc\x06\x25\xce\x47\x70\xf5\xc4\xd2\x4c\xe1\x45\xfb\x35\x1c\x48\xff\x5d\xb7\x39\xea\x66\xea\x95\xe7\xa2\xbf\x70\xad\xea\xd6\x9d\xbf\xdd\x49\x1a\x3d\x17\x49\x8a\xde\x4a\xee\x92\xdc\xaa\xbe\x7c\xdd\x45\xd7\x4a\xdd\x99\x35\xdc\x78\xa3\x42\xea\xce\x4c\xcc\x49\xe4\x84\x34\xef\x4b\x07\xe5\x4c\xa8\x8a\x8e\xd2\x13\x83\x2c\x93\x56\x0f\xfe\x75\x8a\x71\x87\xbe\x1d\xfc\x89\x28\xcd\x75\x20\xdc\x31\xc2\xaa\x49\x18\x3e\x8f\xa9\x1c\x8f\xa2\x4d\x29\x58\xa1\x46\x1b\x2c\xdc\xbe\x40\x28\x0f\xf6\xa1\xb1\x44\x40\x5a\xcf\x3a\xe6\xfa\x5d\xdb\x5f\xc0\x65\xf9\xeb\xbc\xb5\x9c\xd4\x20\x58\xe1\xce\x03\xd4\x10\x17\x3b\x7b\x37\x2c\x49\xdd\x7c\x0a\xd6\xbe\x92\xfd\xc0\xf8\x43\x9e\xc1\xdf\xe0\x16\x9d\x37\xc7\x5a\xf0\xa7\xf8\x4f\x89\x06\x8b\xc5\x61\xdf\x61\x77\xe8\xac\x6e\x92\xc0\xef\x66\x51\x17\xf8\xf1\x7b\x97\x08\x19\x1f\x3e\xdc\x8e\xaa\xdb\x7a\x8f\xae\x8e\x1c\x3a\x90\x2b\x2c\x41\xba\xbe\x5f\xfe\xfc\x71\xf6\x3a\x6e\x52\xf2\xa9\x3b\xba\x08\xbb\x43\xed\x5c\x9b\x31\xfe\xc0\x56\x58\xd5\x5f\x32\xf6\x14\xa8\x3c\x8f\x2d\x1f\xd8\xa4\x2d\x19\xc9\x54\x9f\x3f\xce\xda\xee\x7e\x89\x9b\xd7\x61\x3f\x7c\x0b\xa7\x0c\x67\xaa\xba\xbb\x3f\x10\xa3\x9b\xa4\x65\x11\x06\x61\x34\x7c\xdb\x57\x7f\x4d\x56\xdd\x17\x4a\x0d\xf3\xd1\x68\xe7\x9b\xbb\x79\x90\x04\xb6\x83\xff\x05\x00\x00\xff\xff\x9f\xe6\xa4\x34\x88\x28\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 10376, mode: os.FileMode(420), modTime: time.Unix(1553318029, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cfcrYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x1a\x69\x8f\xe3\xb6\xf5\xbb\x7f\x85\x90\x2f\xd9\x14\xa0\x2c\xf9\x1a\x8f\x80\xa0\x48\x36\x6d\x11\x04\x68\x17\xbb\xe8\x01\x14\x85\x40\x91\xcf\x32\x63\x8a\x54\x48\xca\x3b\x9e\xa2\xff\xbd\xa0\x6e\xea\xf0\xb1\x3b\xfd\xd0\xfd\xb0\x03\xf1\x1d\x7c\x8f\x7c\xb7\x89\x29\x95\x42\x47\x0b\xe4\xfd\x2a\x13\x1d\x2d\x3c\x0f\x79\x02\x67\x10\x79\xa7\x22\x91\x88\x0a\x8d\x30\x67\x58\x83\x5e\x78\x9e\xe7\x29\xe0\x80\x75\x0d\x5d\x78\x35\x6a\x22\xf5\xd1\x41\x3d\x00\x36\x85\x82\x92\x5f\xa1\x21\xa6\x42\xc7\x98\x52\x05\x5a\x83\x8e\x3c\xa3\x0a\x58\x30\xa1\x0d\x16\x04\xe2\x54\xc9\x22\x2f\x45\xc0\xaf\xb5\x04\xaf\xe1\xc2\xf3\x1a\x04\x1d\x79\xf6\x73\x28\x1f\xce\x73\x7e\x41\x3a\x07\x52\x89\x96\x2b\x99\x83\x32\xac\xda\xd5\xfe\x6b\x74\xab\xbe\x90\x95\x19\xac\x98\xed\x42\x06\x46\x31\xa2\x91\x06\x75\x06\xd5\x2e\x1f\x01\xe7\xda\xf4\x16\x2c\xa1\x12\x60\x40\x23\x8a\xf5\x31\x91\x58\xd1\x76\x8f\x8c\x09\x94\x63\xad\x3f\x4b\x45\x23\xef\xdd\xbb\xf2\xdc\xdc\xe5\xef\xbe\x73\xb0\x0b\x0d\xaa\xd6\xc1\x7e\x37\xb0\x9c\x21\x23\x4f\x20\x6a\x26\xc0\xc1\x8c\x39\x18\xde\x2a\xe4\xb5\x82\x5a\x0a\xc3\x35\x6a\xbe\x5b\x6c\x7b\x88\x07\x5e\xbc\xd0\xa4\x41\x69\xbe\x7b\x28\x9d\x76\x0d\x52\xb7\x32\x89\xd6\x1d\xc2\x98\xa0\x83\xf5\x48\xdd\x73\x6e\x88\xdc\xd5\x1a\x7d\x68\x60\x9c\x1d\x80\x5c\x08\x87\xc8\x03\xa5\xb0\xa0\xad\xd1\x55\xf7\x5f\xdd\xb1\x5d\x04\xf3\x59\xaa\x93\x63\x22\x14\x0e\xb8\xe0\x66\xe1\x79\xda\x40\x46\x80\xf3\xfe\xda\x39\x8b\xcd\x25\x87\xc8\xcb\x98\x60\x19\xe6\x23\x03\x44\xde\xeb\xaa\xfa\xb3\x76\xcd\x71\x3d\x61\x8e\x49\x9e\xb9\x0a\x54\x0b\x0d\xf8\xc0\xb1\x10\xc0\xe9\xa4\x92\x3d\x97\x03\x84\x73\xd6\xb3\xc7\x29\xab\x7e\x2b\x8b\x3b\xed\x35\xc2\x2a\xed\x19\x14\x2e\x28\x33\x88\xcb\x14\x65\xf8\x05\xa7\x10\x79\xc1\x34\x2c\xc1\xe4\x54\xe4\xb3\x60\xcd\x5e\x67\x68\x73\x6c\x8e\x91\xb7\x3c\x63\xb5\x3c\x13\x9c\x2f\xf5\x45\x2f\xb9\x4c\x97\xae\xea\xcb\x92\xc0\xe7\x32\x1d\xb0\xc8\x25\x67\xe4\x82\x0e\xcc\x1a\x44\xc7\xc5\x5e\xc6\x90\x05\x91\xe2\xc0\xd2\x8a\x53\x5c\xd1\xf9\x97\x8c\xf7\x18\x9a\xa3\x54\xec\x15\x1b\x26\x05\xca\x24\x85\xc8\xfb\xf8\xe3\x0f\xef\x5b\x04\xc2\x19\x08\x83\x08\x7e\x64\xbb\x9e\x27\x10\xec\xe7\x90\xb5\xec\x28\xd3\x38\xe1\x50\x5e\x94\xd6\x76\xcf\x9c\x17\x29\x13\x3a\xf2\xfe\xf9\xaf\x16\x0b\xc4\x03\x48\x69\xaa\x20\xc5\x46\x2a\xa4\x64\x61\x98\x48\xeb\xd0\x3a\xc0\x4b\xa4\x34\xda\x28\x9c\x57\xf1\x05\x59\xcd\xa7\x31\xf5\x67\x9c\xa6\xa0\x50\xc1\x86\x70\x43\x28\x22\xf8\x81\x83\xa8\x29\x7c\xa2\xcc\x80\x0b\x28\xf3\x30\x9f\xf2\x2a\xc6\xbc\x4e\x70\xf9\x42\x56\x27\xb8\x38\x91\xcd\x06\xdb\xe6\xc2\xad\xbf\x1d\x18\xc1\xe6\x91\x4b\x1f\x30\x70\xae\x7e\x00\x3f\xc1\xe5\xcb\x18\x9f\xe0\xe2\xf0\xcd\x95\x7c\xb9\xf4\x77\xfd\x32\x4b\x9d\xe7\x79\x82\x87\x7c\xad\x67\xfc\x43\x51\x15\xfc\x56\x80\x36\x47\xc0\x14\x14\xc2\x9c\xcb\xcf\x40\x91\x8d\x49\x3a\xf2\x3a\x43\x9e\xc1\x7f\x63\x57\x74\x99\xc3\x8b\x51\x18\x55\x1f\x1a\xe5\x0a\x0e\xec\x25\xf2\xfe\x81\x3e\x42\x26\x0d\xa0\x3f\x94\xe0\x19\xda\xb2\x76\x69\x68\x7b\x44\x7f\xb2\xeb\x33\x34\x4d\x30\x9e\x20\xfb\xab\x86\xde\x11\x14\xc2\xb0\x0c\x50\xa5\x8e\x4d\x78\x6c\x79\x0e\x5b\xb0\x06\x52\x28\x40\xb9\x54\x26\xf2\xf6\x9b\xcd\xba\x07\x51\x67\x46\x00\x61\x42\x64\xf1\xf8\x2d\x0e\xc9\xf3\x22\xe1\x8c\x8c\x6e\xb4\x41\x23\xbc\xb0\x35\x07\x62\x39\x52\x58\xd8\x9c\x11\x06\x7e\x18\x04\xfe\x2a\x08\xfc\x60\xb9\xda\x74\x14\x46\x2a\x9c\x02\xca\x80\x32\x8c\xaa\xdc\x6b\xb3\xb8\x75\x35\x26\xc5\xf2\x57\x2d\x45\x8b\x6c\x2b\x84\x37\x32\x69\xcb\x2a\x57\xec\x8c\x0d\xbc\xa1\x45\x77\xb1\xf4\x11\x86\x25\x95\xf6\x89\x3e\xb7\x8c\xce\x91\xb7\x5a\x74\x81\xc2\xde\xb7\x51\x92\x73\x50\x28\xc3\x02\xdb\x78\x3c\xc8\xf6\x57\x71\xda\xd4\x5f\x22\x56\xee\x3c\xa2\x77\x97\x5d\x12\x4d\x8e\x40\x0b\x3e\xb5\xed\x18\xe4\x90\xda\x50\x45\x15\x1e\x97\x27\x13\x90\x11\xe1\x14\xc9\x08\x79\xde\x36\x2d\xd9\x84\xe1\xfb\x15\x46\x7c\x82\xcb\x74\x0d\xed\x86\xd8\x7e\x41\xdb\xad\x4e\x17\xcb\xed\x9a\xe7\x11\x3c\xae\x84\x7d\x82\x7b\x74\x9e\xe7\xa4\x95\x31\x72\x07\x75\xa8\x6a\xbb\x8d\x6b\x0d\x07\x54\x3d\xe8\x4c\xfd\xec\x94\x96\x63\xab\x99\xab\x31\x87\xbd\xc8\x5d\x06\xd7\x44\x02\xcd\x52\x51\x16\x23\x55\x69\x1a\xf7\x0e\x62\x5c\x72\x0e\x88\x6e\xf9\xfc\x58\x8e\xc6\xb3\x46\x8c\xdc\x98\x3f\x04\x5f\x0f\x04\xf7\x6f\x33\x0c\x0b\x96\xbc\x89\xd8\x8f\x71\xee\x28\xbb\x14\x20\xe5\x8d\xac\x77\x45\x50\x3c\x19\xae\x5b\xcf\xb9\x2b\x20\xce\xb3\xbf\xc2\xcf\x0d\x93\xa0\x32\x26\xb0\x01\x8a\x72\x49\x51\x4a\x90\x39\x2a\xd0\x47\xc9\xa9\xcd\x14\xc1\x23\x01\xff\xfa\xd9\x4d\xd9\xe8\xa8\x14\xbb\x3f\x17\x3c\xbe\xd9\xdc\x11\x14\x1a\xd0\xf0\xb8\x88\x02\x0a\xc2\x30\xcc\xf5\xa0\xd4\xee\xa5\x83\x2b\x67\x3c\x1b\xee\x46\x11\x61\x22\xde\x4d\x08\xdf\x0f\x2e\x13\xe0\xc7\xc6\x05\x57\x83\x50\x9b\x43\xee\x8e\x3d\x37\xb2\x4e\x0f\x5e\x5d\x50\xa1\xca\x7a\xa2\xd7\xd6\xe6\xec\x6f\xa0\x6c\x3b\x15\x79\x44\x66\xb9\x14\x20\x4c\x7d\x99\xe7\x10\xf3\xfc\x88\xc3\x41\xdb\xf7\x5e\x0a\x01\xc4\x65\x73\xdb\xb9\x5b\x49\xae\xf8\x74\xdd\x07\x7e\x50\x00\x59\x5e\x6e\xe0\x1d\x30\xd7\x9d\x01\x9c\x98\xa0\x91\xf7\x4b\x91\xc0\xa7\x86\xdd\xfb\xbe\x5e\x73\xb7\xfa\x15\x97\x52\x97\x38\x4a\x72\x98\x1f\xa6\xbd\xd5\xd8\xe1\xad\x04\xb7\xed\xdc\x8c\xb0\x16\xd4\xed\x41\x85\x8e\x75\x71\x28\xcb\x7a\x0b\xf1\xc9\x81\x28\x9f\x09\x63\xa5\xe3\x53\x52\xb9\xf4\xfd\xfc\x5e\xf6\x90\xe7\x00\x85\x4f\x28\x28\x33\xfc\xbb\x77\x76\x29\xb6\x9d\xee\x4c\x0a\x9f\x48\xfc\x2e\x97\xfb\x53\xbf\x43\x37\xe5\xea\x95\xe8\xc4\xf0\x79\xe9\x89\xe1\x5f\x27\x78\xc9\xe0\x31\x99\x2d\xc9\xb4\xb8\x39\x80\xfa\x3f\x3c\xe9\xd6\x26\xad\x29\xa1\xda\x12\x1b\xc3\xd4\x99\x3c\x01\x32\xa0\xcd\xb5\xa1\x79\x86\xeb\x19\xf3\xf5\xc9\x65\x6e\x03\x97\x36\x20\x4c\x4c\x99\x3e\x45\xde\x36\x5c\x05\xb7\x26\x9a\x3a\xc3\xfc\x2b\xe7\x99\x77\x0d\x2c\xa9\x24\xa7\xd9\x40\x9e\x28\x46\x6d\x3b\x48\x04\x6b\xb2\x7c\x2d\x6a\x5c\x70\x96\x31\xd3\x1b\xcd\x0b\x69\x13\xf1\xf7\xbb\xed\x76\xbd\x6b\x7c\x58\x9c\x23\xef\xdf\xff\xa9\xbf\x6a\x71\x9c\x5c\xc9\xf2\x38\xc3\xfa\x37\x37\x7e\xb2\xdc\xd8\xf0\xaa\xdd\x55\xce\xce\x10\x2b\xb0\x1d\x28\x38\x3c\xb8\x4c\x63\x0e\x67\xcb\x19\x94\x6a\x07\x10\x76\x59\x96\xd1\xb9\x27\x64\x86\x5f\x90\x66\xaf\xf0\x7d\xb8\xda\x67\xce\x6a\x29\x7c\x9b\xb5\xab\x36\x37\xa6\x8a\x95\xd3\x6e\x79\x06\xc5\xf1\xa5\x0f\x86\x98\x32\xd5\x4f\x21\x14\x1b\xec\x9e\x74\x7b\xb4\x13\x71\x9a\x42\x0e\x82\x82\x20\x6c\xe6\x67\x99\x3e\x0d\x07\x73\x6f\xa6\x9d\x6c\xb9\xaa\xb6\x6d\x12\x77\xae\xa3\x1b\x17\xf9\x82\xa1\x84\x09\x34\xd0\xba\x4d\x9c\x1c\xcc\x32\xc7\xe4\x84\x53\xd0\x4b\x22\xd8\x32\x61\xdd\x24\xc0\x56\x23\x98\x09\x50\xa8\x9e\x88\x38\x76\x57\x8a\x58\x7e\x46\x5e\x21\xd8\x4b\xb4\x5c\xba\xd3\x65\x55\x88\x65\x85\x50\xff\xf1\xb5\x24\xa7\x01\x2d\x02\x41\x73\xc9\x6c\x03\xf8\x25\x4c\x6e\xd4\x05\x56\xbd\xf9\x82\xa0\xf6\xff\x7a\xd2\x5b\xfa\xcb\xa0\x35\xbe\xa3\xac\xa9\x51\xfd\x0a\xd5\x3f\xed\xb5\xcf\xe4\xf2\x1c\x26\x60\x7a\xb5\x0d\x2e\xcc\xd1\x56\x9d\x04\x0f\x2b\x1b\x2c\xa4\xb8\x64\xb2\x70\xda\xda\x66\x2e\x4c\x87\x25\x8a\xe7\xbd\x6c\x83\x67\x17\xb5\xae\x9b\x7e\xf8\xe3\x5c\x45\x3d\x38\x85\xfe\xc0\xd4\x6d\x55\x9c\xc9\x7c\x7f\x93\x6a\x48\xff\x77\x48\x8e\x52\x9e\x86\x9d\xdd\x4f\x7f\xfe\xd4\xe1\xa2\xfe\x10\x2a\x0c\x46\xb8\x32\xc3\xe5\x51\x57\x9f\x3e\x97\x04\x77\xbf\x0c\x1c\x30\xe3\x9f\x3e\xe3\xfc\x2f\x57\x4a\x33\x0e\x66\xaa\x28\x2b\x6b\x76\x86\x39\x7b\x85\x9f\x33\x9c\xc2\x87\x82\x73\x3d\xe4\x62\xb8\x7e\x0f\xca\x3c\x70\x50\xc3\x16\xe6\x43\x95\x90\x7e\x81\xcb\x23\xa7\xed\xf6\x25\x53\x53\x90\xc1\xf8\x63\x50\xf5\x3b\x37\x16\xdd\x1e\x6d\x74\xf8\xee\x2c\xe4\x6b\x3b\x88\x72\x78\x75\x77\xf7\x70\x6d\xd4\x55\x0f\xbb\xef\x73\xaf\x12\x79\xe4\x60\x6f\xd8\x3d\x94\x1b\x5c\x09\x14\xb5\xb5\xbe\xff\xf9\xa7\x8f\xe5\x90\xb5\x1c\xb0\xfa\xc1\x32\xdc\xb5\x28\x6d\xf6\xeb\x7b\x0d\xd6\xbf\x15\xa0\x30\x85\x1f\x6c\xb9\x30\xf4\xe4\x0e\xfc\x23\x33\x91\x17\x6e\xfa\x30\x26\x3e\x5d\x04\xf9\x00\x8a\x49\x1a\x79\x81\xee\xc1\x74\x0f\xb0\xee\x41\x3a\x1f\xf9\x60\xf5\x99\xf6\x92\xca\x93\x1b\x69\xbb\x6a\x50\x2a\xf3\xb1\x1a\x22\x7f\xf3\xcd\x1b\xb5\x0b\x95\xe1\xd8\x08\x7b\x47\xb5\x75\xbb\xaa\x42\x47\x96\x1e\x33\xc8\x16\x15\xa9\xad\xff\x16\xf5\x96\xe5\x1b\x86\xee\xf1\x84\x65\x77\xc4\x61\xe4\xe1\x15\x26\xe1\x7a\xbb\x5d\xd3\x43\xf8\xb4\x0e\x57\x01\x79\x5e\xef\xc9\x2e\x20\x09\x24\x5b\x4a\x42\x8a\x09\x0d\xd7\x64\xbf\xf0\xbc\x42\xf1\xc8\x3b\x1a\x93\xeb\x68\xb9\xac\x0b\x09\x3f\x95\x32\xe5\x80\x73\xa6\x7d\x22\xb3\x65\xd9\x77\xe5\x0a\x6c\x27\xcb\x38\x50\xd4\x6c\x5f\x41\x02\x7f\xb5\xf5\x03\x54\x24\x85\x30\x05\x7a\x01\xc1\x30\x47\xe1\x53\xe0\x3f\xa3\x55\x10\xee\xc3\x55\xb0\x45\xe1\x6e\xb3\xda\x6e\xd0\x7a\xbb\x0b\xb6\xdb\xe7\xf5\xd6\x37\xe9\xab\xd5\xb4\x31\xf7\x8a\x47\xab\x4d\xbf\xc8\xad\x54\x82\x3d\xd9\x1f\x36\xfb\x2d\x06\x1a\xac\x9f\xf1\x9e\x00\xec\x48\xb2\x4f\x82\xd5\x7e\xf7\xfc\xb4\x7a\xde\xc0\x13\x5d\x1d\x12\x3a\x54\x29\x65\xe6\x58\x24\xa5\x1a\x84\xcb\x82\x1e\x64\x21\xa8\xba\x20\x26\x48\x91\x60\x23\xd5\xb2\xdd\xab\x51\x6b\xd9\xaa\x47\xe5\x67\xc1\x25\xa6\xcb\x73\xe8\xef\xfd\x60\x8c\x8a\xca\xf5\xa1\x32\xe5\xe2\x62\x54\xb2\x56\x8a\xec\xf7\xeb\x1d\xd0\xd5\x66\xbb\x09\x76\x38\x01\xbc\x05\x8c\x83\x64\x8d\x31\x49\xb6\xbb\x3d\xe0\xcd\x2a\x84\xe4\x29\x59\x3f\xae\x48\x5d\x58\x24\x52\x1f\xaf\x68\xb2\x5e\x97\x2e\x5c\x23\x57\x5f\x43\x05\xaa\xd5\x85\xfb\xd2\xa0\x12\x7f\x93\xec\x20\x39\x50\x8c\x37\xbb\x27\x12\x6c\xf6\xdb\xed\x76\xb5\x0f\x9f\x56\x49\xf0\xfc\x0c\xdb\xdd\x96\xee\x9e\x9e\x21\x38\x6c\x87\xe2\x5b\xa9\x6c\xfc\xa2\x77\x28\x92\xe4\x59\x73\xc0\xbf\x3f\x7f\x1f\xf8\xe1\xda\x0f\x5c\x63\x29\x57\x1a\xd7\xa9\x5e\xf2\x70\x86\x75\xdf\x89\xa4\x8e\x3c\xc7\x24\x9d\x1b\xb2\xd6\xb9\x28\x72\x6a\x13\xc8\xc2\x36\x81\x02\x2b\xd6\x3c\xfc\x29\xbf\x2e\xf1\x67\x6c\xc8\x31\xae\xea\xbf\x30\x08\x82\x00\xad\xed\xff\x56\x94\x0c\xbf\xc4\x4c\xc4\x07\xce\xd2\xa3\xa9\x88\x2a\x66\xf3\x44\x67\xac\x58\x1d\x29\x9d\x07\x4f\xee\x3c\x63\xe1\x79\x95\xeb\xb7\x0b\x83\xca\xfa\x01\x4c\xb7\x58\xbe\x8e\x3f\x48\x5a\x37\x90\xaf\xcc\xe6\x6f\x50\x8e\x27\x6b\x57\x09\x64\x4c\x6c\x97\xe2\x34\x46\x44\x66\x99\x14\x71\x1d\x28\xaa\x26\x86\xe9\xd8\xf6\xf1\x75\x9b\x55\xf1\xeb\xd5\x08\x2d\xcb\x5e\xa1\x30\x64\x8b\x79\x39\x9d\x31\xb6\x6f\xab\x7f\x25\xae\x1f\x40\x58\xce\x9d\x2c\x03\x01\xda\x32\x78\x34\xe1\x91\x2a\xc5\xa2\xa9\x29\x3d\x7d\xb1\xe6\x1a\x09\x49\xcb\xec\x73\x97\x88\x75\x2d\x33\x3a\x80\x5b\xf2\x74\x3f\x02\x4e\x88\x05\x2f\xc6\xb6\x72\x34\x3e\xc1\x25\x2e\x34\x4e\xa1\xe2\x8a\xea\x4a\x22\xb6\xc5\xf0\xbc\x02\xd5\x10\xe1\x3e\x15\xaa\x2c\x79\xfb\xa0\xeb\xfd\xfb\x05\x74\xbd\xe4\x70\x71\x17\xfc\xce\xd5\xa7\x01\xbe\x3e\x93\xab\x40\x7f\x5c\x8c\xa3\x7a\x48\x32\x71\x6e\x57\x4f\x7d\x96\xea\x8b\xcf\x70\x62\xd4\xde\xe2\x2b\x8d\x47\x67\x3d\xfd\x53\xdb\x7d\x07\x5f\xea\x7f\x94\xba\x39\xcb\x70\xf5\x54\x66\x85\xf0\x4e\x73\x9b\xf9\x95\x6f\xde\xd2\x2a\xe3\xec\x2c\x6d\x84\x40\x59\xca\x0c\xe6\xb1\x66\xa9\x28\x1f\x76\x36\x17\x09\x97\x18\x04\x61\xf9\x11\x54\x56\xb9\xc6\x75\x33\xec\x4f\xd5\x1e\xf2\xa3\x6f\x7f\xe7\x8f\x27\xb7\xdf\x3e\xe8\x41\x43\x4d\x6f\xcb\x4a\x0c\x7f\x48\x4c\x4b\xf3\xbe\x89\x12\xf7\x8b\x76\x5d\x90\xd1\x2b\xd5\xfb\xcc\xc8\x25\xf3\xab\x78\x5f\x5a\x7c\xeb\x8a\xd7\x9d\x68\xb8\xed\x75\x29\x7b\x8f\x66\xef\x93\xaf\x21\x18\x4a\x36\x11\x07\xae\xca\xd9\xdb\xf8\xba\x84\xcd\xd3\xd7\x37\x4a\x35\x99\x14\xcc\x48\xc5\x44\xda\xe7\x3c\x2f\xc2\xd4\x1b\x59\xf4\xbf\xc9\xa7\x13\x6f\x95\x1f\xd3\x78\x46\xd0\x89\x68\x53\x21\xb6\x78\xa3\x98\x3b\x16\xf6\xbf\x01\x00\x00\xff\xff\xaa\xe0\x90\xd9\x72\x2e\x00\x00")

func cfcrYmlBytes() ([]byte, error) {
	return bindataRead(
		_cfcrYml,
		"cfcr.yml",
	)
}

func cfcrYml() (*asset, error) {
	bytes, err := cfcrYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cfcr.yml", size: 11890, mode: os.FileMode(420), modTime: time.Unix(1553318029, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudConfigIaasAwsUseVmExtensionsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x4b\xae\xc3\x20\x0c\x85\xe1\x79\x56\xe1\x21\x0c\xd8\x40\x36\x63\x71\x89\x73\x85\x0a\x36\x32\xee\x6b\xf7\x55\x48\xa4\x0e\xfa\x90\x3a\xc5\xfc\x47\xdf\xa5\x22\xdd\x8c\xb8\x67\xe1\x3e\x4f\x01\x52\x91\xf3\x82\x4d\xa5\x91\x5a\xa6\x3e\x4f\x00\x00\x39\x56\xcc\xdc\x2d\x72\xa2\xed\xb8\xe6\x42\x33\x38\x57\x63\x37\x52\x7c\x77\xf6\x7e\x94\x54\xfe\x8e\x0d\x80\x00\xce\xa5\x35\x29\x1e\x99\x45\xfd\x27\xc3\x26\x52\xc6\x6f\x8e\x75\xac\x2e\xd4\x8a\xdc\x2b\xb1\xe1\xf6\xe4\x7d\xd8\x83\x30\x70\xe1\x89\xfb\xd9\x7b\x15\x3d\x7d\xf3\x7e\x16\xec\xe5\xab\xe0\x11\x00\x00\xff\xff\x5a\xf5\x8a\x88\x41\x01\x00\x00")

func cloudConfigIaasAwsUseVmExtensionsYmlBytes() ([]byte, error) {
	return bindataRead(
		_cloudConfigIaasAwsUseVmExtensionsYml,
		"cloud-config/iaas/aws/use-vm-extensions.yml",
	)
}

func cloudConfigIaasAwsUseVmExtensionsYml() (*asset, error) {
	bytes, err := cloudConfigIaasAwsUseVmExtensionsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud-config/iaas/aws/use-vm-extensions.yml", size: 321, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudConfigIaasAzureUseVmExtensionsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x91\x3d\x4e\x04\x31\x0c\x85\xfb\x39\x45\xca\xdd\x22\x17\x98\x8e\x43\x50\x47\x66\xf2\x34\x8a\x48\xe2\xc8\x4e\x80\xdc\x1e\x69\x7e\x80\x5d\xd8\x82\xd5\x6c\x6b\xfb\xf3\x67\xeb\xbd\x25\x87\x8f\x8a\xac\x81\xb3\x8e\x83\x35\x53\xe4\xe6\x5d\x11\x2e\x90\x1a\xa0\xe3\x60\x8c\x31\x02\xe5\x26\x13\xdc\x2c\xdc\x8a\xcb\x94\x30\x9a\xd3\xe9\x8f\xf2\xf9\xbc\x00\x91\xc9\xbb\x17\x8a\x94\x27\xc8\xba\xc3\x98\x1d\x4b\xa4\x15\xe2\x2e\x66\x7e\xc2\x77\xf8\x14\x53\x93\x50\xfb\xda\xb9\x21\xbc\x1c\xba\x5f\x96\x28\xd3\x0c\xef\x82\x47\xae\xa1\xf6\x5d\x57\x7b\xc1\x68\x9e\x15\xf2\xa4\x1a\xe6\x0c\xbf\x35\x9a\x42\x1c\x6d\xb5\x2f\xcc\x5d\x9d\x77\xbd\x76\xb1\xed\x33\x1e\x25\x72\x4f\xc8\x75\xbb\xc4\xae\x94\x5d\x02\xb3\xdf\x81\x0d\xc7\x85\x78\xf4\x9f\xef\x2c\xaf\xff\xff\x73\xa5\x1e\xf7\xe7\x6d\x33\x95\x12\xbb\x25\xef\x39\xeb\x6f\xff\x67\x00\x00\x00\xff\xff\x88\xab\xae\x69\x3b\x03\x00\x00")

func cloudConfigIaasAzureUseVmExtensionsYmlBytes() ([]byte, error) {
	return bindataRead(
		_cloudConfigIaasAzureUseVmExtensionsYml,
		"cloud-config/iaas/azure/use-vm-extensions.yml",
	)
}

func cloudConfigIaasAzureUseVmExtensionsYml() (*asset, error) {
	bytes, err := cloudConfigIaasAzureUseVmExtensionsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud-config/iaas/azure/use-vm-extensions.yml", size: 827, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudConfigIaasGcpUseVmExtensionsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xce\x31\x0e\xc2\x30\x0c\x05\xd0\xbd\xa7\xf0\xd8\x0c\xb9\x40\x2f\x63\x05\xc7\x48\x55\x1b\xbb\xb2\xd3\x02\xb7\x47\xa4\x08\xa4\xa2\x2e\x8c\xf9\xf9\xdf\x7a\x5b\x41\xbe\x57\x16\x1f\x55\x7c\xe8\x22\xd0\xac\x6b\xc6\xc5\x74\x61\xab\x23\xfb\xd0\x01\x00\x5c\x12\x4d\x2c\x19\x9d\x6d\x1b\x89\x07\xe8\x7b\xba\x92\xe1\x21\x0f\xa1\xb5\xdf\x2f\x4c\x44\xba\x4a\xfd\xb4\x4b\xf2\xca\x86\x87\x6f\x4c\x39\x1b\xbb\xb7\xb1\xa4\xd2\xae\x67\x5e\x66\x7d\x14\x96\x8a\xaf\x28\x84\xb8\x8f\x63\xf3\xc5\xaf\xef\x94\x7c\x86\xb8\xa9\x4d\x7f\x23\xf6\xf1\x2f\xe2\x19\x00\x00\xff\xff\x1f\xc8\x2f\x2f\x47\x01\x00\x00")

func cloudConfigIaasGcpUseVmExtensionsYmlBytes() ([]byte, error) {
	return bindataRead(
		_cloudConfigIaasGcpUseVmExtensionsYml,
		"cloud-config/iaas/gcp/use-vm-extensions.yml",
	)
}

func cloudConfigIaasGcpUseVmExtensionsYml() (*asset, error) {
	bytes, err := cloudConfigIaasGcpUseVmExtensionsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud-config/iaas/gcp/use-vm-extensions.yml", size: 327, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudConfigIaasVsphereUseVmExtensionsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xcb\x8d\x4f\xad\x28\x49\xcd\x2b\xce\xcc\xcf\x2b\xb6\xe2\xd2\x55\x48\xce\xc9\x2f\x4d\x89\x2f\x28\xca\x2f\x48\x2d\x2a\xc9\x4c\x2d\xb6\xe2\x52\x50\x50\x50\x28\xcb\xad\x88\xcf\x2f\x28\x81\x28\x52\x00\x83\x94\xcc\xe2\x6c\xbd\xd4\xbc\xc4\xa4\x9c\xd4\xd0\x50\x4f\x17\x2b\x05\x25\x43\x25\x2e\x05\x85\xbc\xc4\xdc\x54\x2b\x05\x88\xb8\x2e\x48\x8d\x2e\x48\x96\x0b\x10\x00\x00\xff\xff\x5d\x75\xe0\x2d\x68\x00\x00\x00")

func cloudConfigIaasVsphereUseVmExtensionsYmlBytes() ([]byte, error) {
	return bindataRead(
		_cloudConfigIaasVsphereUseVmExtensionsYml,
		"cloud-config/iaas/vsphere/use-vm-extensions.yml",
	)
}

func cloudConfigIaasVsphereUseVmExtensionsYml() (*asset, error) {
	bytes, err := cloudConfigIaasVsphereUseVmExtensionsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud-config/iaas/vsphere/use-vm-extensions.yml", size: 104, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesAddHostnameToMasterCertificateYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xca\x31\x0a\xc3\x30\x0c\x05\xd0\xdd\xa7\xd0\x98\x0c\xc6\xbb\xa1\x67\x29\x3f\xe5\x43\x4c\x55\x5b\x58\x8a\xa1\xb7\x0f\x99\xdf\xcb\x12\x7f\x63\x95\x49\x53\x7c\x98\x44\x0c\x71\x56\x29\x0b\xb3\xe1\x50\x7a\xe9\xf8\xf1\x15\xea\xf9\x7b\x1d\x9c\x9d\x41\x2f\xc3\xa2\x8d\xee\x05\x1a\x9c\x1d\xd1\x16\xdf\xcf\xf3\x92\x93\xc8\x82\x5e\xac\xb2\x6d\xb0\x96\xcf\xe1\xf1\xd0\xbe\xa7\x3b\x00\x00\xff\xff\x90\x3a\xf2\x7f\x6d\x00\x00\x00")

func opsFilesAddHostnameToMasterCertificateYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesAddHostnameToMasterCertificateYml,
		"ops-files/add-hostname-to-master-certificate.yml",
	)
}

func opsFilesAddHostnameToMasterCertificateYml() (*asset, error) {
	bytes, err := opsFilesAddHostnameToMasterCertificateYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/add-hostname-to-master-certificate.yml", size: 109, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesAddOidcEndpointYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x91\xc1\x4e\xc3\x30\x0c\x86\xef\x7d\x8a\x1c\xb7\x43\xc8\x15\x55\x42\x7d\x94\xca\x4b\xdd\x62\x96\x36\x96\x9d\x54\xf0\xf6\x68\x0d\xab\x10\xa3\x47\xc2\xd5\x9f\xfc\xfb\x93\x7f\x6b\xd2\x07\x63\x6b\x04\x39\x80\xc7\xc6\x18\x86\xf4\xda\x1a\x47\x8b\x26\x58\x3c\xf6\x93\xc4\xcc\xea\x16\x98\xf1\x65\x06\x4d\x28\xee\x2d\x5e\xbe\x06\xd7\x7c\x41\x0b\x4c\x8a\xb2\xa2\x38\x96\xc8\x28\x89\x50\x5d\xa4\xc1\x77\xce\x43\xd7\x18\xb3\x42\xc8\xd8\x9a\xd3\xe9\x36\xec\x3d\x9c\xcf\x4d\xf3\x67\x87\xaf\xcf\x6a\x41\x26\xed\x36\x05\xeb\xc1\x8e\x14\xf0\x9b\x86\x5b\x41\xdc\xea\x81\x4b\xdc\x8f\x24\x1f\x97\x91\xa6\xfb\xee\x13\xe3\x5c\xd1\x35\x10\x2e\xc9\xd2\xf0\xcb\xd3\x36\xd4\xd3\x50\xf3\x77\x25\xc5\xfa\x00\x34\x3f\x2a\x15\xda\x6f\xf4\x1f\xac\x58\x70\xa4\xf7\x43\xad\x82\x6b\x7a\x91\x6a\x46\xb1\x59\xc2\xa3\x54\x61\x7d\x96\x50\xd3\x28\x2b\xca\x6d\xe3\xa8\xc1\x3b\xaf\xdf\xe1\x6e\x76\xd4\xe2\xae\xb6\xf7\xf8\x19\x00\x00\xff\xff\x9a\xc1\x8d\x1e\xaa\x04\x00\x00")

func opsFilesAddOidcEndpointYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesAddOidcEndpointYml,
		"ops-files/add-oidc-endpoint.yml",
	)
}

func opsFilesAddOidcEndpointYml() (*asset, error) {
	bytes, err := opsFilesAddOidcEndpointYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/add-oidc-endpoint.yml", size: 1194, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesAddProxyYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd1\xc1\x4e\x84\x40\x0c\xc6\xf1\xfb\x3c\x45\x8f\xbb\x07\x32\x77\x12\xe3\xa3\x6c\xca\xd8\x00\x32\x4c\x9b\x4e\x41\x79\x7b\x63\xa2\x51\x23\x4a\xc8\x32\x5c\xbf\xcb\xaf\xcd\xbf\x02\x5b\x84\x6a\x50\x92\x88\x81\x1c\x80\xa0\x75\x35\xf8\x3e\x65\xc3\x14\xe8\xd6\x2a\x4f\x92\x7d\xc2\x91\x1e\x5e\x58\x07\x52\xff\xcc\xcd\xc7\xf0\xc4\xe1\x7d\x10\x65\x21\xb5\x9e\xb2\xa7\x34\xfb\xce\x4c\x6e\xa2\xfc\xba\x3c\x3a\x80\x19\xe3\x44\x35\x5c\x2e\x5f\xf3\xf5\xea\xdc\x9d\xf2\x30\x35\x14\xc9\xbe\xd3\x05\xd8\x11\xb3\xfd\x62\x2b\x94\x3e\x93\xce\x3f\x1f\x3f\x4d\x0f\x9c\x4c\x39\x46\xd2\x6a\xc4\x84\x6d\xf1\x33\x76\x54\xcf\x7f\xd0\xb9\x74\xf7\xc3\xe1\x9d\xe5\x4f\xf2\xb7\xdb\x97\x2f\xb0\x5e\x3f\xf1\x0a\xfc\x39\x96\xe9\x7e\x30\xb9\xa3\xf8\x29\xf2\xff\xad\xb7\x4e\x78\x0b\x00\x00\xff\xff\xa0\x32\x91\x58\xd9\x05\x00\x00")

func opsFilesAddProxyYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesAddProxyYml,
		"ops-files/add-proxy.yml",
	)
}

func opsFilesAddProxyYml() (*asset, error) {
	bytes, err := opsFilesAddProxyYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/add-proxy.yml", size: 1497, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesAddVmExtensionsToMasterYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcc\x41\x0a\x02\x31\x0c\x05\xd0\x7d\x4f\x91\x0b\x94\xee\x0b\xe2\x51\x86\x6f\xfd\xea\x40\x9b\x96\x24\x33\xe8\xed\x45\xdc\x3f\x5e\x96\xf8\x2c\x56\x31\xae\x8e\xc6\x24\xb2\x10\xaf\x2a\x65\x57\x0f\x68\xe3\xf6\xb4\x79\x2c\x2f\x8a\xc1\xcb\x80\x07\xad\x9c\x63\xe3\x3b\xa8\xbe\x4f\xf5\x6b\xc9\x49\xe4\x44\x3f\x58\xa5\x3d\x9a\xe5\xbf\xca\x7d\xe2\x7e\x43\xff\x25\x96\xbe\x01\x00\x00\xff\xff\x34\xb6\x94\xdf\x68\x00\x00\x00")

func opsFilesAddVmExtensionsToMasterYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesAddVmExtensionsToMasterYml,
		"ops-files/add-vm-extensions-to-master.yml",
	)
}

func opsFilesAddVmExtensionsToMasterYml() (*asset, error) {
	bytes, err := opsFilesAddVmExtensionsToMasterYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/add-vm-extensions-to-master.yml", size: 104, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesAddonsSpecYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xca\x41\x0a\xc2\x30\x10\x05\xd0\x7d\x4e\x31\xcb\x76\x51\x66\x1f\x10\x8f\x22\x63\xfa\xd1\x4a\x4c\x3e\x99\xa9\xd0\xdb\x0b\xba\xd1\xed\xe3\x2d\x12\x07\x91\x65\x80\xd5\x0a\x92\x08\x2d\xee\x59\x74\x6b\x1e\xd6\x0a\x2e\xb7\xd1\x77\xba\x36\x7b\xe2\x64\x64\x3d\x16\x5b\xd7\xde\x5c\x1f\xfd\xfa\xc7\x4e\x14\x57\x8e\x4e\x8c\xd8\xe0\xfa\x7d\x1f\x3f\x27\x91\x97\xd5\x1d\x59\xa6\xe9\xc7\xe7\x39\xbd\x03\x00\x00\xff\xff\xf4\x07\x2a\x74\x82\x00\x00\x00")

func opsFilesAddonsSpecYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesAddonsSpecYml,
		"ops-files/addons-spec.yml",
	)
}

func opsFilesAddonsSpecYml() (*asset, error) {
	bytes, err := opsFilesAddonsSpecYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/addons-spec.yml", size: 130, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesAllowPrivilegedContainersYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xc1\xad\xc2\x30\x0c\x06\xe0\x7b\xa6\xf0\x02\x96\xaf\x4f\x95\x9e\x18\x05\xb9\xe5\x57\x09\x4d\x1b\xcb\x76\x82\xd8\x9e\x0b\xd7\x8f\x99\x0b\x53\x7e\x0c\x0b\x39\xac\xe9\x86\x42\x64\x9a\xcf\x85\xa4\x5e\x91\x7a\x6d\xb8\xef\xde\x87\x85\x5c\x7a\xe2\xff\xd4\x48\xb8\xbc\xfa\xfa\x83\x63\xac\x60\xb5\x1a\xf0\x09\x17\xf3\x6e\xf0\xac\x08\x39\xfe\x82\xd5\xf7\x10\x6d\xad\xbf\xd9\xbc\xce\xda\xb0\xe3\x71\x2b\x44\x53\xdb\xc0\x42\xe9\x03\xe5\x1b\x00\x00\xff\xff\xed\xb4\x22\xe8\x86\x00\x00\x00")

func opsFilesAllowPrivilegedContainersYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesAllowPrivilegedContainersYml,
		"ops-files/allow-privileged-containers.yml",
	)
}

func opsFilesAllowPrivilegedContainersYml() (*asset, error) {
	bytes, err := opsFilesAllowPrivilegedContainersYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/allow-privileged-containers.yml", size: 134, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesChangeCidrsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xb1\x6e\x14\x41\x0c\x86\xfb\x7d\x0a\x4b\x34\x49\x31\x1a\x4a\x74\x12\x4a\x41\x28\xd2\x04\x04\xe9\x10\x1a\xf9\x76\xbc\xb7\x26\x93\x19\x63\xcf\xde\x71\x6f\x8f\x26\xec\x29\xbb\x21\x29\x4e\xd0\x7a\x6c\xff\x9f\xbf\x5d\xe7\x5c\xe7\xa0\x1e\x85\x36\xa0\x24\x09\x7b\xea\x00\x04\xeb\xb8\x01\xcf\xd9\x2a\xe6\x9e\xc2\x4e\xcb\x24\xe6\x33\x3e\xd0\x7b\x14\x49\x47\x87\x31\x96\x6c\xfe\x47\xd9\xae\xca\x26\xd4\x9b\x17\x2d\x42\x5a\x99\xcc\xdf\x4f\x5b\x8a\xd9\x9c\x91\xee\xb9\x27\xc7\x72\xd5\x01\xec\x31\x4d\xb4\x81\x8b\x8b\xf9\x39\xcc\xcf\x81\xe5\xf2\xb2\x3b\x13\xe8\x01\xad\x92\x2e\x50\xda\x52\x87\xc2\x6d\x29\xe9\x8a\xe6\x9d\x39\xd4\x9d\xf9\x13\x4e\x9f\xa6\x36\xec\x58\x9c\x62\xde\xd1\x0a\xee\x04\x35\x37\x85\x9e\xa3\x9e\x8f\x77\x28\x7a\xff\x17\x5e\xa2\xfa\xdc\x52\xa2\xea\xfa\x92\x07\xde\x4d\x8a\x95\x4b\xf6\x73\xee\xf5\xed\xd7\x05\xd6\xb7\x97\xa5\x7d\xff\x67\xac\x21\x61\xce\x94\xe2\x82\xeb\x29\xb6\x03\x00\x90\x12\x5d\xa6\xda\x26\x5d\x73\xd1\x1c\x49\x89\x61\xae\xfd\x4f\x3f\x4e\xb4\xfc\x3a\x3e\x57\xf4\xa7\xba\xb6\x74\x75\xd2\xf4\xe1\xe6\xfa\xcb\xea\xf3\xbd\x84\xf6\x06\x6e\x3f\xdd\x7d\xdc\xc0\xdd\xc8\x06\x6c\xa0\xf4\x73\x62\xa5\x08\x43\x51\xa8\x23\x41\xa4\x01\xa7\x54\xa1\xc5\x69\xa6\x4a\x06\xb3\x66\x38\x8c\xdc\x8f\x80\xe9\x80\x47\x03\x9d\xb2\x41\xc9\x30\xb0\x5a\x85\x9b\xcf\x80\x31\x2a\x99\x41\x19\x1e\xf7\x9c\x86\x1a\xd5\xeb\x42\xf6\xa8\x8c\xdb\x44\xf3\xe5\x35\x99\x7b\x0a\xf6\x45\xda\x81\xe6\x31\x55\xd2\x8c\x95\xf7\x14\x5a\x9f\xf9\xb7\xcb\x3b\x1f\x11\x02\x4b\x28\x43\x78\xe5\x97\xfd\x1d\x00\x00\xff\xff\x45\x42\x71\xfe\xe6\x03\x00\x00")

func opsFilesChangeCidrsYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesChangeCidrsYml,
		"ops-files/change-cidrs.yml",
	)
}

func opsFilesChangeCidrsYml() (*asset, error) {
	bytes, err := opsFilesChangeCidrsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/change-cidrs.yml", size: 998, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesChangeEtcdMetricsUrlYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xce\x31\x8a\x03\x31\x0c\x85\xe1\xde\xa7\x50\x39\x2e\x8c\x7a\xc3\x32\x47\x31\x5a\x47\x24\x0e\xb6\x25\x64\x4d\x20\xb7\x0f\x03\xa9\x52\xa4\x4b\xf9\x1e\x7f\xf1\xa5\x94\x42\x02\x7f\x2a\x67\x30\xd6\x4e\x95\x03\x80\x92\xdf\x32\x60\x9b\xcb\x69\x56\x2e\x57\x93\x43\x17\x4e\x1a\xfc\x37\x68\x39\x1b\xde\xe5\xff\x7d\xb0\xd7\x0b\xaa\x89\xb2\x79\xe3\x85\xe7\xde\x71\xb0\x5b\xab\xab\xa8\x89\x4b\x95\xbe\x07\x80\x07\xf5\x83\x33\x6c\xdb\x99\x94\xcf\x22\xc6\xf0\x63\x8a\x98\x7f\x61\x88\x79\x8c\xaf\x00\x00\x00\xff\xff\x9e\xee\x4d\x6a\x10\x01\x00\x00")

func opsFilesChangeEtcdMetricsUrlYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesChangeEtcdMetricsUrlYml,
		"ops-files/change-etcd-metrics-url.yml",
	)
}

func opsFilesChangeEtcdMetricsUrlYml() (*asset, error) {
	bytes, err := opsFilesChangeEtcdMetricsUrlYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/change-etcd-metrics-url.yml", size: 272, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesDisableAnonymousAuthYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\x41\x0a\x83\x40\x0c\x05\xd0\xfd\x9c\x22\x17\x08\xd9\x16\xa1\xf4\x28\x25\xca\xaf\x5a\x9d\x99\x90\x64\x04\x6f\xdf\x4d\xb7\x8f\x99\x0b\x53\xde\x86\x89\x1c\x76\xea\x82\x42\x64\x9a\xdb\x44\xb2\xb7\x48\x6d\x0b\xde\xab\xf7\x61\x21\x4d\x2b\x9e\x55\x23\xe1\xf2\xed\xf3\x1f\x8e\x31\x83\xd5\xf6\x80\x5f\x70\x31\xef\x06\xcf\x1d\x21\xc7\x23\x58\x7d\x0d\xd1\xd6\xdb\x5d\xfb\x08\xd6\x91\xdb\xab\x10\x5d\x7a\x0e\x4c\xf4\xd1\x33\x50\x7e\x01\x00\x00\xff\xff\x57\x3f\x0d\x21\x85\x00\x00\x00")

func opsFilesDisableAnonymousAuthYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesDisableAnonymousAuthYml,
		"ops-files/disable-anonymous-auth.yml",
	)
}

func opsFilesDisableAnonymousAuthYml() (*asset, error) {
	bytes, err := opsFilesDisableAnonymousAuthYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/disable-anonymous-auth.yml", size: 133, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesEnableBbrYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xcd\xc1\x0d\x02\x21\x10\x85\xe1\x3b\x55\xbc\x06\x08\x77\x12\x6b\x31\x03\x3e\x75\xdd\x5d\x20\x33\xc3\x26\x76\x6f\x34\x5e\x2c\xc0\xeb\xff\x1f\xbe\x08\x7f\x0e\x66\x28\xc7\x26\x95\x01\x18\xe2\xf7\x8c\xb4\x34\x73\x69\x95\xe7\x9b\xf6\x39\x2c\x35\xd9\x79\xda\xc5\x9c\x9a\x1e\xbd\x58\x8a\x01\x38\x64\x9b\xcc\x01\x00\xde\x3f\xa3\x14\x8d\xf4\x7a\xf9\x24\xe5\x46\x31\x66\xd4\x6b\xfd\xe6\xf0\x07\x6f\x9d\x85\x51\xc6\x62\xd4\x83\xfa\x2b\xaf\xb3\xf4\xf0\x0a\x00\x00\xff\xff\x6c\x32\x71\xc0\xe4\x00\x00\x00")

func opsFilesEnableBbrYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesEnableBbrYml,
		"ops-files/enable-bbr.yml",
	)
}

func opsFilesEnableBbrYml() (*asset, error) {
	bytes, err := opsFilesEnableBbrYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/enable-bbr.yml", size: 228, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesEnableDenyescalatingexecYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\x31\x6e\xc5\x20\x0c\x06\xe0\x9d\x53\xf8\x02\x16\x6b\x15\xa9\x5b\x73\x8e\xca\xa1\xbf\x28\x0d\x31\x96\x0d\x51\x73\xfb\xb7\xbc\xf5\x63\xe6\xc4\x34\x1f\xc3\x46\x0e\xeb\x52\x90\x88\x4c\xe6\xef\x46\xb9\x69\x4c\xd1\x82\xef\xea\x63\x59\x64\x95\x0b\x9f\x97\xc4\x84\xe7\xbf\x71\xbc\xe1\x5c\x07\x58\xac\x05\xfc\x86\x67\xf3\x61\xf0\xd9\x10\xf9\xfc\x08\x16\xaf\x91\xa1\x72\x74\xb0\xfc\x5c\x2d\xa2\x0d\x65\xeb\xab\x36\x8d\xcc\x89\xe8\x96\xbe\xb0\xd1\x17\xf4\xd9\xa3\x48\x97\xd9\xb4\xee\xff\x28\xe9\x15\x00\x00\xff\xff\x35\xee\x27\x60\x9d\x00\x00\x00")

func opsFilesEnableDenyescalatingexecYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesEnableDenyescalatingexecYml,
		"ops-files/enable-denyescalatingexec.yml",
	)
}

func opsFilesEnableDenyescalatingexecYml() (*asset, error) {
	bytes, err := opsFilesEnableDenyescalatingexecYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/enable-denyescalatingexec.yml", size: 157, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesEnableEncryptionConfigYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x8f\xbd\x4e\xc4\x30\x10\x84\x7b\x3f\xc5\x96\x77\xc5\xb2\x2d\x8a\x84\x78\x14\xb4\x67\x86\x60\xce\x3f\xab\xb5\x63\x91\xb7\xa7\x08\x05\x22\xf5\xb5\x33\x23\x7d\xdf\x30\x73\x60\x1a\xbb\x61\x21\x87\x65\x8d\x08\x44\xa6\xe3\x73\x21\x49\xb5\x0f\xad\x11\x6f\xab\xb7\xcd\xba\x54\x2d\x78\x29\xda\x07\x5c\xbe\xda\xed\x37\xb8\x6f\x37\xb0\x5a\xea\xf0\x09\x17\xf3\x66\xf0\x91\xd0\x05\x35\xfa\x6e\x23\xb5\xca\xb1\xd5\x8f\xb4\xbe\x06\xa2\xa9\x79\xc3\x42\x97\xcb\xa9\xbd\x5e\x1f\xa7\x72\x7f\xee\xac\xbe\x76\xc1\xb7\xc1\x53\x41\x1d\x9a\xf9\x8f\x82\x79\x9b\xe9\x1d\x7e\x36\x95\xa9\x2e\x33\xaa\x1d\xa0\x7f\x8c\x63\x7e\xbe\xfa\xb4\x97\x1c\x7e\x02\x00\x00\xff\xff\x0a\x8c\xa0\x42\x5e\x01\x00\x00")

func opsFilesEnableEncryptionConfigYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesEnableEncryptionConfigYml,
		"ops-files/enable-encryption-config.yml",
	)
}

func opsFilesEnableEncryptionConfigYml() (*asset, error) {
	bytes, err := opsFilesEnableEncryptionConfigYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/enable-encryption-config.yml", size: 350, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesEnableNfsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xc1\x0d\xc2\x30\x0c\x05\xd0\x7b\xa6\xf0\x02\x95\xef\x91\x50\x47\x41\x6e\xfa\x81\xd0\xe2\x58\xb6\x03\x62\x7b\x2e\x5c\xdf\x42\xf9\x35\x54\x72\xd8\x29\x0d\x85\xc8\x24\x1f\x95\xb8\x6b\xa4\x68\xc3\xf5\xee\x63\x5a\xb0\xca\x0b\x97\xcf\xf0\x03\xce\xcf\xb1\xfd\xe1\x98\x1b\x5c\x91\x88\x65\x87\x41\x77\x68\xeb\x08\x36\x1f\x06\xcf\x8e\x58\x59\x6f\xb1\x16\xa2\xb7\x9c\x13\x95\xd2\x27\xca\x2f\x00\x00\xff\xff\x99\x97\x7b\x9e\x76\x00\x00\x00")

func opsFilesEnableNfsYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesEnableNfsYml,
		"ops-files/enable-nfs.yml",
	)
}

func opsFilesEnableNfsYml() (*asset, error) {
	bytes, err := opsFilesEnableNfsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/enable-nfs.yml", size: 118, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesEnablePodsecuritypolicyYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xc1\x89\xc4\x30\x0c\x05\xd0\xbb\xab\x50\x03\xc2\xd7\x25\xb0\x3d\x04\xb6\x80\x45\x71\x3e\x19\x4d\x1c\x5b\x48\x76\x20\xdd\xcf\x65\xae\x8f\x99\x13\xd3\x78\x0c\x0b\x39\xac\x4a\x41\x22\x32\x19\xaf\x85\xb2\xb6\x18\xd2\x0a\xfe\x0f\xef\xd3\x22\x37\xb9\xf0\x7b\x49\x0c\x78\x7e\xf7\xed\x0b\xe7\xdc\xc0\x62\x1a\xf0\x1b\x9e\xcd\xbb\xc1\x87\x22\xf2\xf9\x13\x2c\x7e\x44\x46\x93\xad\x82\x65\xbf\x34\x42\x7b\x63\xab\xf3\xd0\x16\x99\x13\xd1\x2d\x75\x62\xa1\xb5\xef\x7f\x28\xd3\x75\x3c\x6b\xaf\x5a\x9e\xf4\x09\x00\x00\xff\xff\xac\x0a\x84\x0b\x9c\x00\x00\x00")

func opsFilesEnablePodsecuritypolicyYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesEnablePodsecuritypolicyYml,
		"ops-files/enable-podsecuritypolicy.yml",
	)
}

func opsFilesEnablePodsecuritypolicyYml() (*asset, error) {
	bytes, err := opsFilesEnablePodsecuritypolicyYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/enable-podsecuritypolicy.yml", size: 156, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesEnableSecuritycontextdenyYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xb1\x6d\xc4\x30\x0c\x05\xd0\x5e\x53\x70\x01\x42\x6d\x60\x20\x55\xb2\x41\x06\x08\x68\xe7\xc3\xd1\x59\xa6\x08\x92\x32\xce\xdb\x5f\x73\xed\x63\xe6\xc2\x94\xb7\x61\x21\x87\x75\xd9\x50\x88\x4c\xf2\x7f\xa1\xda\x34\x52\x74\xc3\xef\xee\x63\x5a\x54\x95\x13\x9f\xa7\x44\xc2\xeb\x63\xac\x6f\x38\xe6\x0a\x16\x6b\x01\xbf\xe0\xd5\x7c\x18\x3c\x1b\xa2\x1e\x1f\xc1\xe2\x7b\x54\xa8\xac\x1d\x2c\x7f\x67\x8b\x68\x43\xd9\xfa\xdc\x9b\x46\xe5\x42\x74\x49\x9f\x58\xe8\x07\xdb\xf4\x96\xf7\xd7\xd0\xc4\x33\xbf\xa1\x77\x79\x05\x00\x00\xff\xff\x96\xe0\xd3\xff\x9e\x00\x00\x00")

func opsFilesEnableSecuritycontextdenyYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesEnableSecuritycontextdenyYml,
		"ops-files/enable-securitycontextdeny.yml",
	)
}

func opsFilesEnableSecuritycontextdenyYml() (*asset, error) {
	bytes, err := opsFilesEnableSecuritycontextdenyYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/enable-securitycontextdeny.yml", size: 158, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesExampleVarsFilesIaasAzureCloudProviderYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x4d\x6e\xc4\x20\x0c\x85\xf7\x9c\x82\x0b\xe4\x02\x51\x55\xa9\xea\x05\x7a\x03\xe4\x10\xcf\x8c\x55\x82\x91\x7f\x52\xa5\xa7\xaf\x60\xba\xc8\x22\x9b\xd9\x20\xf4\xf9\x7b\x7a\x60\xf8\x75\xc1\x94\x0b\xfb\x9a\x2a\x6c\x38\xc7\x8f\x4e\xbe\x7c\x29\x94\x3f\x3b\x0e\xea\x8b\x66\xa1\x66\xc4\x35\xd1\x3a\xc7\xb7\x83\x5d\xe2\x19\x47\x5a\xdf\x83\x61\x85\x6a\x27\xe3\x09\xc6\xac\x70\x86\x2e\xce\x51\xd9\xed\x81\xa0\x06\x4a\x10\x04\x95\x5d\x32\xa6\xbb\xb0\xb7\xff\x17\x28\x6c\xad\xe0\x94\x6f\x59\xa6\x85\xf5\x11\xf6\x8a\x96\x5e\x50\xaf\x67\xd3\x5e\xfb\x5f\xae\x85\x71\x68\x0d\x2b\xde\xc0\x8b\x25\xc5\xec\x42\x76\x3c\xdb\x2e\xdc\x0d\xd4\x50\x26\xbd\x87\x26\xb4\x81\x1c\x09\x76\xa0\x02\x0b\x95\x1e\x53\xb4\x39\x8e\xd6\x73\x72\x6c\x7b\xdc\x7e\x58\xbe\x51\xc2\x5f\x00\x00\x00\xff\xff\x81\xb3\x84\xa3\x7f\x01\x00\x00")

func opsFilesExampleVarsFilesIaasAzureCloudProviderYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesExampleVarsFilesIaasAzureCloudProviderYml,
		"ops-files/example-vars-files/iaas/azure/cloud-provider.yml",
	)
}

func opsFilesExampleVarsFilesIaasAzureCloudProviderYml() (*asset, error) {
	bytes, err := opsFilesExampleVarsFilesIaasAzureCloudProviderYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/example-vars-files/iaas/azure/cloud-provider.yml", size: 383, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesExampleVarsFilesIaasGcpCloudProviderYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\xc1\x0d\x80\x20\x0c\x46\xe1\x7b\xa7\x60\x01\x16\x60\x19\xa2\xed\xaf\xa2\x42\x49\x6d\x62\xd8\xde\x83\x1c\xbf\xf7\xa4\x18\xd8\xd5\x72\x5b\x2a\x52\xa8\x23\xae\xfa\x1c\x24\xe8\xb7\x8e\x8a\xe6\x73\xf0\xc6\x46\x0d\xfe\xaa\x5d\x29\xec\xdc\xe3\x04\x75\xd3\x13\xec\xb9\xc8\xdf\xa7\x63\x11\xfa\x02\x00\x00\xff\xff\xe0\xbf\xf5\x7f\x5d\x00\x00\x00")

func opsFilesExampleVarsFilesIaasGcpCloudProviderYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesExampleVarsFilesIaasGcpCloudProviderYml,
		"ops-files/example-vars-files/iaas/gcp/cloud-provider.yml",
	)
}

func opsFilesExampleVarsFilesIaasGcpCloudProviderYml() (*asset, error) {
	bytes, err := opsFilesExampleVarsFilesIaasGcpCloudProviderYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/example-vars-files/iaas/gcp/cloud-provider.yml", size: 93, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesExampleVarsFilesIaasOpenstackCloudProviderYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\xaa\x02\x31\x10\x44\xf7\x73\x8a\x86\xbf\xf9\x5e\xc1\x33\x08\x82\xe2\x3a\x34\x49\xab\xad\x93\xee\xd0\x49\xf0\xfa\x92\x19\xc3\x8c\x83\xdb\x57\xf5\x8a\xc2\x5a\xee\xae\xda\xb8\x87\x3f\x38\x26\x92\x73\x41\xff\x84\x46\x49\x0a\x7b\x2c\xac\x02\x97\xd3\x61\xd0\x44\x92\x5b\xe8\x82\x46\x64\xf9\x16\x66\x06\xff\x9a\x9a\x80\xe3\x6e\xd5\x4f\xa6\x0f\xf2\xc5\x71\xe8\xce\xc4\xe1\xc3\x41\x30\xd2\x60\x74\x63\xdd\x8c\xce\xec\xf7\x68\xcd\x64\x4d\xdc\xfc\x0e\x91\x05\x7a\xb6\xfe\x80\x39\xbf\xd4\xa6\x07\x4b\x09\x3a\x86\xab\xda\x32\x33\xbc\x03\x00\x00\xff\xff\xfe\xd9\x3a\x00\x15\x01\x00\x00")

func opsFilesExampleVarsFilesIaasOpenstackCloudProviderYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesExampleVarsFilesIaasOpenstackCloudProviderYml,
		"ops-files/example-vars-files/iaas/openstack/cloud-provider.yml",
	)
}

func opsFilesExampleVarsFilesIaasOpenstackCloudProviderYml() (*asset, error) {
	bytes, err := opsFilesExampleVarsFilesIaasOpenstackCloudProviderYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/example-vars-files/iaas/openstack/cloud-provider.yml", size: 277, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesExampleVarsFilesIaasVsphereCloudProviderYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8b\xcd\x0e\x82\x30\x0c\x80\xef\x3c\x45\x5f\x60\xd8\x0e\x09\xb0\x9b\x7a\xf2\x29\x08\xfb\x31\x59\x22\x8c\xac\x30\x3d\xf8\xf0\x66\x31\xce\xc4\xd3\xd7\x7e\x5f\x6b\x7d\x74\x66\x0b\x71\xdc\x77\x6f\x15\x50\x33\xb8\x16\xf5\x24\xec\x51\x77\x82\xc8\x75\x42\xf7\x68\x44\xd7\xf4\x5a\xdf\x5a\x89\xbd\xc4\x2a\x19\xb7\x6c\x2e\x8e\x7e\x55\x40\x58\x13\xd5\x24\x6b\x59\xf4\x3c\x71\xc6\xce\x2e\x2a\xf8\x2c\xff\x6d\x9d\x98\x1f\x21\xda\x6f\x2f\xa2\x1c\x5a\xa3\xe0\x9a\xa7\xa7\x0f\x0b\x9c\xce\x17\x2a\x29\xcd\xac\x60\x8d\xc1\x1e\xd2\xcc\xbf\x07\x56\x90\xc2\xbd\xc1\xe1\x95\x41\x58\xbd\x03\x00\x00\xff\xff\x26\x15\x41\x2d\xdb\x00\x00\x00")

func opsFilesExampleVarsFilesIaasVsphereCloudProviderYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesExampleVarsFilesIaasVsphereCloudProviderYml,
		"ops-files/example-vars-files/iaas/vsphere/cloud-provider.yml",
	)
}

func opsFilesExampleVarsFilesIaasVsphereCloudProviderYml() (*asset, error) {
	bytes, err := opsFilesExampleVarsFilesIaasVsphereCloudProviderYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/example-vars-files/iaas/vsphere/cloud-provider.yml", size: 219, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesExampleVarsFilesIaasVsphereSetWorkingDirNoRpYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4b\x4e\xcd\x2b\x49\x2d\x8a\xcf\x2c\xb0\x52\x30\x34\xd0\x33\x34\xd4\x33\x34\xd2\x33\xe2\x82\x09\xe7\x26\x16\x83\xa8\xd2\xe2\xd4\x22\x2b\x05\x08\x07\x5d\xae\x20\xb1\xb8\xb8\x3c\xbf\x28\x05\x26\x0f\x17\x80\x2b\x4c\x29\xb6\x52\x28\xcb\xcf\x31\x36\xb0\xac\x01\x51\x86\x06\x08\x99\x64\x2b\x05\x4f\x10\xab\x22\x33\x3f\x4f\xc1\xd1\xc9\xd9\x10\x2e\x55\x96\x5b\x6c\xa5\x50\x50\x94\x9f\xa2\x5f\x96\x5b\xcc\x05\x08\x00\x00\xff\xff\xf6\x83\x91\x0b\xa7\x00\x00\x00")

func opsFilesExampleVarsFilesIaasVsphereSetWorkingDirNoRpYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesExampleVarsFilesIaasVsphereSetWorkingDirNoRpYml,
		"ops-files/example-vars-files/iaas/vsphere/set-working-dir-no-rp.yml",
	)
}

func opsFilesExampleVarsFilesIaasVsphereSetWorkingDirNoRpYml() (*asset, error) {
	bytes, err := opsFilesExampleVarsFilesIaasVsphereSetWorkingDirNoRpYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/example-vars-files/iaas/vsphere/set-working-dir-no-rp.yml", size: 167, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesExampleVarsFilesMiscBootstrapYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xca\xc1\x09\xc3\x30\x0c\x05\xd0\xbb\xa7\xf0\x02\x2d\xf4\xea\x65\x84\xad\xfe\x52\x70\x24\x19\x49\x26\x64\xfb\xdc\x73\x7f\x5f\xac\xc3\x2e\x81\x26\x69\x17\xb4\xca\x3f\xf6\xd7\x30\xcb\x48\xef\xab\xcc\x3d\xe0\x8a\x44\x90\xf4\x48\x38\xfd\x2d\xf2\xc9\xde\x6c\x52\x4e\xf3\x09\x27\xb6\xad\xd9\xea\xa7\xdc\x01\x00\x00\xff\xff\x50\xf1\x68\x3b\x5b\x00\x00\x00")

func opsFilesExampleVarsFilesMiscBootstrapYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesExampleVarsFilesMiscBootstrapYml,
		"ops-files/example-vars-files/misc/bootstrap.yml",
	)
}

func opsFilesExampleVarsFilesMiscBootstrapYml() (*asset, error) {
	bytes, err := opsFilesExampleVarsFilesMiscBootstrapYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/example-vars-files/misc/bootstrap.yml", size: 91, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesExampleVarsFilesMiscOidcYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcb\x4b\x0e\x83\x30\x0c\x84\xe1\x3d\xa7\xc8\x05\x80\xbd\x2f\x13\x19\xe3\x16\x8b\x90\x44\x7e\x48\x3d\x7e\x25\xa2\x2e\xda\x2e\x47\xdf\xfc\x4d\x76\xca\x62\x16\xac\x39\xb4\x40\x3a\xdc\xbb\xc1\xba\x06\xe2\x72\xc6\xd6\x16\x3b\xa6\xfb\x44\x45\xb8\x7a\x96\x1d\xd2\x19\x1b\x6b\x65\x67\x1b\x14\xc6\x5a\xf1\xe2\x4c\x05\xe5\x82\x64\xb1\xfd\x40\x57\x7e\xc8\x0b\x52\x20\x0e\x79\x6a\x8b\x6e\x9f\x60\xac\x2f\xf9\x2b\x08\xef\x31\x13\xce\xc4\xea\xd3\x3b\x00\x00\xff\xff\x09\x8b\x66\x43\xba\x00\x00\x00")

func opsFilesExampleVarsFilesMiscOidcYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesExampleVarsFilesMiscOidcYml,
		"ops-files/example-vars-files/misc/oidc.yml",
	)
}

func opsFilesExampleVarsFilesMiscOidcYml() (*asset, error) {
	bytes, err := opsFilesExampleVarsFilesMiscOidcYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/example-vars-files/misc/oidc.yml", size: 186, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesExampleVarsFilesNewCidrsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4e\x2d\x2a\xcb\x4c\x4e\x8d\x4f\xce\x29\x2d\x2e\x49\x2d\x8a\x4f\xce\x4c\x29\xb2\x52\x30\xb4\x34\xd2\x33\x34\xb3\xd0\x33\x32\xd0\x33\xd0\x37\x32\xe1\xca\x2e\x4d\x4a\x4d\xc9\x2b\x8e\x87\xa9\xce\x2c\x40\x51\x63\x6a\xc0\x95\x96\x59\x54\x5c\x12\x9f\x59\x10\x9f\x9f\x16\x4f\xd0\x4c\x43\xae\x82\xfc\x94\xf8\xbc\xd4\x92\xf2\xfc\xa2\x6c\x74\x69\x23\x88\x95\x80\x00\x00\x00\xff\xff\x9f\x64\x90\x52\x99\x00\x00\x00")

func opsFilesExampleVarsFilesNewCidrsYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesExampleVarsFilesNewCidrsYml,
		"ops-files/example-vars-files/new-cidrs.yml",
	)
}

func opsFilesExampleVarsFilesNewCidrsYml() (*asset, error) {
	bytes, err := opsFilesExampleVarsFilesNewCidrsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/example-vars-files/new-cidrs.yml", size: 153, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesExampleVarsFilesSystemSpecsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x5b\x0a\x03\x21\x0c\x00\xff\x3d\x45\x2e\xe0\x05\x72\x99\x12\x35\xcb\x8a\x56\xc5\xc4\xb6\x7b\xfb\xa2\x65\x61\x5b\xe8\xdf\x0c\x43\x1e\x69\x38\xce\xac\xb6\x91\xc8\xb3\xf6\x80\x70\x92\x49\xc3\x55\x4b\xe1\x1e\xcb\xa5\x7e\xbb\xd1\x2c\x76\xae\xe8\x85\x95\x05\x0d\x80\x27\x04\x4f\x13\xb8\x6b\xdc\xa2\x27\x65\x5c\x62\x00\x5a\x8f\x0f\x52\xbe\x25\x3e\x10\x12\x1f\x6b\x7e\x67\x6a\xa2\xdc\x11\xae\xb6\x52\x2c\x5b\x1e\xaf\xe0\x3e\xe9\xb4\x9f\xab\x36\x90\xec\xae\xd2\x7c\xef\x5f\x31\xef\x00\x00\x00\xff\xff\xdc\xff\x1c\xa9\xe8\x00\x00\x00")

func opsFilesExampleVarsFilesSystemSpecsYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesExampleVarsFilesSystemSpecsYml,
		"ops-files/example-vars-files/system-specs.yml",
	)
}

func opsFilesExampleVarsFilesSystemSpecsYml() (*asset, error) {
	bytes, err := opsFilesExampleVarsFilesSystemSpecsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/example-vars-files/system-specs.yml", size: 232, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasAwsAddMasterCredentialsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8d\x4b\xaa\x83\x40\x10\x45\xe7\xae\xa2\x86\x3a\x90\x9e\x37\x3c\xde\x52\x9a\x4a\x7b\x49\x3a\x51\xbb\xa8\x2a\x15\x77\x1f\xc8\x87\xfc\xa6\xf7\x9c\xc3\xed\xc9\x77\x41\x24\x85\x8c\x9c\xd1\x10\x09\xfb\x29\x52\x28\xb3\x39\xcf\x19\xe9\xa8\x75\x11\x0b\x33\x4f\xf8\x9b\xd8\x1c\x1a\xce\xf5\xf0\x18\xf2\x58\x97\xa1\x17\xad\x6b\x19\xa0\x41\xb4\x0a\xd4\x0b\x2c\x7c\x11\xde\xec\xbf\x21\x5a\x79\x5c\x10\x1b\x22\x22\xce\x19\x66\xe9\x82\x3d\x95\x21\x52\xdb\xf2\x66\xe9\x63\x4c\xf7\xbb\xae\xbb\xf9\x86\xac\xf0\x37\xe3\xd9\xfc\x80\x57\x77\x0d\x00\x00\xff\xff\x8e\x91\x0d\xee\xde\x00\x00\x00")

func opsFilesIaasAwsAddMasterCredentialsYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasAwsAddMasterCredentialsYml,
		"ops-files/iaas/aws/add-master-credentials.yml",
	)
}

func opsFilesIaasAwsAddMasterCredentialsYml() (*asset, error) {
	bytes, err := opsFilesIaasAwsAddMasterCredentialsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/aws/add-master-credentials.yml", size: 222, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasAwsAddWorkerCredentialsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8d\x4b\xaa\x83\x40\x10\x45\xe7\xae\xa2\x86\x3a\x90\x9e\x37\x3c\xde\x52\x9a\x4a\x7b\x49\x3a\x1a\xab\xa8\x6a\x15\x77\x1f\xc8\x87\xfc\xa6\xf7\x9c\xc3\xed\xa9\xee\x8a\x48\x06\x9d\x38\xa3\x21\x52\xae\xa7\x48\xa1\xcc\x5e\x79\xce\x48\x47\x93\x45\x3d\xcc\x7c\xc1\xdf\x26\x36\xc2\xc2\x59\x0e\x8f\x21\x4f\xb2\x0c\xbd\x9a\xac\x65\x80\x05\x35\x51\x58\x2d\xf0\xf0\x45\x78\xf3\xff\x86\x68\xe5\x69\x41\x6c\x88\x88\x38\x67\xb8\xa7\x11\x7b\x2a\x43\xa4\xb6\xe5\xcd\xd3\xc7\x98\xee\x77\x5d\x77\xf3\x1d\xd9\x50\xdf\x8c\x67\xf3\x03\x5e\xdd\x35\x00\x00\xff\xff\x2a\xe4\xfe\xf6\xde\x00\x00\x00")

func opsFilesIaasAwsAddWorkerCredentialsYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasAwsAddWorkerCredentialsYml,
		"ops-files/iaas/aws/add-worker-credentials.yml",
	)
}

func opsFilesIaasAwsAddWorkerCredentialsYml() (*asset, error) {
	bytes, err := opsFilesIaasAwsAddWorkerCredentialsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/aws/add-worker-credentials.yml", size: 222, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasAwsCloudConfigLbYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xca\x31\x0a\x02\x31\x10\x05\xd0\x3e\xa7\xf8\xe5\x6e\x21\xe9\x03\xe2\x41\x44\xc2\xb8\x7e\x54\x98\x98\x61\x32\x1b\xf0\xf6\x22\x5b\xbf\x77\x42\x7c\x8d\x05\x4e\x53\xd9\x98\x00\x93\x78\x15\xe4\xd9\xea\x5f\x46\xfe\x48\xe3\xb9\xc9\x08\x7a\xde\xb4\xef\x8f\x6a\xde\x8d\x1e\x6f\x8e\x4c\xbd\x8f\x4b\x02\xa6\xe8\xce\x82\xeb\xb2\x1c\xb3\x86\xf8\x93\x51\xad\x77\x5d\xd7\x5b\xfa\x05\x00\x00\xff\xff\xfb\x49\xb2\xa0\x67\x00\x00\x00")

func opsFilesIaasAwsCloudConfigLbYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasAwsCloudConfigLbYml,
		"ops-files/iaas/aws/cloud-config/lb.yml",
	)
}

func opsFilesIaasAwsCloudConfigLbYml() (*asset, error) {
	bytes, err := opsFilesIaasAwsCloudConfigLbYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/aws/cloud-config/lb.yml", size: 103, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasAwsCloudProviderYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x92\x51\x4e\xf3\x30\x10\x84\xdf\x73\x8a\xbd\x80\xe5\x77\x4b\xbf\xfe\xa3\xa0\xad\x33\x94\x50\xc7\x6b\xed\xda\x2d\x15\xe2\xee\xa8\x09\xa5\x14\xc4\x03\x28\x11\x7d\x9d\xd1\x78\x3e\x8f\xd6\x51\x3d\x16\x04\x52\x94\xc4\x11\x1d\x51\xe1\xfa\x10\xc8\x0f\xd9\x2a\xe7\x88\xbb\xad\x4a\x2b\xe6\x33\x8f\xf8\x37\xb2\x55\xa8\x7f\x94\x8d\x79\xd7\x11\xed\x39\x35\x84\x8e\x88\xe8\xe4\x07\x8a\x49\x5a\xef\x8a\xca\x7e\xe8\xa1\x93\xa1\x48\x60\x43\xa0\x5d\xdb\xc8\xa4\x14\x95\x02\xad\x03\x6c\x8e\xd2\xa7\xd8\x59\xa5\x37\x36\x3e\xd8\x39\x77\xf2\xbf\x4b\xd1\x33\x5b\xa0\x19\xd1\x5d\x7b\x2f\x5d\xf7\xfb\x8f\x4e\xc2\xae\x6d\xe0\xb8\x0c\x06\xdd\x43\x7d\x94\x6c\x6d\x84\xfd\xbf\x1e\xe1\x0b\xd1\xbd\xca\xb8\x2e\x53\x94\x5c\x55\x52\x82\xba\x91\x33\x6f\x6f\x09\x4e\x33\x2a\xcc\xa9\x24\xd8\x9f\x50\x1d\x44\x77\x37\x7e\xaf\x33\xe2\x92\x1f\x7d\x9f\x3f\xa1\xfe\x70\xf5\x95\x61\x2e\x43\xfa\xeb\x8a\x0b\xdd\x34\xde\x12\x7d\xa7\xb7\x9f\x8e\x6b\x55\x72\x29\xe9\xe8\xb8\xef\x25\xdb\x87\xe2\x59\xb6\x82\xb8\xd0\xbd\xbf\x06\x00\x00\xff\xff\x1b\xd5\x43\x58\x9f\x05\x00\x00")

func opsFilesIaasAwsCloudProviderYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasAwsCloudProviderYml,
		"ops-files/iaas/aws/cloud-provider.yml",
	)
}

func opsFilesIaasAwsCloudProviderYml() (*asset, error) {
	bytes, err := opsFilesIaasAwsCloudProviderYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/aws/cloud-provider.yml", size: 1439, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasAwsLbYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xc8\x31\x0a\x84\x30\x10\x05\xd0\x7e\x4e\xf1\xcb\xa4\x58\xb6\x9f\x66\x8b\x2d\x3d\x44\x18\xc3\x27\x82\x41\x42\x32\x11\xbc\xbd\x85\x60\xfb\x3e\xf0\xab\x51\xd1\xd9\xaa\x65\x0a\xd0\xcc\x37\xc5\xd7\xad\x8c\x9f\x00\xa7\xd5\x49\x15\x00\x58\xe6\xca\x7e\xd0\x39\xfe\x75\x0e\x67\x57\x84\xb0\xbf\x98\xf2\xa3\xc9\xad\xc4\x28\x77\x00\x00\x00\xff\xff\x1d\xc3\x33\xa7\x5a\x00\x00\x00")

func opsFilesIaasAwsLbYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasAwsLbYml,
		"ops-files/iaas/aws/lb.yml",
	)
}

func opsFilesIaasAwsLbYml() (*asset, error) {
	bytes, err := opsFilesIaasAwsLbYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/aws/lb.yml", size: 90, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasAzureCloudConfigLbYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcb\x31\x0a\xc3\x30\x0c\x05\xd0\xdd\xa7\xd0\x98\x0c\xc5\xbb\xa1\xf4\x28\x42\x75\x3e\x6d\x41\x8e\x84\xac\x04\x7a\xfb\x52\x32\x3f\xde\x8d\xf2\xeb\x68\x14\x70\x95\x8e\x42\xe4\x92\xef\x46\xf5\x1c\xfc\x97\x59\x77\x19\xb8\x0f\x99\x89\xa8\x5d\xed\xd8\xd8\xc3\x1c\x91\x1f\xcc\xaa\x26\x1b\x3f\x45\x65\xef\x88\x47\x21\x3a\x45\x0f\x34\x5a\x96\x6b\x70\x4a\xbc\x90\xec\x66\xba\xae\xe5\x17\x00\x00\xff\xff\x3c\x41\x0c\x19\x6e\x00\x00\x00")

func opsFilesIaasAzureCloudConfigLbYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasAzureCloudConfigLbYml,
		"ops-files/iaas/azure/cloud-config/lb.yml",
	)
}

func opsFilesIaasAzureCloudConfigLbYml() (*asset, error) {
	bytes, err := opsFilesIaasAzureCloudConfigLbYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/azure/cloud-config/lb.yml", size: 110, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasAzureCloudProviderYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\xc1\x8a\xdc\x3c\x0c\xc7\xef\xf3\x14\x3e\x66\x0f\x21\xf7\xc0\xc7\x47\x0b\xa5\xcc\x61\x7b\xe8\x3e\x40\x50\x6c\xcd\xd4\x1d\xc7\x36\x92\x9c\x6e\x5a\xfa\xee\xc5\xce\x64\x26\x33\xdb\x16\xb6\xec\xb2\xa5\xec\x2d\xd1\xff\x2f\xeb\x67\x21\xb9\x56\x32\x45\x6c\x15\x61\x74\xa0\x71\xa3\x54\x04\xf9\xd4\xaa\xc6\x7a\x16\xf0\x1a\xbb\x3d\x85\x14\xb9\xf1\x30\xe0\x7f\x03\xb0\x20\x35\x9f\x43\xcf\x4d\xbd\x51\x6a\x04\x97\xb0\xdd\x28\xa5\x54\xd6\x5b\xa5\x5d\x48\xa6\x8e\x14\x46\x6b\x90\x8a\x40\xe8\x10\x18\x5b\x75\x48\x7d\x28\x91\x48\x21\x22\x89\x45\x9e\x53\xd5\x55\xda\x12\x55\x47\x36\xf8\x9a\x08\x2f\x9c\x3a\xf8\x9d\xdd\x9f\x7d\x89\xf1\x16\x3c\xec\xd1\x6c\x0d\x7a\xb1\x32\xbd\xbb\x17\xf4\x6c\x83\x6f\x95\x50\xc2\x93\xb3\xe4\xb7\xaa\xaa\xca\xa1\x5d\xf9\xed\x32\xfb\xcd\xcd\xc9\xe3\x82\x06\x29\xa9\x55\xb5\x7c\xaf\xe4\x48\x76\x00\x9a\xde\x8c\x60\x1d\xf4\xd6\x59\x99\xee\x50\x3e\x94\xfb\x57\xd5\x51\xed\x60\x25\x77\x8c\xb2\x3a\x80\x90\x43\x22\x8d\xef\x73\x67\x73\xce\x12\x98\x7b\x7d\x8d\xc3\xa8\x13\x59\x99\x8a\x7d\x29\x63\x70\x07\xc9\x49\xb7\x88\x73\xea\x3a\x2b\xf5\xfe\x4c\x35\xff\x3d\x38\x39\xf5\xac\xc9\xc6\x7c\xc1\xad\x39\xfa\x4e\x91\xce\x9a\x95\x57\xd0\x83\x97\xd9\x35\x7f\x5f\xea\x89\x71\x7b\x1c\x99\x5b\x14\x30\x20\x70\xd5\xfa\x71\xc5\x33\xfe\x84\x26\xc7\x3e\x5e\xb7\xa6\x18\x7f\xdf\x1f\x17\xc0\xbc\x05\x97\x2b\xd3\xdd\x21\xb5\x2a\x53\x18\x20\xb3\x0c\x5b\x1e\xaa\x5f\x8d\x9a\xfa\x06\xdc\xaa\x79\xae\xeb\x4b\xed\xfb\x66\xf3\xe7\xdb\x51\x02\x87\xd4\x63\x0d\xd1\x32\xd2\x88\xd4\xe8\xe0\x39\x0d\xc8\xff\x5f\x6e\xce\x03\xa2\x1d\x85\xe1\x79\x99\x74\xf0\x42\xc1\x39\xa4\x7a\x28\x7b\xf3\x17\xc1\x91\x47\x41\xae\x29\x38\xe4\x17\xa1\x82\x18\xdd\x54\x83\x31\xc1\xf3\x8a\x6d\x0e\x73\x44\xfd\x32\x58\x5f\x02\x1d\x5e\xdf\xde\xd7\xb7\xf7\x5f\x7b\x7b\xe7\xb9\x7e\xca\xed\x38\x3d\x25\x0e\xe5\x91\xab\xfa\xcc\x30\xe7\xed\x6b\x2e\x4b\x9c\xe9\x8e\x1b\xf7\x14\x15\xf3\xe9\xf7\xd3\x23\x8a\xfe\x08\x00\x00\xff\xff\x05\x88\x5b\xb4\x0d\x0a\x00\x00")

func opsFilesIaasAzureCloudProviderYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasAzureCloudProviderYml,
		"ops-files/iaas/azure/cloud-provider.yml",
	)
}

func opsFilesIaasAzureCloudProviderYml() (*asset, error) {
	bytes, err := opsFilesIaasAzureCloudProviderYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/azure/cloud-provider.yml", size: 2573, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasAzureSubnetYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xcc\xcd\x09\xc3\x30\x0c\x06\xd0\xbb\xa7\xf8\x16\x30\xbe\x1b\x3a\x4b\x11\x8a\xfa\x43\x1d\x59\x48\x4a\x4b\xb6\x2f\x99\xa0\x14\x72\x7f\xbc\x8a\xdc\x4d\x3a\x5c\x6c\x10\x4b\x01\x8c\xf2\xd1\xd1\x9e\x1a\x49\xca\x72\xbd\xfb\xdc\x2c\x9a\xd2\x2a\x97\x95\x22\xc5\x9b\x4a\x7e\xa6\xbf\xa2\x00\x6f\x1a\x9b\xf4\x02\x54\x1c\xa2\x83\x6f\xec\xe5\xbf\xf5\xb8\xce\x5f\xc9\x6c\xec\x95\x96\x65\x6a\xfc\xbc\xbf\x01\x00\x00\xff\xff\x39\x54\xa7\xe1\x07\x01\x00\x00")

func opsFilesIaasAzureSubnetYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasAzureSubnetYml,
		"ops-files/iaas/azure/subnet.yml",
	)
}

func opsFilesIaasAzureSubnetYml() (*asset, error) {
	bytes, err := opsFilesIaasAzureSubnetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/azure/subnet.yml", size: 263, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasAzureUseCifsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xc9\xc1\x0d\x02\x21\x10\x05\xd0\x3b\x55\xfc\x06\x08\xf7\x49\xac\xc5\xcc\x92\xaf\x22\x08\x64\x06\x34\x76\x6f\xdc\xeb\x7b\x11\xeb\x3b\x29\x30\xce\xa6\x99\x01\x98\xba\x1e\x82\x54\xba\x2f\xed\x99\xd7\xbb\x8d\x3d\x3d\x75\x7d\xf1\xf2\x19\x56\x69\xe9\x39\x0e\x4f\x31\x00\x6f\x6d\x9b\x12\x00\xe0\xff\x82\x5c\x6e\x1e\xf7\x2a\xcd\x4f\x34\x36\xaa\x53\x50\xf7\x31\xc2\x2f\x00\x00\xff\xff\xdc\xe8\x05\x3a\x6c\x00\x00\x00")

func opsFilesIaasAzureUseCifsYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasAzureUseCifsYml,
		"ops-files/iaas/azure/use-cifs.yml",
	)
}

func opsFilesIaasAzureUseCifsYml() (*asset, error) {
	bytes, err := opsFilesIaasAzureUseCifsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/azure/use-cifs.yml", size: 108, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasAzureUseCredentialsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\xd1\xbd\x4a\x43\x41\x10\xc5\xf1\xfe\x3e\xc5\x96\x49\x11\xb6\xbf\x20\x16\x62\x91\xc2\xca\x07\x08\xe3\xee\xc9\x75\x74\x33\xb3\xcc\xcc\x8d\xe6\xed\x85\x28\xd8\x58\xf8\x81\x97\xb4\xe7\x34\x3f\xf8\x6f\x52\x9c\x3a\xc6\x64\xe8\x8d\x0a\x86\x94\x3a\xc5\xe3\x98\x32\x8b\x07\x49\xc1\x6e\x32\x9d\xbb\x67\xa1\x03\xae\x0e\xe4\x01\xcb\x4f\xfa\xf0\x31\x94\xa6\x73\xdd\x74\xd3\x23\x57\x58\xee\xa6\x1d\x16\x0c\xcf\xef\x4f\x51\xd9\xf3\x94\x67\xc7\x1d\x09\x4d\xa8\xdb\x0a\x09\x8e\xd3\xed\x6b\x40\x9c\x55\x86\x94\x8e\xd4\x66\x8c\x69\x4f\xcd\x31\x0c\xcb\x88\x88\xea\x4d\x63\x48\x6c\xeb\xf5\x27\x61\xb5\x2a\xe7\x71\xc7\x75\xbd\x5e\x9c\x72\x8f\x62\x88\xaf\x38\x7e\x7e\x7e\x4e\x7a\x51\x7b\xbe\xac\x5e\xbf\x15\xfd\x43\xaf\x3f\x53\xbe\xd1\xeb\x2d\x00\x00\xff\xff\x4d\xf1\x81\x03\x5f\x03\x00\x00")

func opsFilesIaasAzureUseCredentialsYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasAzureUseCredentialsYml,
		"ops-files/iaas/azure/use-credentials.yml",
	)
}

func opsFilesIaasAzureUseCredentialsYml() (*asset, error) {
	bytes, err := opsFilesIaasAzureUseCredentialsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/azure/use-credentials.yml", size: 863, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasGcpAddServiceKeyMasterYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xce\x31\x8e\x83\x30\x10\x85\xe1\xde\xa7\x98\x0e\x28\xd0\xf4\x48\x2b\x97\x7b\x0c\x64\xcc\x5b\xd6\xc1\x78\xac\xb1\x8d\xc4\xed\x53\x24\x05\x4a\x9f\xf6\x7f\xc5\xfb\x46\xaa\x57\xc6\x44\x8a\x1c\x9d\x87\x21\xca\xae\xfe\x4f\xc4\x21\x95\xea\x92\xc7\xbc\xa9\xb4\x5c\x38\xb9\x03\x3f\x87\x2b\x15\xca\x0f\x59\xde\xc1\x47\x69\xeb\x98\x55\xce\xb0\x42\x39\xab\x64\x68\x0d\x28\xfc\xb1\x6c\x1e\x96\x0b\xf4\x0c\x1e\xf3\x8e\xcb\x1a\xa2\xd3\xc5\x86\x89\xfa\xfe\xd6\xe7\xd7\xc5\x30\x18\xf3\x65\x9a\x97\xf4\x17\x36\xcb\xbf\x51\x16\x17\x2d\x57\xd9\x91\xc6\xa6\xf1\x46\xeb\x52\x88\x9d\x79\x06\x00\x00\xff\xff\x04\x88\x5e\x5c\x24\x01\x00\x00")

func opsFilesIaasGcpAddServiceKeyMasterYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasGcpAddServiceKeyMasterYml,
		"ops-files/iaas/gcp/add-service-key-master.yml",
	)
}

func opsFilesIaasGcpAddServiceKeyMasterYml() (*asset, error) {
	bytes, err := opsFilesIaasGcpAddServiceKeyMasterYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/gcp/add-service-key-master.yml", size: 292, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasGcpAddServiceKeyWorkerYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xce\x31\x8e\x83\x30\x10\x85\xe1\xde\xa7\x98\x0e\x28\xd0\xf4\x48\x2b\x97\x7b\x0c\x64\xcc\x5b\xd6\xc1\xf1\x58\x63\x9b\x88\xdb\xa7\x48\x0a\x94\x3e\xed\xff\x8a\xf7\x8d\x54\xcf\x8c\x89\x14\x39\x3a\x0f\x43\x94\x5d\xfd\x9f\x88\x43\x2a\xd5\x25\x8f\x79\x53\x69\xb9\x70\x72\x77\xfc\x3c\x44\x77\x28\xdf\x64\x79\x07\x1f\xa5\xad\x63\x56\x39\xc2\x0a\xe5\xac\x92\xa1\x35\xa0\xf0\xc7\xb2\x79\x58\x2e\xd0\x23\x78\xcc\x3b\x4e\x6b\x88\x0e\x17\x1b\x26\xea\xfb\x4b\x9f\x5f\x17\xc3\x60\xcc\x97\x69\x5e\xd2\x5f\xd8\x2c\xff\x46\x59\x5c\xb4\x5c\x65\x47\x1a\x9b\xc6\x0b\xad\x4b\x21\x76\xe6\x19\x00\x00\xff\xff\x01\x75\x31\xa5\x24\x01\x00\x00")

func opsFilesIaasGcpAddServiceKeyWorkerYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasGcpAddServiceKeyWorkerYml,
		"ops-files/iaas/gcp/add-service-key-worker.yml",
	)
}

func opsFilesIaasGcpAddServiceKeyWorkerYml() (*asset, error) {
	bytes, err := opsFilesIaasGcpAddServiceKeyWorkerYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/gcp/add-service-key-worker.yml", size: 292, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasGcpAddSubnetworkForInternalLoadBalancerYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x8e\xb1\xaa\xc3\x30\x0c\x00\x77\x7f\x85\xc6\x64\x08\xda\x03\x8f\x8c\xef\x33\x8a\xe2\xa8\xa9\x5b\xc7\x12\xb2\x9c\xd2\xbf\x2f\xa1\x85\xce\x5d\xba\xde\x71\x70\x03\xf8\x43\x79\x04\x63\xcd\x14\x39\x00\x28\xf9\x65\x04\x4c\xa5\x3a\x95\xc8\xa7\xd5\xa4\x69\xc5\x42\x1b\xff\x6d\x54\x9d\x0d\xaf\x32\xbf\x41\xcc\xd2\x96\x41\x4d\xf6\xb4\xb0\xa1\x9a\x28\x9b\x27\xae\xf8\x32\x51\xca\x39\xad\x13\xfe\x67\x99\x29\x4f\x58\xdb\x5c\xd8\xef\x62\xb7\xe1\xe8\xa7\x00\xb0\x53\x6e\x3c\x42\xd7\x7d\x5c\xdf\x87\xf0\xdd\xd8\x51\xfd\x66\xec\x19\x00\x00\xff\xff\xb1\xfc\x6e\x70\x31\x01\x00\x00")

func opsFilesIaasGcpAddSubnetworkForInternalLoadBalancerYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasGcpAddSubnetworkForInternalLoadBalancerYml,
		"ops-files/iaas/gcp/add-subnetwork-for-internal-load-balancer.yml",
	)
}

func opsFilesIaasGcpAddSubnetworkForInternalLoadBalancerYml() (*asset, error) {
	bytes, err := opsFilesIaasGcpAddSubnetworkForInternalLoadBalancerYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/gcp/add-subnetwork-for-internal-load-balancer.yml", size: 305, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasGcpCloudConfigLoadBalancerTargetPoolsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcb\x31\x0a\xc3\x30\x0c\x05\xd0\xdd\xa7\xd0\x98\x0c\xc5\xbb\xa1\xf4\x28\x42\x75\x3e\x6d\xa8\x1d\x0b\x49\x31\xf4\xf6\xa5\x64\x7e\xbc\x1b\xc5\x57\x51\xc8\xa0\x4d\x2a\x12\x91\x4a\xbc\x0b\xe5\xd9\xf9\x2f\x9e\x0f\xe9\xb8\x77\xf1\x80\xe5\xda\xc6\xb9\xb1\xda\x50\x58\xec\xf0\xfc\x94\xfa\xc1\xb1\xb1\xc3\xe6\x5e\xf1\x48\x44\x53\xda\x89\x42\xcb\x72\x1d\x0e\xb1\x17\x82\x75\x8c\xb6\xae\xe9\x17\x00\x00\xff\xff\x35\x2b\xa6\x9d\x70\x00\x00\x00")

func opsFilesIaasGcpCloudConfigLoadBalancerTargetPoolsYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasGcpCloudConfigLoadBalancerTargetPoolsYml,
		"ops-files/iaas/gcp/cloud-config/load-balancer-target-pools.yml",
	)
}

func opsFilesIaasGcpCloudConfigLoadBalancerTargetPoolsYml() (*asset, error) {
	bytes, err := opsFilesIaasGcpCloudConfigLoadBalancerTargetPoolsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/gcp/cloud-config/load-balancer-target-pools.yml", size: 112, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasGcpCloudConfigRemoveServiceAccountMasterYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xc9\xc1\x09\x43\x31\x08\x06\xe0\x7b\xa7\x70\x81\xe2\xfd\x41\x67\x09\x62\x7f\x68\xa0\x46\x51\x13\xe8\xf6\xe5\x9d\xbf\x27\xf5\x2f\x70\x51\xc2\xfc\xe0\x41\x14\xd2\x9f\x8b\xf8\xd8\xb8\xa1\x78\x89\xe1\x65\x52\x8d\x64\xfd\xfa\x7e\x8f\x48\x0f\x64\x4f\x14\x17\xf2\x4c\xc5\x10\x55\xdf\xab\xff\x01\x00\x00\xff\xff\xa6\xa2\xab\x08\x4d\x00\x00\x00")

func opsFilesIaasGcpCloudConfigRemoveServiceAccountMasterYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasGcpCloudConfigRemoveServiceAccountMasterYml,
		"ops-files/iaas/gcp/cloud-config/remove-service-account-master.yml",
	)
}

func opsFilesIaasGcpCloudConfigRemoveServiceAccountMasterYml() (*asset, error) {
	bytes, err := opsFilesIaasGcpCloudConfigRemoveServiceAccountMasterYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/gcp/cloud-config/remove-service-account-master.yml", size: 77, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasGcpCloudConfigRemoveServiceAccountWorkerYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xc9\xc1\x09\x85\x30\x0c\x06\xe0\xfb\x9b\x22\x0b\x3c\x72\x2f\x38\x4b\x29\xf1\x07\x8b\xb6\x09\x69\x5a\x71\x7b\xf1\xfc\xfd\x29\x1e\x43\x22\x47\xd3\x85\x1f\x91\x95\x38\x12\xf1\x6a\xf9\x83\xc1\xbd\x34\x6c\xb7\xfa\x09\x67\xb9\x74\xee\xd9\x5c\x0d\x1e\x15\x83\x07\x7c\x55\x41\x2e\x22\x3a\x7b\xbc\x01\x00\x00\xff\xff\x35\x50\xc4\xde\x4d\x00\x00\x00")

func opsFilesIaasGcpCloudConfigRemoveServiceAccountWorkerYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasGcpCloudConfigRemoveServiceAccountWorkerYml,
		"ops-files/iaas/gcp/cloud-config/remove-service-account-worker.yml",
	)
}

func opsFilesIaasGcpCloudConfigRemoveServiceAccountWorkerYml() (*asset, error) {
	bytes, err := opsFilesIaasGcpCloudConfigRemoveServiceAccountWorkerYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/gcp/cloud-config/remove-service-account-worker.yml", size: 77, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasGcpCloudProviderYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x53\x4d\x8f\xd4\x30\x0c\xbd\xf7\x57\xf8\xd8\x39\x44\xbd\x47\x42\x1c\xf9\x19\xa3\x34\x79\x5b\xb2\x93\xc6\x91\x93\x0c\x14\xc4\x7f\x47\xfd\x18\xba\x05\x21\x2d\x68\x46\x70\xd8\xde\x6c\x3f\xf7\x3d\xe7\xd9\x8a\xca\x94\xa0\x49\x90\x82\xb1\x68\x88\x92\x29\x1f\x35\x75\x3e\xe6\x62\xa2\xc5\x79\x10\xae\x29\x77\xd1\x8c\x78\x37\x9a\x5c\x20\xdd\x33\xf7\xb9\x53\x0d\xd1\xd5\x84\x0a\xdd\x10\x11\xcd\x75\x4d\x36\x70\x75\x2a\x09\x5f\xbd\x83\x2c\x05\x41\x80\xc9\xd0\x74\xa9\x3d\x2f\x99\x24\x9c\x20\xc5\x23\xaf\xad\xf4\x53\xdb\x2d\x4b\x9b\xb6\x61\xd1\xb5\xe3\x2c\xc7\x27\x3f\xec\xa8\x0f\x81\x7b\x13\xf6\x78\x61\x78\x86\x2d\xca\x3b\x4d\x6d\xbb\x45\x67\xef\x4e\xa7\x17\xa0\x88\xf2\x89\xe5\xa2\x56\xe5\x6d\xbb\xc5\x47\x0c\x3b\xa8\x62\x86\x3c\x03\x9c\x17\xd8\xc2\x72\x9e\x3b\x4e\x27\xd5\xb6\x0e\x29\xf0\x34\x22\x96\x5b\x6e\xfe\xc3\x36\xf8\xfa\x8d\x35\x14\xff\x85\x23\x34\x15\xa9\xb8\x3d\xc0\x3c\xe8\xef\xc6\xa7\xaf\x26\x6b\x5a\xdf\x5a\x1d\x6b\xdf\x9a\xe6\xef\x1d\x5b\x12\x97\xda\x43\x99\xe4\x33\xe4\x0a\xe9\x2c\xc7\x5c\x47\xe4\xf7\x47\x37\x7f\x51\xf4\x24\x3c\x3e\x56\x93\xe5\x58\x84\x43\x80\xa8\xd1\x44\x33\xfc\x4f\xe2\x24\xa2\x20\x2b\xe1\x80\xfc\x4f\x54\xad\x6b\xf5\x76\x78\xaf\x3a\xbc\x57\x9d\xd7\x8a\xbf\xa7\x2f\x3f\xb6\x25\xa0\xfc\xe1\x92\x3c\x58\xcc\xee\x7b\x77\xa4\xd8\xd5\x2d\x5e\xdf\x83\x6f\xfe\xf7\xe7\xe9\x51\x94\x26\xa5\x30\x29\xe3\x1c\xc7\xfc\x82\x78\x4d\xe7\x04\x7b\xa7\xf3\xfc\x1e\x00\x00\xff\xff\x00\x41\xf8\xff\x17\x07\x00\x00")

func opsFilesIaasGcpCloudProviderYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasGcpCloudProviderYml,
		"ops-files/iaas/gcp/cloud-provider.yml",
	)
}

func opsFilesIaasGcpCloudProviderYml() (*asset, error) {
	bytes, err := opsFilesIaasGcpCloudProviderYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/gcp/cloud-provider.yml", size: 1815, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasOpenstackCloudProviderYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x54\xc1\xae\x9b\x30\x10\xbc\xf3\x15\x7b\xe4\x1d\x2c\xee\x48\x55\x8f\xfd\x0c\xb4\x98\x7d\x3c\x07\xe3\xb5\x76\xed\xa4\x51\xd5\x7f\xaf\x08\x49\x88\x13\xf5\xd0\x2a\x51\x5b\xa9\x37\x33\x33\xf6\x8c\xec\x59\x0c\xa4\x63\xa4\x16\x84\xa2\x47\x4b\x15\x40\xc4\xf4\xd1\x42\xe3\x82\x26\x0c\x96\xba\x51\x38\x47\x6d\x02\xce\xf4\x69\x46\x4d\x24\xcd\x8e\x7b\x6d\x4c\x05\xb0\x47\x9f\xa9\xad\x00\x00\x16\xbe\x05\xeb\x39\x0f\x26\x0a\xef\xdd\x40\x72\x22\x84\x3c\xa1\x52\x0b\x53\xee\xf9\x84\x44\xe1\x48\x92\x1c\xe9\xba\x15\xee\xb6\x5d\x50\x38\x67\xe3\x48\x4b\x18\x3b\x15\x6a\xcb\xe1\xdd\x8d\x9b\xf6\x8b\xe7\x1e\xfd\xf6\x0d\x80\x39\x7d\x98\x2c\xbe\x85\xba\x5e\xd6\x5d\x16\xff\xf6\x76\x23\x18\x78\x46\x17\xcc\x1a\xbd\xae\xaf\x3e\xdd\x4a\x14\xda\x88\xaa\x07\x96\xa1\x14\x5e\xd0\x42\x2a\x34\x3a\x0e\x8b\x70\x5d\x15\x64\xa2\x80\x21\x19\x77\x7f\x90\xf0\x8e\x6c\xea\x5c\x79\x54\x56\x92\xc7\x78\x17\xf4\x2c\x3d\xdf\xdb\xcf\x6e\x13\xbe\xa1\xb6\xb0\x3e\x9d\x29\xb9\xef\x55\xf5\xfb\x05\x38\x01\x53\xee\xc9\x60\x74\x4a\xb2\x27\x69\x2c\x07\xcd\x33\xe9\xe7\xb2\x1c\x0f\x89\xde\x85\xe7\xd7\x66\xb2\x1c\x92\xb0\xf7\x24\x66\xc6\x80\xe3\xdf\x14\x4e\x02\x25\x52\x23\xec\x49\xff\x48\xaa\x03\xcb\xf4\x7f\x8e\xff\xc9\x39\x5e\x9f\xee\x99\x05\xb8\xd6\xd2\x53\xfa\xc5\x36\xbe\x38\xcc\x56\xb0\xa6\xb4\xd8\xd2\xdd\x94\xea\x19\xae\x8b\xc3\xd7\xe3\x6b\x8d\x31\x46\x7f\x34\x38\x0c\x1c\xf4\xc6\x7e\x85\x35\x92\x7d\xd2\x3f\xe1\x47\x00\x00\x00\xff\xff\x64\x40\xb9\xf2\xdb\x07\x00\x00")

func opsFilesIaasOpenstackCloudProviderYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasOpenstackCloudProviderYml,
		"ops-files/iaas/openstack/cloud-provider.yml",
	)
}

func opsFilesIaasOpenstackCloudProviderYml() (*asset, error) {
	bytes, err := opsFilesIaasOpenstackCloudProviderYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/openstack/cloud-provider.yml", size: 2011, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasOpenstackMasterStaticIpYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x6b\x02\x31\x10\x85\xef\xf9\x15\x73\x54\xe8\x92\x9e\x03\xa5\x3f\x44\x24\x8c\xeb\xab\x06\xb3\x93\x90\x99\x8d\xf8\xef\x8b\xda\xd6\x5e\xf4\xb2\xc7\x07\x8f\xf7\x7d\x33\x03\xd9\xa5\x22\x50\x43\xcd\x3c\xc2\x11\x55\xb6\x63\x20\x9f\x44\x8d\x65\x44\x3c\xb4\x32\x57\xf5\xc2\x13\x3e\x26\x56\x43\xf3\x02\x3b\x97\x76\x52\x3f\x38\xa2\xce\x79\x46\x70\x44\x44\xd7\x4e\xa0\x9e\xea\x2d\xdd\x87\x7f\x93\x1a\x5b\x1a\x63\xaa\x1a\x68\xb3\x5a\x9d\xe6\x1d\x9a\xc0\xa0\xf1\x3e\x1a\x8f\x45\x6d\xbd\xde\xba\x65\x46\xef\x7e\x8f\x2f\x9e\xb3\x7d\xfe\xa9\xd1\x66\x2f\xfa\x46\x07\x36\x9c\xf9\xb2\x75\xcf\x09\x9d\x5b\xe2\x5d\xc6\xcf\xb6\x65\x1d\x1e\x9e\xbe\x54\x4b\x45\xd4\x8f\x65\x9a\x8a\xc4\x6b\xe5\xc1\x78\x7e\xd1\x52\x1c\x67\x43\x13\xb6\xd4\x71\x63\xfe\xff\xfa\x2b\xec\x77\x00\x00\x00\xff\xff\xe5\xb2\x16\x86\xda\x01\x00\x00")

func opsFilesIaasOpenstackMasterStaticIpYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasOpenstackMasterStaticIpYml,
		"ops-files/iaas/openstack/master-static-ip.yml",
	)
}

func opsFilesIaasOpenstackMasterStaticIpYml() (*asset, error) {
	bytes, err := opsFilesIaasOpenstackMasterStaticIpYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/openstack/master-static-ip.yml", size: 474, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasVirtualboxBoshLiteYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x0a\x5d\x76\x74\x9c\x6e\x39\x05\xc6\x1e\x64\x0c\xa3\x26\x6a\x6b\xea\x28\xc2\x92\xb3\xf5\xed\x87\x61\xb4\x3b\x0d\x56\x7a\xff\xf5\x7d\xfa\xf9\x3d\xd8\x45\x68\x84\x42\x92\x71\x22\x07\x20\x68\xa7\x11\x42\x62\x35\xe4\x89\xe2\xb1\xac\x55\x34\x30\x2e\xf4\x8a\x22\xf9\xe2\x71\x9e\x57\xd6\xb0\x2d\xb1\xdd\x3a\x80\x0d\x73\xa5\x11\x66\x3a\x60\xcd\xe6\xdc\xff\xa0\x0b\xaa\x51\x79\x18\xee\x73\x2d\xe7\xc7\xe3\xaa\xcc\x68\xf4\x16\x16\xfc\x8a\x89\xe3\x21\xa7\xe3\xc9\x6e\xf0\x5d\xdf\x3f\xdd\xd9\x9b\xc9\x9a\x43\xaf\x30\x07\xe0\xa1\x25\x6e\x3f\x03\x00\xa8\xa1\xa5\x29\x26\xd1\x11\xde\x77\x7d\xf7\x3c\x0c\x5d\xdf\xbd\x0c\x1f\x7f\x78\x37\x2c\x09\xf7\x99\x7e\x8c\x96\xd5\x9f\xeb\x9e\x0a\x93\x91\x86\x55\x2c\xb5\x21\x31\x1b\x15\x46\x4b\x1b\xc5\x96\xd3\xe0\x7f\x37\xbb\x9a\xdc\x77\x00\x00\x00\xff\xff\xca\x97\xd4\xfe\x2d\x02\x00\x00")

func opsFilesIaasVirtualboxBoshLiteYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasVirtualboxBoshLiteYml,
		"ops-files/iaas/virtualbox/bosh-lite.yml",
	)
}

func opsFilesIaasVirtualboxBoshLiteYml() (*asset, error) {
	bytes, err := opsFilesIaasVirtualboxBoshLiteYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/virtualbox/bosh-lite.yml", size: 557, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasVsphereCloudProviderYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\xcd\x6e\xdb\x30\x0c\xc7\xef\x7e\x0a\x1e\x93\x83\xa0\xbb\x81\x61\x97\x01\x7b\x8c\x80\x91\xd8\x54\x8b\x2c\x0a\xa4\xe4\x2e\x18\xf6\xee\x83\xa3\x66\xb6\x5a\x0c\xd8\x57\xd0\xde\xec\x3f\xff\x12\x7f\xe6\x87\x0d\x94\x4b\xa6\x11\x84\x72\x44\x47\x03\x40\xc6\xf2\x38\x82\x0d\x49\x0b\x26\x47\x87\x93\x70\xcd\x6a\x13\x4e\xf4\x61\x42\x2d\x24\xf6\x0b\x1f\xd5\x9a\x01\x60\xc6\x58\x69\x1c\x00\x00\x96\xf8\x08\x2e\x72\xf5\x26\x0b\xcf\xc1\x93\x5c\x03\x42\x91\x50\x69\x84\x73\x3d\xf2\x55\xc9\xc2\x99\xa4\x04\xd2\x76\x14\x5e\x1c\xbb\xa9\xf0\xcc\x36\x6b\x7e\x24\xa1\xce\xeb\x38\x3d\x84\xd3\xea\xfc\x1c\xf9\x88\x71\x7d\x07\xf0\x58\xd0\x51\x2a\x24\x23\xec\x76\x73\x7b\x3c\x78\xb7\xdf\xbf\x30\x69\x61\xa1\xce\xa3\x9d\x27\xa3\xea\x13\x8b\xdf\x5a\x5a\x21\x0e\xb7\x50\xe7\x57\x92\xb9\x4f\x1a\x72\x67\xa8\xda\x87\x9f\x2f\x5b\xe4\xce\xf7\xc4\x72\x0e\xe9\x64\x7c\x90\x11\x6c\xff\x0d\x76\x9e\x36\xca\x3c\xe9\x7e\x6f\x77\x3b\x1f\x84\x5c\x61\x39\xd4\x1a\xb6\x50\x9f\x82\x9e\xb7\xb5\x51\xa7\xc1\x71\x2a\xc2\x31\x92\xb4\x2a\xe7\x79\x51\x6f\x0d\x5a\x1a\xf1\xab\xf6\xc0\x37\xd4\x11\x1a\xb5\xe9\x63\xdf\x87\xe1\xef\x27\xea\x2a\x9c\xeb\x91\x0c\xe6\xd0\xaa\x68\x1d\x27\xad\x13\xe9\xc7\x7e\xda\x5e\x11\x3d\x08\x4f\xf7\x65\x5a\xeb\x65\x26\x4c\x78\x7a\x4f\x70\x92\xa8\x90\x1a\xe1\x48\xfa\x26\x54\xcb\xa8\xbe\xa2\x8a\x54\xec\xba\xeb\xb6\x4f\xb1\xd2\xfd\xdc\xef\x7f\xc8\xf9\x36\x3f\xa3\xdf\xda\x93\x86\x79\xb7\x02\xff\x59\xb7\xef\x08\xb3\x5c\xf7\xf5\x72\xcf\x86\x63\xce\xf1\x62\xd0\x7b\x4e\xba\x49\xde\x64\xcd\xe4\xfe\xd3\xec\xff\x08\x00\x00\xff\xff\xb7\xce\xcc\x22\x14\x07\x00\x00")

func opsFilesIaasVsphereCloudProviderYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasVsphereCloudProviderYml,
		"ops-files/iaas/vsphere/cloud-provider.yml",
	)
}

func opsFilesIaasVsphereCloudProviderYml() (*asset, error) {
	bytes, err := opsFilesIaasVsphereCloudProviderYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/vsphere/cloud-provider.yml", size: 1812, mode: os.FileMode(420), modTime: time.Unix(1553318029, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasVsphereMasterStaticIpYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8d\x41\x0a\x83\x30\x14\x05\xf7\x39\xc5\x5b\x2a\x54\xdc\x07\x7a\x12\x91\xf0\xab\xaf\x2a\x6a\x0c\xf9\x3f\x15\x6f\x5f\xda\xd2\xdd\xc0\x0c\x4c\x03\xbb\x12\x3d\x32\xd3\x26\x03\x1d\x90\xc4\x66\x8f\x76\x89\x6a\x12\x07\x86\x29\x1f\x25\x69\x1b\x65\xe7\x7d\x17\x35\xe6\x36\xd2\xce\x23\xaf\xea\x80\x97\x6c\x85\xde\x01\x0d\x3e\x85\xc7\xc8\xa7\x94\xcd\x1c\x80\x3f\x7b\x74\x63\xd4\x1b\x26\x31\x9e\x72\xf5\x5f\xa7\x26\xb6\x0c\x61\x49\xea\xd1\xa1\xaa\xd6\xf2\x60\x8e\x34\x6a\xf8\x5d\xc2\x7c\xa8\xd5\x35\x7a\xf7\x0e\x00\x00\xff\xff\xd2\x61\xb1\x79\xa4\x00\x00\x00")

func opsFilesIaasVsphereMasterStaticIpYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasVsphereMasterStaticIpYml,
		"ops-files/iaas/vsphere/master-static-ip.yml",
	)
}

func opsFilesIaasVsphereMasterStaticIpYml() (*asset, error) {
	bytes, err := opsFilesIaasVsphereMasterStaticIpYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/vsphere/master-static-ip.yml", size: 164, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasVsphereSetWorkingDirNoRpYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xc9\x3b\x0e\xc2\x30\x0c\x00\xd0\xbd\xa7\xf0\xd8\x0c\x95\xf7\x4a\xa8\x23\xc7\xa8\xdc\xc4\x94\x40\x12\x5b\xce\x07\x71\x7b\x06\x18\x58\xdf\x5b\xa0\xbd\x95\x57\x30\xd6\x44\x9e\x27\x00\xa5\x76\x5f\x01\x63\xa9\x8d\x8a\xe7\xfd\x34\xe9\x5a\xb1\x50\xe6\x4b\xa6\xda\xd8\xf0\x21\xc7\x0f\x7c\x92\x1e\x16\x35\x19\x31\xb0\xa1\x9a\x28\x5b\x8b\x5c\xf1\x3b\x5e\xca\x2d\x9e\x1b\x5e\x93\x1c\x94\x36\x7c\x89\x3d\x63\x39\x97\x10\x6d\x9b\x00\x06\xa5\xce\x2b\xe0\x3c\x0f\xcf\xa5\xb1\xed\xc1\x3b\x87\x23\xff\xc9\xc8\xd5\xb9\xe9\x13\x00\x00\xff\xff\xe0\xcd\x6a\x4c\xa8\x00\x00\x00")

func opsFilesIaasVsphereSetWorkingDirNoRpYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasVsphereSetWorkingDirNoRpYml,
		"ops-files/iaas/vsphere/set-working-dir-no-rp.yml",
	)
}

func opsFilesIaasVsphereSetWorkingDirNoRpYml() (*asset, error) {
	bytes, err := opsFilesIaasVsphereSetWorkingDirNoRpYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/vsphere/set-working-dir-no-rp.yml", size: 168, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesIaasVsphereUseVmExtensionsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x31\x0e\xc2\x30\x0c\x05\xd0\xdd\xa7\xf0\x05\xac\xec\x91\x10\x0b\x0b\x07\xe8\x5c\x99\xf2\x05\x51\x53\x27\x8a\xdd\x00\xb7\xe7\x89\x08\x09\xc7\xaf\x23\xf3\x40\xaf\xba\x81\x98\xbb\xc6\x3b\x73\x2a\xe6\xa1\xb6\x61\x7d\x8d\x76\x76\x4f\xa6\x07\x2e\x9f\x36\x76\x8c\x34\x8f\x15\xdf\x80\x79\x69\xe6\xd7\x24\xc4\x3c\xb5\x9e\xc8\x0c\xd3\x47\x85\x3c\x8b\xef\xb2\x2c\xf7\x1b\xd1\x3f\x00\x00\xff\xff\x42\xde\xb2\x53\x65\x00\x00\x00")

func opsFilesIaasVsphereUseVmExtensionsYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesIaasVsphereUseVmExtensionsYml,
		"ops-files/iaas/vsphere/use-vm-extensions.yml",
	)
}

func opsFilesIaasVsphereUseVmExtensionsYml() (*asset, error) {
	bytes, err := opsFilesIaasVsphereUseVmExtensionsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/iaas/vsphere/use-vm-extensions.yml", size: 101, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesKuboLocalReleaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcc\xcd\x09\xc3\x40\x0c\x44\xe1\xbb\xaa\x98\x06\x6c\xdd\x05\x29\x46\x31\x13\x62\xa2\xd8\x8b\xf6\x07\xd2\x7d\x58\xd8\xeb\xe3\xf1\x6d\x68\xbf\x42\x43\xb2\x84\x1f\x14\xa0\x78\x7b\x1b\x34\x19\xf4\xca\xaa\x97\x7f\xf9\xf8\xf4\xe7\x2d\xc0\xf0\xe8\x34\x01\x30\xab\x61\x65\x0c\x66\x3d\xef\xcb\x70\x24\xbd\x4d\x05\x3d\xc3\xf0\x3a\x83\xa6\xba\xef\x3a\xcf\x6d\x99\xf2\x0f\x00\x00\xff\xff\x78\x8a\x7c\x4e\x75\x00\x00\x00")

func opsFilesKuboLocalReleaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesKuboLocalReleaseYml,
		"ops-files/kubo-local-release.yml",
	)
}

func opsFilesKuboLocalReleaseYml() (*asset, error) {
	bytes, err := opsFilesKuboLocalReleaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/kubo-local-release.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesMiscBootstrapYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xc1\x4a\xc0\x30\x10\x44\xef\xfd\x8a\x1c\xdb\x43\xc9\xbd\xe0\xb7\x84\x6d\x5c\x6c\x68\xb2\x1b\xb2\x9b\x48\xff\x5e\xda\x28\x15\x51\x51\xf1\x98\x9d\xcc\x1b\x66\x66\xa3\x47\xc6\xc5\x14\xcc\x11\x3c\x0e\xc6\x64\xd0\x6d\x31\x96\x20\x9d\xaf\x06\xb1\xe2\x62\xc6\xf1\x11\x73\xe4\x23\x21\xa9\x3b\xa5\x69\x1a\x86\x2f\xbd\x81\x44\x81\x3c\xba\xa7\xc2\x35\xcb\xc5\x7a\x48\x20\x8a\xc5\xb6\xe4\x4e\xd7\x8d\xee\xf7\xdf\xd2\x9e\xb9\xec\x9f\xd1\xfa\xfd\x8f\xb4\x37\x4d\xde\x17\xef\x9a\xf3\x5c\x49\xbf\x6d\xdd\xa0\x04\x58\x23\xbe\x32\x35\xca\xbc\xd7\x15\x0b\xa1\xa2\x58\xce\x1a\x98\xc4\x7a\x4e\x89\xc9\x7d\x9c\xf7\xfe\xe9\xfa\x20\x6e\x63\xf9\x8f\x3c\x88\x8a\x85\x40\x43\xc3\x2b\x54\xec\xfc\xa3\xdc\x97\x00\x00\x00\xff\xff\x23\xcb\x8f\xda\x19\x02\x00\x00")

func opsFilesMiscBootstrapYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesMiscBootstrapYml,
		"ops-files/misc/bootstrap.yml",
	)
}

func opsFilesMiscBootstrapYml() (*asset, error) {
	bytes, err := opsFilesMiscBootstrapYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/misc/bootstrap.yml", size: 537, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesMiscDevYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\x41\x0a\x84\x30\x0c\x05\xd0\x7d\x4e\xf1\x2f\x30\x74\x1f\x98\xc3\x64\x86\x0f\x8a\xb1\x2d\x4d\x5a\xf0\xf6\x22\xb8\x7d\x1f\xe4\xd5\xa9\x18\xec\x6e\x7f\x0a\xd0\x2d\x37\x45\x19\x74\x5a\x30\x4a\xb5\x93\xdf\x63\xfe\x9a\x00\xcb\x7c\x52\x05\x00\x1e\x56\xbc\x0e\x2c\x8e\xd8\x5b\x55\xb8\x25\x23\xe5\x0e\x00\x00\xff\xff\x90\x26\x6b\x7a\x58\x00\x00\x00")

func opsFilesMiscDevYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesMiscDevYml,
		"ops-files/misc/dev.yml",
	)
}

func opsFilesMiscDevYml() (*asset, error) {
	bytes, err := opsFilesMiscDevYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/misc/dev.yml", size: 88, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesMiscFirstTimeDeployYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x55\x28\xa9\x2c\x48\xb5\x52\x28\x4a\x2d\xc8\x49\x4c\x4e\xe5\x52\x50\x28\x48\x2c\xc9\xb0\x52\xd0\x2f\x2d\x48\x49\x2c\x49\xd5\xcf\x4d\xac\x88\xcf\xcc\x8b\x4f\xcb\xc9\x4c\xcf\x28\xe1\x52\x50\x28\x4b\xcc\x29\x4d\xb5\x52\x30\x34\x30\x50\xe5\x02\x04\x00\x00\xff\xff\xd2\x4d\xe6\xfe\x3c\x00\x00\x00")

func opsFilesMiscFirstTimeDeployYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesMiscFirstTimeDeployYml,
		"ops-files/misc/first-time-deploy.yml",
	)
}

func opsFilesMiscFirstTimeDeployYml() (*asset, error) {
	bytes, err := opsFilesMiscFirstTimeDeployYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/misc/first-time-deploy.yml", size: 60, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesMiscLocalConfigServerYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xcc\x31\x0a\xc3\x30\x0c\x05\xd0\xdd\xa7\xf0\x05\x8c\xf7\x40\xcf\x52\x94\xf0\x71\x4d\x64\xc9\x48\x4a\x20\x3d\x7d\xe9\xd2\xbd\x90\xf1\x2d\xaf\xe4\xb8\x26\x96\x6c\x18\x7a\x22\xe5\x3c\x29\x5e\x4b\xae\x27\x59\xa7\x95\xe1\x55\x68\xe0\x11\xec\x65\x3f\x56\x30\xa2\xea\x8c\xae\xe2\x55\xad\x91\xf4\x37\x7d\x95\xfe\x7f\xca\xc6\x1d\x72\x4f\x67\x82\x80\xdf\x52\x95\x4d\x25\x4c\x99\x61\x65\x90\x50\x83\xfd\xde\x1d\xd7\xf3\x70\x6a\x48\x9f\x00\x00\x00\xff\xff\xb2\x24\xe8\x85\x37\x01\x00\x00")

func opsFilesMiscLocalConfigServerYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesMiscLocalConfigServerYml,
		"ops-files/misc/local-config-server.yml",
	)
}

func opsFilesMiscLocalConfigServerYml() (*asset, error) {
	bytes, err := opsFilesMiscLocalConfigServerYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/misc/local-config-server.yml", size: 311, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesMiscScaleToOneAzYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xcf\xb1\x4a\x03\x41\x10\xc6\xf1\x7e\x9f\xe2\x83\x34\x0a\x6e\x42\xda\x80\x45\xc0\xc2\x17\xb0\x51\x44\xe6\xee\xe6\xee\xd6\xec\xcd\x2c\xbb\x73\x27\x9b\xa7\xb7\xd0\x88\x42\x1a\xa3\xdd\xc0\x7c\xfc\xe0\xef\xbd\x77\x2b\xdc\x71\x4f\x73\x34\x1c\xe6\x46\x7d\xc7\x29\x6a\x9d\x58\x0c\x1f\x67\x01\xe1\x6a\xd2\x62\xb1\x5e\xe3\x7e\x8f\x56\xa5\x0f\xc3\x9c\xc9\x82\xca\xda\xad\xf0\x50\x18\x36\x86\x02\x5d\x38\xe7\xd0\x31\x4c\xa1\x12\xeb\x27\x80\x12\x64\x88\x8c\x20\xc5\x48\x5a\x86\xf6\x60\x6a\x47\xbc\x6a\x73\xe3\x56\x08\x02\x3a\x6d\xf6\x0b\x85\x48\x4d\x88\xc1\x2a\x1e\x55\x78\xed\x3c\xac\x26\xde\x21\x73\x8a\xd4\xb2\x03\x12\xd9\xb8\xc3\xe6\xe4\xbd\x0c\x59\xe7\x54\x36\x42\x13\xdf\x4e\x54\x8c\xf3\xd7\xaf\x38\x60\xa1\x38\xf3\x0e\xdb\x5f\x4a\x6f\x9a\x0f\xff\x23\x51\x4a\xb1\x7a\xea\x3a\x95\x72\xde\xbb\x2c\x92\x8e\xdf\x90\x27\x1c\xb7\x78\xbe\xac\xf1\xef\xd0\x8f\xc4\x33\xdc\x7b\x00\x00\x00\xff\xff\xd4\xcd\xfc\x8a\x69\x02\x00\x00")

func opsFilesMiscScaleToOneAzYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesMiscScaleToOneAzYml,
		"ops-files/misc/scale-to-one-az.yml",
	)
}

func opsFilesMiscScaleToOneAzYml() (*asset, error) {
	bytes, err := opsFilesMiscScaleToOneAzYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/misc/scale-to-one-az.yml", size: 617, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesMiscSingleMasterYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xc9\xc1\x09\x80\x30\x0c\x05\xd0\x7b\xa7\xf8\x0b\x48\xf1\x5a\x70\x16\x09\xe5\xa3\x42\x5b\x43\x92\x0a\x6e\xef\xcd\xf3\x5b\x10\xaf\xb2\xc0\xa8\x4d\x2a\x13\xa0\x12\x67\x41\xbe\x86\x87\x8c\xca\xfd\xb0\x7b\xaa\xe7\x21\x9d\x5b\x17\x0f\xda\x6f\x9e\x80\x47\xda\x64\xc1\x9a\xbe\x00\x00\x00\xff\xff\xcd\xf5\x7d\x00\x4a\x00\x00\x00")

func opsFilesMiscSingleMasterYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesMiscSingleMasterYml,
		"ops-files/misc/single-master.yml",
	)
}

func opsFilesMiscSingleMasterYml() (*asset, error) {
	bytes, err := opsFilesMiscSingleMasterYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/misc/single-master.yml", size: 74, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesMiscSmallVmYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xcc\xc1\x09\xc3\x30\x0c\x05\xd0\xbb\xa7\xf8\x0b\x04\xdf\x0d\x9d\x25\x7c\x12\xd1\x9a\x5a\xb2\xb0\x95\x94\x6c\x5f\xba\x40\xa1\xd0\x01\xde\x5b\x10\x97\x4b\xc1\x10\x6f\xdc\x24\x01\xce\x78\x14\xe4\x6a\x33\x68\x9b\xac\xf7\xd1\x0f\x9f\xd9\xa8\x72\xa3\x7b\xbb\x16\xee\x7b\xb7\x99\x4f\x5d\x3f\x36\x01\x27\xdb\x21\x05\x5a\xad\x2a\x5b\xfa\xed\x54\xce\x90\xf1\xaf\xed\xd5\xc7\xf3\xdb\xf6\x0e\x00\x00\xff\xff\xae\xc0\x7a\xae\xf0\x00\x00\x00")

func opsFilesMiscSmallVmYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesMiscSmallVmYml,
		"ops-files/misc/small-vm.yml",
	)
}

func opsFilesMiscSmallVmYml() (*asset, error) {
	bytes, err := opsFilesMiscSmallVmYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/misc/small-vm.yml", size: 240, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesNonPrecompiledReleasesYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd2\xdd\x6a\xa4\x40\x10\x05\xe0\xfb\x79\x8a\x7a\x01\xdb\xb6\xff\xec\x16\x96\x7d\x96\xaa\xee\xea\x38\xc4\xb1\xc5\x9f\x59\xb2\x4f\xbf\x44\x37\xc1\x30\x10\xc2\x5c\x7a\x28\x39\xe7\x13\x2b\x98\x70\xed\x3b\xa8\x67\x1e\x18\x17\x5e\x2e\x00\xeb\xdb\xc4\x1d\xcc\x3c\x0d\x18\xf9\x02\x70\xc7\x61\xe3\xee\x02\x50\xc1\x88\x37\xee\xe0\x75\xa3\x72\x01\x00\x58\x7a\x6c\x3a\xc0\x60\x5c\x13\x4d\x46\xc6\x8c\xa4\xac\x8e\x49\x91\x53\xb2\x35\xc1\x36\xc1\xbb\x46\xab\xac\x43\x8b\xfb\x2b\xdb\x3c\x74\xd0\xaf\xeb\xb4\x74\x75\xfd\x72\x5d\xfb\x8d\x44\x2c\xb7\x3a\x0e\x65\x4b\xb9\x6c\x63\x9a\xdf\xaa\xeb\x18\x37\xc2\xb5\xcc\xf5\x7b\x55\xf5\x7f\xdb\xe7\xc6\x3a\x95\x3f\xe3\x50\x30\xd5\x77\x29\x94\x15\xf2\xcb\x59\x75\x64\x62\x7d\xf9\xbb\x37\xde\x79\x5e\xae\x65\xec\xe0\xc8\x4f\x8e\x98\xe3\x5c\xf1\x1a\xd3\x09\xc3\x3e\xfa\x6c\xbc\x45\x4e\x52\x07\xf4\x91\xd9\x45\xf2\x24\x95\x77\xa1\x55\xc1\x70\x9b\x54\xa6\xf4\x0c\xe6\xb3\xef\x3b\x51\x23\xbc\x90\x8f\xa7\xd5\x9e\x3f\xa2\xf6\xf8\x64\x4a\x25\xbe\xf2\x7c\x02\x79\xaf\x1d\x27\x65\xac\x91\x0e\x89\xd1\x32\xa2\x24\x8d\x18\xc9\x3a\xcf\x68\x54\xc3\xd4\x92\x7e\x06\x74\x94\x55\x54\x96\xfe\x1b\x91\xd6\x42\x0a\xf9\x71\x7c\x3c\x3d\x42\x8e\xfc\x24\xa1\xe9\x76\x62\x18\x72\x4c\x39\x21\x1a\xd7\x46\x69\xbc\xb5\x56\xf9\xa6\x55\x24\x43\x60\xeb\x6c\x72\x6d\x60\x99\xed\x23\xe3\x7d\x9d\xb8\x96\x3a\xfd\x00\x44\xd3\xed\xe3\x83\xff\xbe\xff\x92\xa2\xd1\xfb\xa4\x2f\x3f\xd1\x9e\xfd\x0b\x00\x00\xff\xff\x10\x02\x12\x3f\x38\x03\x00\x00")

func opsFilesNonPrecompiledReleasesYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesNonPrecompiledReleasesYml,
		"ops-files/non-precompiled-releases.yml",
	)
}

func opsFilesNonPrecompiledReleasesYml() (*asset, error) {
	bytes, err := opsFilesNonPrecompiledReleasesYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/non-precompiled-releases.yml", size: 824, mode: os.FileMode(420), modTime: time.Unix(1553318029, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesRenameYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x55\x28\xa9\x2c\x48\xb5\x52\x28\x4a\x2d\xc8\x49\x4c\x4e\xe5\x52\x50\x28\x48\x2c\xc9\xb0\x52\xd0\xcf\x4b\xcc\x05\xf1\xca\x12\x73\x4a\x53\xad\x14\x34\x34\x52\x52\x0b\x72\xf2\x2b\x73\x53\xf3\x4a\xe2\x41\x52\x9a\x9a\x5c\x80\x00\x00\x00\xff\xff\xba\x18\xe5\x9e\x3b\x00\x00\x00")

func opsFilesRenameYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesRenameYml,
		"ops-files/rename.yml",
	)
}

func opsFilesRenameYml() (*asset, error) {
	bytes, err := opsFilesRenameYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/rename.yml", size: 59, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesSetCertificateDurationYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd4\xb1\x6a\xc4\x30\x10\x04\xd0\xde\x5f\xa1\xf2\xae\x58\x7c\xa9\x02\x86\x90\x4f\x09\x2b\x69\x2e\x16\x5e\x4b\x62\xb5\x32\xc9\xdf\x87\x14\x21\x90\x2a\x1c\x58\xdd\x16\x0b\x0f\x86\x61\xc8\xd9\x67\xc5\xe2\x14\x55\x38\x60\x72\xae\xb2\xad\x8b\x9b\x0f\xd6\xc4\x5e\xd0\xe6\xcc\x3b\x5e\xb6\xee\xcb\x5b\xe0\xb9\x54\x4b\x25\xb7\x39\x76\xe5\xef\xeb\x75\x72\xee\x60\xe9\x58\xdc\xe5\x12\xa0\x96\xee\x29\xb0\x81\x7e\x1e\xae\xd7\x69\xfa\x2f\x62\xd2\x68\xeb\x1e\x02\x1b\x06\x51\x90\x84\x3c\xc8\xd3\x0c\x43\x1b\x63\x51\x28\xd9\xb4\x88\x40\x69\xe7\xcc\xef\xd0\xf3\x61\x58\x88\x74\xdc\xe8\xe9\x99\x6e\x63\xb4\x60\x72\x3e\xb4\xc3\x34\x85\x46\x0d\x7a\x8c\x88\x71\x05\xd7\x66\x23\xa4\x94\xef\xd2\x3f\xa2\x3f\x57\xfa\xed\x3e\x45\x6e\xab\x2f\xac\x91\x46\xad\xc9\x5f\xf8\x31\xf5\x2b\x00\x00\xff\xff\xf3\x12\x0c\xb6\x29\x05\x00\x00")

func opsFilesSetCertificateDurationYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesSetCertificateDurationYml,
		"ops-files/set-certificate-duration.yml",
	)
}

func opsFilesSetCertificateDurationYml() (*asset, error) {
	bytes, err := opsFilesSetCertificateDurationYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/set-certificate-duration.yml", size: 1321, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesUseCorednsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xca\x41\x0a\xc2\x40\x0c\x46\xe1\xfd\x9c\x22\x74\x1f\x66\x5f\x10\x8f\x22\xe9\xcc\x8f\xad\xb6\x33\x21\x49\x0b\xbd\xbd\x0b\x51\x74\xf9\x3e\x1e\x33\x27\xa6\x38\x15\x23\x19\x74\x95\x82\x44\xa4\x12\xf3\x48\x79\x69\x1e\xd2\x0a\x6e\x77\xeb\xbb\x7a\x6e\xb2\xe1\x22\xaa\xeb\xc9\x52\x6b\x6f\x9e\x1f\x7d\xfa\x63\x57\x14\xcf\x6a\x5d\x61\xb1\xc0\xf3\xfb\xbb\x26\xa2\x43\xd6\x1d\x63\x22\x22\x62\x1a\x4a\x37\xd4\xe6\xc3\xa7\x37\x84\x2d\xc5\xd9\x61\x07\xec\xcb\x33\x44\x3d\x7e\xe0\xb9\x4f\xb0\x86\x80\x73\x15\x9f\xa7\x2e\x56\x87\xf4\x0a\x00\x00\xff\xff\xa7\x40\x8f\x0f\xc6\x00\x00\x00")

func opsFilesUseCorednsYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesUseCorednsYml,
		"ops-files/use-coredns.yml",
	)
}

func opsFilesUseCorednsYml() (*asset, error) {
	bytes, err := opsFilesUseCorednsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/use-coredns.yml", size: 198, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesUseRuntimeConfigBoshDnsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func opsFilesUseRuntimeConfigBoshDnsYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesUseRuntimeConfigBoshDnsYml,
		"ops-files/use-runtime-config-bosh-dns.yml",
	)
}

func opsFilesUseRuntimeConfigBoshDnsYml() (*asset, error) {
	bytes, err := opsFilesUseRuntimeConfigBoshDnsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/use-runtime-config-bosh-dns.yml", size: 0, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesUseVmExtensionsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcd\x3d\x0a\x83\x40\x10\x06\xd0\x7e\x4f\x31\xa5\x16\xc3\xf6\x42\xc8\x51\x64\xd1\x8f\x44\xb2\x3f\xc3\xcc\xac\x89\xb7\x0f\xc1\x36\x8d\x07\x78\x3c\x66\x0e\x4c\x7e\x08\x26\x52\x48\x4e\x0b\x02\x91\x24\x7f\x4e\x14\xb7\x6a\x9e\xea\x82\xf9\xa1\xad\x8b\xc5\x9a\x0a\x6e\x25\x99\x43\xe3\x5e\x66\x7c\x1c\xd5\xb6\x56\xed\x1e\x39\x10\xed\x29\x77\x4c\x34\x0c\x2b\x24\xb7\xa3\xa0\xfa\xfc\x23\xe3\xc8\x27\xe2\x25\xb7\xbe\xb2\x68\x13\xa8\x6f\xb0\x70\xf1\x7e\x37\x7d\x5d\xbe\x4f\xf4\xe7\xfe\x06\x00\x00\xff\xff\x06\xaf\x47\xdb\xfc\x00\x00\x00")

func opsFilesUseVmExtensionsYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesUseVmExtensionsYml,
		"ops-files/use-vm-extensions.yml",
	)
}

func opsFilesUseVmExtensionsYml() (*asset, error) {
	bytes, err := opsFilesUseVmExtensionsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/use-vm-extensions.yml", size: 252, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesVmTypesYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcd\x3b\x0e\xc2\x30\x10\x84\xe1\xde\xa7\x98\x32\x29\x22\xf7\x96\x38\x8b\x35\x4a\x56\x80\xf0\x63\x65\x3b\x41\xb9\x3d\x02\x53\x50\xa4\x21\xf5\xa7\xf9\x67\x42\xdb\x55\x1c\x8a\x68\xe0\x2c\x06\x50\xb6\x9b\x83\xbd\xa7\xda\x98\x66\xf1\xd7\x92\x57\xad\x36\x31\xca\x25\xb2\x36\x29\x76\x8b\xfe\xbd\x32\xc0\xc6\xb0\x8a\xc3\x30\x74\xf1\x5f\x19\x47\x63\xfe\x2b\x3f\x73\x79\x1c\x97\xbb\x9c\x2f\x53\x35\xec\x13\x97\x25\xa7\x7a\xd4\xff\xb8\xef\xfe\xf3\xf2\x0a\x00\x00\xff\xff\x34\x77\x67\xdd\x19\x01\x00\x00")

func opsFilesVmTypesYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesVmTypesYml,
		"ops-files/vm-types.yml",
	)
}

func opsFilesVmTypesYml() (*asset, error) {
	bytes, err := opsFilesVmTypesYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/vm-types.yml", size: 281, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesWorker_countYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x55\x28\xa9\x2c\x48\xb5\x52\x28\x4a\x2d\xc8\x49\x4c\x4e\xe5\x52\x50\x28\x48\x2c\xc9\xb0\x52\xd0\xcf\xcc\x2b\x2e\x49\xcc\x4b\x4e\x8d\x4f\x2f\xca\x2f\x2d\x28\xd6\xcf\x4b\xcc\x4d\xb5\x2d\xcf\x2f\xca\x4e\x2d\x82\xcb\x15\x73\x29\x28\x94\x25\xe6\x94\xa6\x5a\x29\x68\x68\x40\xe4\xe2\x93\xf3\x4b\xf3\x4a\x34\x35\xb9\x00\x01\x00\x00\xff\xff\x5d\x82\x53\x5e\x59\x00\x00\x00")

func opsFilesWorker_countYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesWorker_countYml,
		"ops-files/worker_count.yml",
	)
}

func opsFilesWorker_countYml() (*asset, error) {
	bytes, err := opsFilesWorker_countYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/worker_count.yml", size: 89, mode: os.FileMode(420), modTime: time.Unix(1553318017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesAwsOverridesYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\x3d\xca\xc3\x30\x10\x44\x7b\x9d\x62\x71\x65\x17\xfe\xd4\x0b\x3e\x7c\x14\xb1\x31\x13\x47\x58\x7f\x48\x2b\x27\xb9\x7d\x20\x0e\x4e\x95\xc2\xed\x83\x37\x6f\x46\x92\x67\x86\xa1\x82\xec\x79\x86\x22\xca\x2c\x37\x43\x5a\x78\xa9\x93\x22\xda\xd8\x37\x18\x45\x44\xb4\xb6\x0b\x4a\x84\xa0\xfe\xb9\xa4\x67\xdf\xaa\xa0\xe8\xbe\xff\x72\xfb\x81\x56\x78\x19\x06\x43\x5d\xa7\xd4\xcf\x82\x8b\x55\x38\xce\xb0\x4b\x49\x2d\x57\x1d\x39\xe0\x3f\xf0\x7b\x74\x0b\x16\x0f\x41\xac\x2e\xc5\x3a\xe9\xf1\x38\x42\x8e\x83\x3d\xcc\x5c\xd2\xd5\x79\xd8\xdd\x3a\xdb\xba\xa7\xb2\x9e\x6f\xed\x96\x7a\x05\x00\x00\xff\xff\x23\x5f\x9b\xa3\x39\x01\x00\x00")

func opsFilesAwsOverridesYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesAwsOverridesYml,
		"ops-files/aws-overrides.yml",
	)
}

func opsFilesAwsOverridesYml() (*asset, error) {
	bytes, err := opsFilesAwsOverridesYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/aws-overrides.yml", size: 313, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesAzureOverridesYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcd\x41\x0a\xc2\x30\x10\x05\xd0\x7d\x4e\x31\x17\x28\xd9\x07\xc4\xa3\x84\x4f\xfb\xa9\xc1\x66\x12\x32\xd3\x6a\x6f\xef\xa2\x4b\x41\x70\xff\xe0\x4d\xe2\x67\x67\x92\xc1\xbe\x61\x66\x10\xe9\xf0\x47\x92\x58\xd4\x1c\x3a\x33\xaf\xa3\xed\xdd\xa2\xa2\xf2\x56\x61\xce\x11\x8f\x9a\xf9\x76\xaa\x95\xa6\x76\x8f\x53\x10\x39\xb0\xed\x4c\x72\x81\x5c\xa1\x58\xb9\xe4\xb2\x50\xbd\xf8\x19\xc2\x7f\xcf\xab\x8d\xe7\xcf\xe7\x02\xdf\xcf\x27\x00\x00\xff\xff\xba\xa8\x23\x30\xcf\x00\x00\x00")

func opsFilesAzureOverridesYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesAzureOverridesYml,
		"ops-files/azure-overrides.yml",
	)
}

func opsFilesAzureOverridesYml() (*asset, error) {
	bytes, err := opsFilesAzureOverridesYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/azure-overrides.yml", size: 207, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesCustomDockerConfigYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x41\x0a\x02\x31\x0c\x05\xd0\xfd\x9c\x22\x17\x90\xec\x0b\x9e\x65\x88\x9d\x8f\x56\xc7\x26\xfc\x66\x2a\xde\x5e\x44\xb7\xef\x9d\x24\xdf\x81\x22\x44\xec\x56\xb1\x88\x84\xe5\xad\x88\xb6\x3e\xd2\x7a\xc5\x7a\xa5\x1f\x31\xb4\xdb\x13\xe7\x97\xf3\x01\xea\xdd\x2f\x7f\xd8\xbc\x7e\x21\xe8\x01\x66\xc3\xd0\x91\x4e\xac\x5b\xe3\x22\x32\x6d\x3f\x50\x44\xa7\x51\x67\xb5\xf8\xe5\xf2\x09\x00\x00\xff\xff\x77\x4d\x85\xdf\x74\x00\x00\x00")

func opsFilesCustomDockerConfigYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesCustomDockerConfigYml,
		"ops-files/custom-docker-config.yml",
	)
}

func opsFilesCustomDockerConfigYml() (*asset, error) {
	bytes, err := opsFilesCustomDockerConfigYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/custom-docker-config.yml", size: 116, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesDrainClusterErrandYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xc9\x41\x0e\x02\x21\x0c\x05\xd0\x3d\xa7\xf8\x17\x20\xec\x49\x3c\x8b\xa9\xf8\xe3\x8c\x53\xa1\x69\x41\xe3\xed\x8d\xb3\x7d\x2f\x63\x7e\x8d\x15\x4e\x53\x69\x4c\x80\xc9\xdc\x2a\xca\xde\x63\x4a\x6f\xbc\x3e\x7c\x2c\x8b\xd2\xe5\xc5\xcb\x67\xf8\x41\x2f\xcf\x71\x8b\x92\x13\xf0\x16\x5d\xac\x09\x00\xfe\x5f\x71\x77\xd9\x7b\x6e\xba\x62\xd2\x4f\x77\x2a\x25\x58\x61\x47\xe4\x8d\x6a\xf4\x48\xbf\x00\x00\x00\xff\xff\x48\xa3\xa7\xec\x76\x00\x00\x00")

func opsFilesDrainClusterErrandYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesDrainClusterErrandYml,
		"ops-files/drain-cluster-errand.yml",
	)
}

func opsFilesDrainClusterErrandYml() (*asset, error) {
	bytes, err := opsFilesDrainClusterErrandYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/drain-cluster-errand.yml", size: 118, mode: os.FileMode(420), modTime: time.Unix(1553318931, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesEvictionHardImagefsInodesSpecYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\xc1\xaa\x83\x30\x10\x46\xe1\xbd\x4f\x31\x4b\x5d\xe4\x66\x2f\x5c\xdc\x95\xbe\x45\x18\xe3\xaf\xa6\x6a\x26\x4c\x12\x4b\xdf\xbe\x14\x2c\xdd\x1d\x0e\x9f\x31\xa6\x31\x54\x5e\x09\x3d\x29\xd2\xce\x1e\x0d\x51\xe2\xb2\xf6\x64\x43\xcc\x85\xa3\x87\x5b\x54\x6a\xca\x36\xf2\x81\xff\xa7\xe8\x06\xb5\x0f\x19\xaf\xb1\xd5\x11\x3b\x8a\x4d\x2a\x09\x5a\x02\xb2\xbd\x96\xf1\x12\xe7\xb0\x54\xe5\x12\x24\x5a\x9c\xc1\x7f\xe2\xce\x3a\x0d\x36\x1c\xbc\x60\xce\x7f\x21\xca\x84\x7c\x53\x60\x68\x88\x4e\xde\x2b\x7a\x6a\xdb\x2f\x76\x2b\xeb\xe4\x2e\xec\x7e\xb8\xeb\xde\x01\x00\x00\xff\xff\x5f\xe3\x5e\xb8\xbb\x00\x00\x00")

func opsFilesEvictionHardImagefsInodesSpecYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesEvictionHardImagefsInodesSpecYml,
		"ops-files/eviction-hard-imagefs-inodes-spec.yml",
	)
}

func opsFilesEvictionHardImagefsInodesSpecYml() (*asset, error) {
	bytes, err := opsFilesEvictionHardImagefsInodesSpecYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/eviction-hard-imagefs-inodes-spec.yml", size: 187, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesEvictionHardImagefsSpecYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xca\x31\x8e\x83\x30\x10\x46\xe1\x9e\x53\x4c\x09\x85\xd7\x3d\xd2\x8a\x76\x6f\x61\x0d\xe6\x07\x66\x31\xb6\x35\xb6\x89\x72\xfb\x28\x12\x49\xf7\xf4\xf4\x19\x63\x3a\x43\xf5\x99\x31\x92\x22\x07\xf6\xe8\x88\x32\xd7\x7d\x24\x2b\xb1\x54\x8e\x1e\x6e\xd3\xd4\x72\xb1\x91\x4f\xfc\x3e\x92\x1e\x50\xfb\x9f\xe6\x7b\x1c\x6d\x46\x40\xb5\x59\x53\x86\x56\x41\xb1\xf7\x32\x3e\xc5\x55\xb6\xa6\x5c\x25\x45\x8b\x4b\xfc\x3b\xfe\x58\x97\xc9\xca\xc9\x1b\xd6\xf2\xc3\x17\x4b\xe0\x39\x60\xea\x88\x2e\x0e\x0d\x23\xf5\xfd\xc7\xba\x9d\x75\x71\xb7\x75\x5f\x3b\x0c\xaf\x00\x00\x00\xff\xff\x01\x9e\x59\x90\xb9\x00\x00\x00")

func opsFilesEvictionHardImagefsSpecYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesEvictionHardImagefsSpecYml,
		"ops-files/eviction-hard-imagefs-spec.yml",
	)
}

func opsFilesEvictionHardImagefsSpecYml() (*asset, error) {
	bytes, err := opsFilesEvictionHardImagefsSpecYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/eviction-hard-imagefs-spec.yml", size: 185, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesEvictionHardMemorySpecYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xca\x31\x8e\x83\x30\x10\x46\xe1\x9e\x53\x4c\x09\x85\xd7\x3d\xd2\x8a\x36\xb7\xb0\x06\xf3\x07\x1c\x8c\xc7\x1a\x6c\x22\x6e\x1f\x45\x21\xe9\x9e\x9e\x3e\x63\x4c\x63\xa8\x9c\x19\x3d\x29\x72\x64\x8f\x86\x28\x73\x59\x7a\xb2\x21\xed\x85\x93\x87\x9b\x55\x6a\xde\x6d\xe2\x0d\xff\x4f\xd1\x15\x6a\x1f\x32\x5e\x63\xad\x23\x22\x8a\xcd\x2a\x19\x5a\x02\x76\x7b\x2d\xe3\x25\xdd\xc3\x5c\x95\x4b\x90\x64\x71\x04\xff\x8e\x1b\xeb\x34\xd8\x0d\x9b\xe8\xf9\xc7\x07\x87\xc8\x63\xc4\xd0\x10\x1d\x1c\x2b\x7a\x6a\xdb\x2f\x75\x0b\xeb\xe4\x3e\xd4\xfd\x68\xd7\xbd\x02\x00\x00\xff\xff\xb2\x19\xed\xfe\xb7\x00\x00\x00")

func opsFilesEvictionHardMemorySpecYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesEvictionHardMemorySpecYml,
		"ops-files/eviction-hard-memory-spec.yml",
	)
}

func opsFilesEvictionHardMemorySpecYml() (*asset, error) {
	bytes, err := opsFilesEvictionHardMemorySpecYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/eviction-hard-memory-spec.yml", size: 183, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesEvictionHardNodefsInodesSpecYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\x31\x8e\x83\x30\x10\x85\xe1\x9e\x53\x4c\x09\x85\xd7\x3d\xd2\x8a\x6e\xb5\xb7\xb0\x06\xf3\x00\x07\xe2\xb1\xc6\x36\x51\x6e\x1f\xa1\x10\xa5\x7a\x4f\xbf\x3e\x63\x4c\x63\xa8\x3c\x13\x7a\x52\xa4\x9d\x3d\x1a\xa2\xc4\x65\xed\xc9\x86\x98\x0b\x47\x0f\xb7\xa8\xd4\x94\x6d\xe4\x3b\x7e\x1f\xa2\x1b\xd4\xde\x64\xbc\xc2\x56\x47\xec\x28\x36\xa9\x24\x68\x09\xc8\xf6\x4a\xc6\x4b\x9c\xc3\x52\x95\x4b\x90\x68\x71\x04\x7f\x9e\x7f\xd6\x69\xb0\x51\x26\xcc\xf9\x27\x9c\x9b\xff\x14\x18\x1a\xa2\x83\xf7\x8a\x9e\xda\xf6\x63\xdd\xca\x3a\xb9\xb7\x75\x5f\xdb\x75\xaf\x00\x00\x00\xff\xff\x2d\x0f\xed\x37\xb9\x00\x00\x00")

func opsFilesEvictionHardNodefsInodesSpecYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesEvictionHardNodefsInodesSpecYml,
		"ops-files/eviction-hard-nodefs-inodes-spec.yml",
	)
}

func opsFilesEvictionHardNodefsInodesSpecYml() (*asset, error) {
	bytes, err := opsFilesEvictionHardNodefsInodesSpecYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/eviction-hard-nodefs-inodes-spec.yml", size: 185, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesEvictionHardNodefsSpecYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xca\x31\x8e\x83\x30\x10\x46\xe1\x9e\x53\x4c\x09\x85\xd7\x3d\xd2\x8a\x76\x6f\x61\x0d\xe6\x07\xbc\x38\x1e\x6b\x6c\x13\xe5\xf6\x51\x14\x92\xee\xe9\xe9\x33\xc6\x74\x86\xea\x23\x63\x24\x45\x8e\xec\xd1\x11\x65\xae\xfb\x48\x36\xa4\x52\x39\x79\xb8\x4d\xa5\xe5\x62\x13\xdf\xf0\x7b\x17\x3d\xa0\xf6\x5f\xe6\x6b\x1c\x6d\x46\x44\xb5\x59\x25\x43\x6b\x40\xb1\xd7\x32\x5e\xd2\x1a\xb6\xa6\x5c\x83\x24\x8b\x33\xf8\x57\xfc\xb1\x2e\x93\x4d\xb2\x60\x2d\x3f\x7c\x72\x88\x3c\x47\x4c\x1d\xd1\xc9\xb1\x61\xa4\xbe\xff\x50\xb7\xb3\x2e\xee\x4d\xdd\x97\x0e\xc3\x33\x00\x00\xff\xff\x32\x85\xc4\x2e\xb7\x00\x00\x00")

func opsFilesEvictionHardNodefsSpecYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesEvictionHardNodefsSpecYml,
		"ops-files/eviction-hard-nodefs-spec.yml",
	)
}

func opsFilesEvictionHardNodefsSpecYml() (*asset, error) {
	bytes, err := opsFilesEvictionHardNodefsSpecYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/eviction-hard-nodefs-spec.yml", size: 183, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesGcpOverridesYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\xd1\xb1\x4e\xc4\x30\x0c\x06\xe0\xbd\x4f\x91\xf1\x6e\x88\xb2\x57\x42\x1d\x79\x8c\xc8\x97\xfe\x57\x02\xa9\x1d\xd9\x6e\xe1\xde\x1e\xa1\x56\x62\xe5\x46\x56\x5b\xf6\xf7\x5b\x8e\xc1\x1f\x1d\x63\x50\xf4\x46\x05\x43\x08\x9d\xfc\x6d\x0c\xa9\xb2\x39\x71\x41\x5e\x54\xb6\x6e\x89\x69\xc5\xcb\xa7\xe8\x07\x34\xbd\xcb\xed\x2c\x94\x26\xdb\x1c\xbb\xca\x5e\x67\x68\xea\x2a\x1d\xea\x15\x96\x8e\x4e\x11\xbe\xd7\x25\xbd\x36\xb9\x51\x9b\x12\xcb\x8c\xe8\xb4\xd8\x34\x84\xb0\x53\xdb\x30\x86\xcb\x65\x46\x6f\xf2\x58\xc1\x9e\x7f\x96\x66\xa7\x25\x1b\xdd\x71\xbd\xc6\x03\x1c\x86\xe7\x62\xae\x64\xfe\x7f\x62\xee\x6b\xc6\x97\x83\xad\x0a\xdb\x94\xe2\xaf\x69\xd0\xbd\x16\x64\x2a\x45\x36\xf6\x7c\x0c\x3c\xcb\x9c\x4f\xfb\x3b\x73\x5e\xf3\x1d\x00\x00\xff\xff\x6d\x48\xff\x9c\x1b\x02\x00\x00")

func opsFilesGcpOverridesYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesGcpOverridesYml,
		"ops-files/gcp-overrides.yml",
	)
}

func opsFilesGcpOverridesYml() (*asset, error) {
	bytes, err := opsFilesGcpOverridesYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/gcp-overrides.yml", size: 539, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesGenerate2018CasYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x52\xed\x8a\xdb\x30\x10\xfc\xef\xa7\x58\x28\x94\xa4\x20\xc5\x0e\xa5\x14\x3f\x44\x5f\x41\xac\xe5\x75\x2d\x4e\xb6\x8c\xb4\x72\x2e\xf7\xf4\x87\x3f\xce\x4e\x72\x21\xb9\x8f\xfc\x9d\x19\x69\x67\x76\x47\x08\x91\xfc\x80\x7f\x74\x00\x4d\x9e\x4d\x65\x34\x32\x01\x46\xae\x9d\x37\x6c\x28\x24\x02\xf8\xd8\x51\x0e\x9e\x3a\x8b\x9a\x12\x80\x0e\xb9\xce\x61\xd7\xa3\x37\x58\x58\x0a\x3b\x91\x00\xf4\x68\x23\xe5\x09\x00\x40\x8b\x0d\xe5\xf0\x14\x0b\xa7\x34\xaa\x7d\x9a\xfd\x1d\x61\xd7\xb1\x71\x6d\x98\x34\x00\xda\x35\x8d\x6b\xd5\x24\xd6\x38\xa3\x26\x28\x8d\x39\xb0\x8f\x34\x23\x65\xf4\x38\x3c\xcc\xe1\x67\xe5\xa2\x57\x47\x42\x1f\x20\xfb\xfd\x27\x1b\x05\x93\xb9\x13\xf3\xc9\x77\x1c\x93\x6f\x89\x29\x88\x12\x43\x5d\x38\xf4\xa5\xd0\x28\x1e\x97\xe0\xd7\x9a\xe0\xd1\xe6\xd9\x06\x71\x12\x60\xf1\xfc\x7e\xc4\x95\x24\x68\x99\x7c\x8b\x6c\x7a\x1a\xe3\x2c\x84\x80\x2c\x95\x59\x9a\xca\x7d\x9a\xca\x6c\x01\xd7\x41\x57\x20\x59\x52\x85\xd1\xf2\x0d\x4a\x86\x5e\xdf\xa1\xa5\xb6\x31\x30\x79\x69\x9d\x46\xbb\x88\x1b\x1c\x41\x5d\x69\x2f\x4d\x3b\xba\x5e\x49\x7a\xbe\x00\x36\x9b\xf5\x73\x35\x3d\x55\xb5\x0b\xbc\xdd\xbe\x9d\x70\xb8\x94\x53\x05\xa9\x79\xdf\xa5\x3a\x18\xae\xd5\xb0\x73\xc5\x4e\x8d\x25\x76\x65\x71\x56\xe4\x8b\xcb\xdf\x1d\xe2\xfc\x7f\x6c\xcd\xcb\xdc\x81\x70\x0c\x4c\x4d\x3e\x09\xc3\xcd\x8a\x7c\xb9\x0c\xc4\xba\x3c\xb3\xfc\xa1\x16\x9c\xa5\x1a\xbe\x90\x9f\x2e\xf5\x6b\x00\x00\x00\xff\xff\xdc\x46\xc5\x32\x4f\x04\x00\x00")

func opsFilesGenerate2018CasYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesGenerate2018CasYml,
		"ops-files/generate-2018-cas.yml",
	)
}

func opsFilesGenerate2018CasYml() (*asset, error) {
	bytes, err := opsFilesGenerate2018CasYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/generate-2018-cas.yml", size: 1103, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesGenerate2018CertificatesYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x95\xdf\x6e\xdb\x3a\x0c\xc6\xef\xfd\x14\x44\x0a\x9c\x02\x05\xe4\x36\xc5\xc1\x36\xf8\x6e\xd8\x63\x0c\x83\xc1\x48\x8c\x2d\x54\x96\x0c\x8a\xce\x9a\x3d\xfd\x20\x39\x75\xd3\xe5\x4f\x97\x7a\xc8\x65\xc8\x4f\x54\xbe\x9f\x45\x52\x29\x55\xdc\xc0\x57\x63\xc0\xd3\x4f\x58\x87\x81\x61\x4b\xc8\xa0\x89\x25\x42\x14\x64\xb1\xbe\x01\xeb\xe1\xf1\x61\xf9\xa5\x50\x20\xdb\x9e\x2a\x60\xea\x1d\x6a\x2a\x00\x7a\x94\xb6\x82\xfb\x0d\xb2\xc5\x95\xa3\x78\xaf\x0a\x80\x0d\xba\x81\xaa\x02\x00\xc0\x63\x47\x15\x88\x8b\xea\x69\x58\x91\x23\x51\xb9\x50\x4a\x85\x5e\x6c\xf0\x71\xd4\x01\xe8\xd0\x75\xc1\xd7\xe3\x81\x9d\xb8\xd4\x6b\xcd\xa5\xf5\x42\xec\xd1\xed\x84\xe8\xf2\x4f\xb1\x1b\xca\xea\x58\xc1\xf7\x1f\xbb\xdc\x42\xe3\x22\x9f\x0e\xb5\xc6\x7a\xba\x0a\x60\x11\xb8\x41\x6f\x7f\x61\xba\x73\x51\x41\xdc\x46\xa1\xae\xf2\xc1\x50\xdc\x49\xcc\xc0\x39\x5b\xc1\x7f\x09\x44\x9d\x40\x44\x58\xfe\xff\x69\x99\x05\xa3\xf3\x04\xc6\xae\xad\x46\xa1\xe2\x9f\xe0\xd0\xce\x92\x3f\x43\x05\x8f\xda\x39\x80\xa5\xb0\xb7\x91\x78\x43\x7c\x94\x19\x3d\x0b\x79\x43\xa6\x7e\xa2\x6d\x3d\x44\x6c\xe8\xe5\x02\x00\x05\xe3\x7f\xa8\x71\x90\x76\x17\xdd\xa7\x35\xc1\xea\x30\x0a\xf1\x21\xae\xbb\x57\x5c\xa7\x48\xdd\x4c\x9e\xd9\x93\x50\xcc\x7e\x41\x33\xa1\x90\x49\xcf\xab\x21\x4f\x8c\x42\x39\xa1\x34\xc6\x72\xdb\xb9\x79\x84\x49\xb4\x19\xcb\x3d\x9e\x22\x9b\x24\xe7\xc8\xde\xde\x95\x49\xf2\x16\xe9\xed\x07\x99\xa6\xe8\xf8\x89\xf6\xa3\x17\x61\x9c\x8b\x43\x8b\x9b\x49\x24\xe5\xbf\x65\x6b\x1f\xa4\x70\x35\xbf\x1d\x09\x5b\x1d\xd5\x88\x7c\x56\x83\xbd\x2d\x75\x72\x0c\xed\xf9\x7e\x7b\xa2\xcc\x1d\x3a\x76\x51\x19\x37\xfa\xda\x28\x5a\xc2\x3e\xb5\xee\x2c\x08\x2f\x45\xde\xb7\x0f\x6a\x12\xff\xe9\xbc\xd4\x6e\xc8\x71\x17\xf4\x34\x9c\xae\xc6\xc1\xfa\xb5\x1b\x9e\xcd\x6a\xde\x63\x08\xde\x4a\x60\xeb\x9b\xa9\xde\x5f\x2c\xa6\xab\x79\xdc\x9b\xb1\x06\x63\xbb\x0a\xc8\xe6\x3d\xbf\x87\x07\x34\xaa\x73\xdb\x66\xd4\x4f\xf2\x8b\xd7\xf4\x55\x69\x28\x1d\xbc\x70\x70\x8e\x58\x75\xe8\xb1\x39\xd3\x08\x27\x5f\xb5\x82\xfc\x62\xdb\x10\x65\x8a\x2c\x1f\x3f\x97\x0f\xe5\x43\xb9\xbc\x74\x57\x1f\xfe\xa1\x77\x87\xe9\xb1\xd5\x71\x44\x64\x6c\x63\x05\x5d\x1d\x6d\xe3\x51\x06\xa6\x29\x93\xc4\xe4\xb5\xed\x5b\xe2\xee\x75\x7c\x5f\xf2\x25\x7e\x07\x00\x00\xff\xff\xc7\x22\x04\xe3\x2d\x0a\x00\x00")

func opsFilesGenerate2018CertificatesYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesGenerate2018CertificatesYml,
		"ops-files/generate-2018-certificates.yml",
	)
}

func opsFilesGenerate2018CertificatesYml() (*asset, error) {
	bytes, err := opsFilesGenerate2018CertificatesYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/generate-2018-certificates.yml", size: 2605, mode: os.FileMode(420), modTime: time.Unix(1553318931, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesModifyAuditLogYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xce\x41\xaa\xc2\x40\x0c\x87\xf1\xfd\x9c\x22\x17\x18\xb2\x79\xf0\xb4\xe0\x59\x24\xad\x7f\xea\xd8\x76\x26\x24\x99\xa2\x9e\x5e\x04\xc1\x1b\xb8\xfd\x36\xdf\x2f\x53\x3c\x14\x03\x19\x74\x95\x09\x89\x48\x25\xae\x03\x71\xa9\x1e\x52\x27\x9c\x67\x6b\x5d\x9d\xab\x6c\x38\x6d\xe2\x01\xe3\x5b\x1b\x3f\x61\xe9\x23\xb2\x68\x71\xd8\x0e\x63\xb5\xa6\xb0\x28\x70\x5e\x0e\x9e\xc5\x66\x67\xe9\x97\x12\x79\x6d\x73\xde\xe4\xee\xe5\xf9\x7e\xec\xb2\x76\x0c\xf4\x77\x4c\xe9\xc7\x80\x51\xa6\xa5\xeb\x97\xf0\x9f\x5e\x01\x00\x00\xff\xff\x77\x4a\x0a\x75\x02\x01\x00\x00")

func opsFilesModifyAuditLogYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesModifyAuditLogYml,
		"ops-files/modify-audit-log.yml",
	)
}

func opsFilesModifyAuditLogYml() (*asset, error) {
	bytes, err := opsFilesModifyAuditLogYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/modify-audit-log.yml", size: 258, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesPksMasterAliasesYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcc\x4b\x4e\xc4\x30\x10\x84\xe1\xbd\x4f\x51\xcb\x99\x85\xe5\xbd\x25\xce\x62\x35\x99\x02\x07\xfc\x68\xb9\x1d\xa4\xdc\x1e\x85\x10\x90\x66\x5b\xdf\xaf\xf2\x98\xbb\x32\x62\x50\x8b\x2c\x74\x80\xca\xcc\x11\x61\x6d\x36\xa5\x2d\x4c\xef\xa3\x6f\x6a\xa1\x49\xe5\x4b\x15\x9b\x1c\xe1\xa3\xbf\x5a\xf0\x0e\xf8\x92\xb2\x31\x3a\x00\x38\x3c\x42\x3f\xcd\x9f\x91\x97\xb2\x8a\xd1\x7e\x70\xb0\x50\xec\xd7\x33\x8b\x72\x9c\xb0\xf4\x66\x5b\xa5\x9d\x1f\x38\x3c\x89\xae\xc9\xb2\x0c\x3e\xae\x15\x78\x1b\xbd\xc6\x27\x4d\x79\x4e\xfd\x2b\x1e\xd4\xd2\xf7\xca\x36\x23\x6e\xb7\xab\xfc\x5f\xef\x77\xf7\x1d\x00\x00\xff\xff\x42\xa7\xa1\x4e\xec\x00\x00\x00")

func opsFilesPksMasterAliasesYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesPksMasterAliasesYml,
		"ops-files/pks-master-aliases.yml",
	)
}

func opsFilesPksMasterAliasesYml() (*asset, error) {
	bytes, err := opsFilesPksMasterAliasesYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/pks-master-aliases.yml", size: 236, mode: os.FileMode(420), modTime: time.Unix(1553318931, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesSetFirstIpYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\xb1\x4e\xc3\x40\x10\x44\x7b\x7f\xc5\x48\x69\x92\x22\x72\xa0\x42\x96\xa8\x80\x22\x0d\x20\x94\xde\xda\xf8\xc6\xf1\x89\xe3\xce\xec\xae\x6d\xe5\xef\x51\xa2\x44\xf4\xbb\xef\xbd\x59\xe1\xfd\xe3\xf0\xd6\xe0\x30\x44\x43\x34\x28\x7f\xa7\xa8\x0c\xe8\x8b\xc2\x07\x22\xb0\x97\x29\x39\xbe\xa7\x23\x35\xd3\x69\x30\xea\x1c\x3b\x62\x19\x62\x37\x40\xd2\x22\x67\x83\x4e\xd9\x50\x32\xfa\xa8\xe6\xd8\x7f\x42\x42\x50\x9a\xa1\xf4\x57\xce\xfd\xe9\x65\xff\xfa\x55\xad\xe0\x17\x5f\x26\x03\xbc\xe0\x48\xa4\x22\x81\x01\xcb\xc0\x8c\x85\x10\x25\xba\x41\xf2\x29\xe6\x13\xba\x18\xf4\x8e\xe9\xd2\x64\x4e\xad\xb6\xf0\xf3\xc8\x06\xca\x31\x49\xc7\x0a\x18\xc5\x87\x06\xf5\x2c\x1a\xe5\x98\x68\x75\x96\x1f\x3e\x7b\xb2\xed\x7f\xfa\xf6\x71\xf7\xf0\x54\x97\xd1\x63\xc9\x56\x4b\x72\x6a\x16\x8f\x33\xdb\xcb\xb1\xd5\xbb\x0a\x98\x25\x4d\x6c\xb0\x5e\x5f\x97\xb4\x71\x6c\x4b\xdf\xde\xea\xdb\x9b\xbe\xbd\x24\x6d\x36\xd5\x5f\x00\x00\x00\xff\xff\x85\x67\xbb\x13\x3e\x01\x00\x00")

func opsFilesSetFirstIpYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesSetFirstIpYml,
		"ops-files/set-first-ip.yml",
	)
}

func opsFilesSetFirstIpYml() (*asset, error) {
	bytes, err := opsFilesSetFirstIpYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/set-first-ip.yml", size: 318, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesSyslogYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x91\xc1\x6e\xab\x40\x0c\x45\xf7\x7c\x85\x97\x61\x81\xd8\x23\xbd\x6f\x41\x0e\x73\x1f\x9d\x76\x98\xb1\x6c\xa7\x11\x7f\x5f\x25\x25\x64\x92\x5d\x77\xad\x94\xe5\xdc\x73\x8c\x8d\x6e\x47\xbe\x0a\x06\x52\x48\xe2\x09\x0d\x91\xb0\xbf\x0d\xd4\xc7\x6c\xce\x79\xc2\x38\x6b\x39\x89\xf5\x99\x17\xfc\x5b\xd8\x1c\xda\xbf\x97\xa3\xf5\x5d\x43\xf4\xc9\xe9\x84\xa1\x21\x22\xba\xf0\x81\x6c\xb5\x54\xe6\xf1\x7f\xd1\x33\x6b\x80\x5e\x91\x22\x81\x6d\xa7\xd7\x4c\xb4\x08\xd4\x23\xec\x7b\x9c\x36\x78\x7b\x11\x71\x08\x0a\xb3\x81\x0e\x87\xed\xab\x5b\xd2\xb6\xbb\x23\x45\xbd\x12\x2e\xcf\x8a\xba\x72\xb6\x27\x65\xcf\x6a\x2f\xd9\x88\xcc\xc7\x84\x50\x9b\xf7\xb4\xde\x08\x5d\xa2\x3b\xc2\x28\x80\xd6\xbb\x1f\x40\x35\x31\xf1\x38\xe1\xe1\x86\x2d\xa9\x9c\x25\xce\xca\x1e\x4b\xbe\xff\x3e\x51\x88\xf6\x7c\xd3\x2d\x6a\xdb\xa6\xf9\x59\x73\xe7\xa2\x1f\xaf\xe6\xfe\x62\x73\x2c\x92\xd6\x8e\x43\x28\xd9\x5e\xfd\xfd\x82\xfe\xbe\x02\x00\x00\xff\xff\x01\x38\x3d\x52\x33\x05\x00\x00")

func opsFilesSyslogYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesSyslogYml,
		"ops-files/syslog.yml",
	)
}

func opsFilesSyslogYml() (*asset, error) {
	bytes, err := opsFilesSyslogYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/syslog.yml", size: 1331, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesSyslog_and_routesyncYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\x31\x6e\xc3\x30\x0c\x45\x77\x9f\x82\x63\x3c\x18\xde\x05\xf4\x2c\x02\x23\xfd\xba\x2a\x64\x49\x20\xe9\x16\xbe\x7d\x91\xd4\x71\x94\x8c\x7c\xff\x51\xfc\x9a\xc8\xf6\x06\x47\x82\x96\x39\x60\x20\x6a\x6c\x5f\x8e\xe6\x54\xd4\xb8\x04\xf8\x45\xea\xd6\x74\x2e\xbc\xe2\x43\xea\x66\x98\x74\x2f\x61\xfe\xae\x57\x9d\xa7\x81\xe8\x87\xf3\x06\x37\x10\x11\xdd\x1c\x47\xba\x6b\xae\x8b\xff\xac\xf2\xcb\x12\x21\xf7\x48\x90\xc1\x7a\xa6\x77\xd6\xa4\x36\x88\x25\xe8\xff\x3a\x1d\xe1\x63\x22\xe2\x18\x05\xaa\x8e\x2e\x97\xe3\xd5\x83\x8c\xe3\xe9\xb4\x2a\xd6\x09\xb7\xb1\x4b\x4d\xb8\xe8\x9b\x72\xb2\xde\xcb\xea\x51\xf8\x9a\x11\x7b\xf3\x49\xfb\x8b\x90\x35\x99\x21\xfa\x06\x48\x7f\xfb\x25\xe8\x36\x02\xfb\x80\x97\x0e\x07\xe9\x9c\x35\x2d\xc2\x96\x6a\x79\x7e\x9f\x28\x26\x7d\xef\xf4\x40\xe3\x38\xfc\x05\x00\x00\xff\xff\xba\x8f\x37\xfa\xbd\x01\x00\x00")

func opsFilesSyslog_and_routesyncYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesSyslog_and_routesyncYml,
		"ops-files/syslog_and_routesync.yml",
	)
}

func opsFilesSyslog_and_routesyncYml() (*asset, error) {
	bytes, err := opsFilesSyslog_and_routesyncYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/syslog_and_routesync.yml", size: 445, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesSystemReservedCpuSpecYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\xae\x83\x30\x0c\x87\xf1\x9d\x53\x78\x84\x21\xf2\x8e\xf4\xc4\x1d\xde\x05\x50\x48\xff\xa5\x29\x90\x58\x8e\x4d\xc5\xed\x3b\x94\xf5\xf7\x7d\x21\x84\x2e\x90\x5d\x82\x91\x14\xb2\xc7\x84\x8e\x48\xa2\xbd\x46\xe2\x5c\x9a\xc5\x92\x30\xaf\x5a\x5d\x1a\x97\x78\xe0\xef\x53\x75\x83\xf2\xbb\x2e\x37\x6c\xbe\x60\x87\xb1\x68\x15\xa8\x65\x34\xbe\x29\xa4\x5a\x9e\x79\x75\x8d\x96\x6b\xe1\x76\x35\xc3\xf1\x8f\x06\x3d\xf1\x98\x38\x89\x4f\x1d\xd1\x19\x77\xc7\x48\x7d\xff\xeb\xb3\xde\xc3\x9c\xc4\x87\xe1\x1b\x00\x00\xff\xff\x75\x9b\x50\xd3\xa1\x00\x00\x00")

func opsFilesSystemReservedCpuSpecYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesSystemReservedCpuSpecYml,
		"ops-files/system-reserved-cpu-spec.yml",
	)
}

func opsFilesSystemReservedCpuSpecYml() (*asset, error) {
	bytes, err := opsFilesSystemReservedCpuSpecYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/system-reserved-cpu-spec.yml", size: 161, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesSystemReservedEphemeralStorageSpecYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xca\x31\x6e\x84\x30\x10\x05\xd0\x9e\x53\x4c\x09\x85\xe5\x1e\x29\xe2\x0e\xb9\x80\x35\x90\x1f\x70\x30\xb6\x35\x33\x26\xe2\xf6\x5b\xac\xb5\xed\xd3\x73\xce\x0d\x8e\xec\xa9\x98\x49\x50\x13\x6f\x18\x88\x2a\xdb\x31\x93\x8f\x59\x8d\xf3\x86\xb0\x4b\x69\x55\x7d\xe6\x0b\x5f\xff\x45\x4e\x88\xff\x2b\x6b\x87\xb3\xad\x48\x30\x5f\xa5\x54\x88\x45\xa8\xef\xe4\xb6\x92\x7f\xe3\xde\x84\x2d\x96\xec\xf5\x51\xc3\xf5\x0d\x85\xdc\xf8\x59\x3c\xea\x81\x0b\xc2\xc9\xa9\x15\xe1\x1d\xcb\x40\x74\x73\x6a\x98\x69\x1c\xdf\x3b\x48\xef\xe1\xb3\x43\xdf\xd3\xf4\x0a\x00\x00\xff\xff\xb1\x33\x2f\xf3\xbd\x00\x00\x00")

func opsFilesSystemReservedEphemeralStorageSpecYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesSystemReservedEphemeralStorageSpecYml,
		"ops-files/system-reserved-ephemeral-storage-spec.yml",
	)
}

func opsFilesSystemReservedEphemeralStorageSpecYml() (*asset, error) {
	bytes, err := opsFilesSystemReservedEphemeralStorageSpecYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/system-reserved-ephemeral-storage-spec.yml", size: 189, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesSystemReservedMemorySpecYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\x83\x30\x0c\x05\xd0\x9d\x53\x78\x84\x21\xf2\x8e\x54\x71\x87\x5e\x00\x05\xfa\x4b\x53\x48\x1c\x39\x0e\x15\xb7\xef\x40\xd6\xa7\xe7\x9c\xeb\x1c\xd9\x95\x31\x92\x22\x1f\x7e\x45\x47\x94\xbd\x7d\x46\xe2\x90\x8a\xf9\xb4\x62\xde\x54\x6a\x2e\x9c\x7c\xc4\xe3\x27\xba\x43\xf9\x2b\x4b\x83\xbd\x2e\x38\x60\x9c\x55\x32\xd4\x02\x0a\x37\x72\xab\xa4\x77\xd8\xaa\x7a\x0b\x92\xb8\x5c\xc5\x10\x9f\x28\xd0\x13\xaf\x89\x23\xa2\xe8\x35\x75\x44\xa7\x3f\x2a\x46\xea\xfb\xbb\xcc\xda\xce\x7c\x97\x61\xf8\x07\x00\x00\xff\xff\xe9\xc1\x52\xd7\xa7\x00\x00\x00")

func opsFilesSystemReservedMemorySpecYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesSystemReservedMemorySpecYml,
		"ops-files/system-reserved-memory-spec.yml",
	)
}

func opsFilesSystemReservedMemorySpecYml() (*asset, error) {
	bytes, err := opsFilesSystemReservedMemorySpecYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/system-reserved-memory-spec.yml", size: 167, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesUpdateOverridesYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcc\x41\x0a\x02\x31\x0c\x85\xe1\x7d\x4f\xf1\x2e\x30\x98\xc1\x5d\x2e\x53\x42\x8d\x36\xd0\x19\x4a\x27\x55\xe7\xf6\xd2\x8a\x5b\x37\x81\x3f\x7c\xbc\x05\x7e\x56\x65\x34\xad\x45\x92\x06\xa0\x8a\x67\xc6\xa5\xd7\x9b\xf8\xe8\xa7\x94\xae\x1c\x00\x20\xc9\x2e\xcd\xf4\x60\xac\xb3\x37\x79\x47\xdb\xe3\xbd\xd8\x23\xfb\xef\x39\xd1\x19\x5f\xe2\x29\x47\xb7\x4d\x19\x2b\x11\xd1\x72\x1d\x97\xa6\xf9\x8e\xff\x37\x87\x36\x93\xc2\xf0\xd6\x35\x7c\x02\x00\x00\xff\xff\xd7\x17\xbc\x51\xa7\x00\x00\x00")

func opsFilesUpdateOverridesYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesUpdateOverridesYml,
		"ops-files/update-overrides.yml",
	)
}

func opsFilesUpdateOverridesYml() (*asset, error) {
	bytes, err := opsFilesUpdateOverridesYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/update-overrides.yml", size: 167, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesUpdateTrustListsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x96\xc1\x8e\xda\x30\x10\x86\xef\x79\x8a\x91\xf6\xb2\x1c\xbc\x69\xf7\x54\x21\xf5\x0d\x7a\x6b\xef\x68\xe2\x0c\xe0\xc5\xd8\x96\x3d\xa1\xcb\xdb\x57\x21\x85\x26\x60\xb7\x24\x9b\x80\xca\xd5\xf8\xff\xcd\x7c\xfe\x33\x1e\x21\x44\xf6\x04\x3f\xbe\x7d\x07\xf6\x55\x60\xd0\x2a\x70\x80\xa5\xf5\xc0\x6b\x02\x74\x4e\xef\x05\x96\xa5\x35\x01\x94\x09\x8c\x46\x12\xac\xbc\xad\x5c\xf6\xf4\xfb\xd7\xe0\x48\x06\x78\xb3\x45\x26\x80\xf7\x8e\xe6\xe0\xc9\x69\x94\x94\x01\x38\xe4\xf5\x1c\xf2\xa3\x72\x71\x50\x86\xdc\xe0\x96\xbe\xb6\xbd\xf3\x37\x5b\x74\x96\x0f\xa6\xb9\xf3\xd6\x91\x67\x45\x21\x67\x1d\xf2\x35\xa1\x0b\x4c\x3e\x03\xd8\xa1\xae\x68\x9e\x01\x00\x48\x9c\xc3\xf3\xf3\xa6\x2a\xec\x42\xe2\x8b\xac\xf7\x2f\x95\x44\xa6\xd9\xec\xb4\xbc\x78\xfd\xf4\xf9\x4b\xf7\xb7\x46\xfb\x67\xa5\x36\x61\x1d\xc4\xf1\x10\x91\x90\x38\xaf\x76\xc8\xb4\xd8\xd0\x3e\x2e\x69\x6d\x98\xcd\xb2\xc9\xa1\x28\xb3\xd4\xd5\x7b\x59\x4c\x0a\xe5\x78\x48\x0f\x28\x5d\xc9\x8d\xa1\x6c\xaa\x82\xbc\x21\xa6\x20\x4a\x0c\xeb\xc2\xa2\x2f\x13\x80\x2e\xf6\x89\x28\xb0\xd8\xb6\x14\x8d\x08\xc0\xa8\xc3\xf5\x30\xd3\xf2\x1b\x83\xdd\x12\x7b\x25\x83\x08\xe4\x77\x13\x7f\x88\xdd\xa3\x7a\xc0\x8a\x09\xef\x96\xbf\x18\xa2\xee\x8d\xbe\x48\xac\x01\x9d\x5d\x73\x53\x2e\x5e\x95\xa8\x41\x39\x8a\x61\x49\x3f\x04\x5b\xac\x1b\xdc\xe5\x13\x50\x1b\x0a\x74\xaa\x61\x3d\xe0\x15\x68\x8c\x5b\x54\xbb\x8e\x31\xb0\x9a\x58\x48\xad\xc8\xf0\xa4\xf9\xeb\x1e\xd5\x13\xf2\xb9\xf0\x43\xf9\x1b\xc0\x68\xa4\xf0\x8d\x8c\x33\x99\xd7\x7f\xc4\x7f\x48\x92\x0f\x8c\xa4\x35\xec\xad\xd6\xe4\xc5\x16\x0d\xae\x46\x8c\xe8\xa5\xf5\x9d\x9a\x40\xe4\x9f\xf4\x0c\x6b\xd2\x61\x82\xd4\xfe\x1d\x9b\xd4\xd5\x61\x90\x0a\x6a\x65\x94\x59\x9d\xb8\x41\x37\x71\xad\x1b\x0e\x72\x4d\x65\xa5\x47\xbc\xd8\x93\xe3\xc3\x34\xf5\xd6\x06\x6f\x35\x0d\x19\xd6\xa3\xa8\xda\x9e\x0f\x03\x8b\x58\x96\x63\x00\xaa\x7d\xce\xa1\xd4\x6b\x31\x1c\xf5\x7a\xbf\x6e\x5a\x2b\x0e\x05\x88\xd7\xeb\xea\x6e\x0b\xc6\xfd\xac\x53\x85\x4a\xd6\xe3\xd5\x2a\x59\xf7\x2e\xb7\xa5\x99\xbe\x62\x47\xf1\x71\xf8\xbe\x57\x9b\x1e\xe8\x7e\x5a\xbf\x49\x0d\x74\x9a\x78\xc0\x17\xd0\x38\x9e\xb5\x08\x4d\x9c\x18\xe1\x6e\x32\xbb\xf5\x1f\xda\x3e\xfe\xee\xf5\xe1\xf0\x1f\x76\xc8\x49\x43\x71\x9c\x99\x25\x9e\x31\xe9\xd6\xd6\x3f\x27\xc7\x71\xc1\x79\xfb\xbe\x1f\x2b\xdc\x8d\xdb\x63\xdc\xeb\xaf\x00\x00\x00\xff\xff\x5a\x5a\x17\x46\x08\x14\x00\x00")

func opsFilesUpdateTrustListsYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesUpdateTrustListsYml,
		"ops-files/update-trust-lists.yml",
	)
}

func opsFilesUpdateTrustListsYml() (*asset, error) {
	bytes, err := opsFilesUpdateTrustListsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/update-trust-lists.yml", size: 5128, mode: os.FileMode(420), modTime: time.Unix(1553318931, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesUpdateWorkerOverridesYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\xb1\x8a\xc3\x30\x10\x44\x7b\x7d\xc5\x94\x76\x61\x2c\x73\x9d\xe0\xb8\x4f\x11\x8b\x6e\xcf\x16\x27\xcb\x62\xb5\x8a\xe3\xbf\x0f\xb1\x8b\x90\x26\xcd\xc0\x0c\xef\x31\x03\xf4\x28\xec\x20\x5c\x12\x05\x36\x40\x21\x5d\x1c\xc6\x98\xab\x52\x0e\xec\x67\xd9\x5a\xa9\x63\xa6\x95\xbf\xf7\x4d\xfe\x59\xc6\x56\x7e\x49\xf9\xc7\x00\x37\x4a\x8d\x9d\x01\x80\x40\x99\x24\x72\x75\x98\xce\xbe\xd2\xdd\xc7\xec\xff\x52\x9c\x17\x75\xe8\xba\x4b\xf6\x6f\x7b\xdf\xbf\xdc\xc3\xef\xa4\x61\xf1\x1a\x57\x76\x98\xac\xb5\x76\xf8\x7a\xa6\x3d\x99\xeb\xf4\x33\x53\x59\x22\x25\x07\x95\xc6\xc6\x3c\x02\x00\x00\xff\xff\x32\x7d\xd7\x54\xdc\x00\x00\x00")

func opsFilesUpdateWorkerOverridesYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesUpdateWorkerOverridesYml,
		"ops-files/update-worker-overrides.yml",
	)
}

func opsFilesUpdateWorkerOverridesYml() (*asset, error) {
	bytes, err := opsFilesUpdateWorkerOverridesYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/update-worker-overrides.yml", size: 220, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesVsphereEnableDiskUuidYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x41\x0e\xc2\x20\x10\x05\xd0\x3d\xa7\xf8\x17\x68\xd8\x93\x18\x8f\x42\xc6\xf6\x47\x49\xe9\x40\x18\x06\xf5\xf6\x7d\x1b\xe6\xbf\x33\x61\xb0\x57\xd9\x19\x80\x2e\xf3\x93\x10\x8b\xda\x14\xdd\x99\xdf\xa3\x79\xb7\xa8\x72\xf1\xf1\x6d\xe3\xe4\x88\xeb\xca\xfc\x4d\xaa\x95\xa6\xf6\x8c\x5b\x00\x96\x54\x67\xc2\x51\xec\xcc\x54\x79\x55\x66\xf7\x72\x84\x3b\x00\x00\xff\xff\x3a\x2a\x67\x33\x60\x00\x00\x00")

func opsFilesVsphereEnableDiskUuidYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesVsphereEnableDiskUuidYml,
		"ops-files/vsphere-enable-disk-uuid.yml",
	)
}

func opsFilesVsphereEnableDiskUuidYml() (*asset, error) {
	bytes, err := opsFilesVsphereEnableDiskUuidYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/vsphere-enable-disk-uuid.yml", size: 96, mode: os.FileMode(420), modTime: time.Unix(1553318906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsFilesVsphereOverridesYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xcf\x31\x6e\xeb\x30\x0c\xc6\xf1\xdd\xa7\x10\x32\xd9\x83\x9f\xf0\x56\x03\x45\xc6\x1e\x43\x60\xa4\x2f\x8e\x5a\x59\x24\x48\xc9\x85\x6f\xdf\xc1\x6d\xd1\x0b\x34\x2b\x09\xfc\xc9\xdf\xec\xda\x21\x58\x9c\x42\x0a\x45\x0c\xce\x09\xb5\xc7\xe2\x7c\xae\xd6\xa8\x46\x84\x55\xb9\x8b\xf9\x4a\x1b\x5e\x36\xb2\x06\xf5\x6f\x7c\xfb\x1a\xc4\xc2\x3d\xcd\xa2\xbc\xe7\x04\xf5\xa2\x2c\xd0\x96\x61\xfe\xdc\x44\xae\xf7\xbc\xfa\xd7\xc2\x37\x2a\x57\x2f\x64\xf6\xc1\x9a\xae\x83\x73\x3b\x95\x8e\xc5\x8d\xa3\x67\xb1\x6d\x55\x3f\x8e\xf2\x6e\x81\x24\x87\x04\x29\x7c\x6c\xa8\x6d\x9a\xce\x50\xf8\x39\xb1\x9b\x3c\xa0\xf0\x7b\x44\x6d\xd0\x70\xbe\x14\xa2\x22\xd9\xbf\xef\xfe\x34\x0d\xc3\x73\x65\xdd\xa0\x7f\xa5\xca\x09\xb5\xe5\x76\x3c\x5f\x95\xab\x21\x76\xc5\x7c\x2f\xb4\xfe\xe2\x5d\xfe\x5f\x86\xcf\x00\x00\x00\xff\xff\x69\xfa\xcb\x24\x3a\x02\x00\x00")

func opsFilesVsphereOverridesYmlBytes() ([]byte, error) {
	return bindataRead(
		_opsFilesVsphereOverridesYml,
		"ops-files/vsphere-overrides.yml",
	)
}

func opsFilesVsphereOverridesYml() (*asset, error) {
	bytes, err := opsFilesVsphereOverridesYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops-files/vsphere-overrides.yml", size: 570, mode: os.FileMode(420), modTime: time.Unix(1553318931, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"README.md": readmeMd,
	"cfcr.yml":  cfcrYml,
	"cloud-config/iaas/aws/use-vm-extensions.yml":                         cloudConfigIaasAwsUseVmExtensionsYml,
	"cloud-config/iaas/azure/use-vm-extensions.yml":                       cloudConfigIaasAzureUseVmExtensionsYml,
	"cloud-config/iaas/gcp/use-vm-extensions.yml":                         cloudConfigIaasGcpUseVmExtensionsYml,
	"cloud-config/iaas/vsphere/use-vm-extensions.yml":                     cloudConfigIaasVsphereUseVmExtensionsYml,
	"ops-files/add-hostname-to-master-certificate.yml":                    opsFilesAddHostnameToMasterCertificateYml,
	"ops-files/add-oidc-endpoint.yml":                                     opsFilesAddOidcEndpointYml,
	"ops-files/add-proxy.yml":                                             opsFilesAddProxyYml,
	"ops-files/add-vm-extensions-to-master.yml":                           opsFilesAddVmExtensionsToMasterYml,
	"ops-files/addons-spec.yml":                                           opsFilesAddonsSpecYml,
	"ops-files/allow-privileged-containers.yml":                           opsFilesAllowPrivilegedContainersYml,
	"ops-files/change-cidrs.yml":                                          opsFilesChangeCidrsYml,
	"ops-files/change-etcd-metrics-url.yml":                               opsFilesChangeEtcdMetricsUrlYml,
	"ops-files/disable-anonymous-auth.yml":                                opsFilesDisableAnonymousAuthYml,
	"ops-files/enable-bbr.yml":                                            opsFilesEnableBbrYml,
	"ops-files/enable-denyescalatingexec.yml":                             opsFilesEnableDenyescalatingexecYml,
	"ops-files/enable-encryption-config.yml":                              opsFilesEnableEncryptionConfigYml,
	"ops-files/enable-nfs.yml":                                            opsFilesEnableNfsYml,
	"ops-files/enable-podsecuritypolicy.yml":                              opsFilesEnablePodsecuritypolicyYml,
	"ops-files/enable-securitycontextdeny.yml":                            opsFilesEnableSecuritycontextdenyYml,
	"ops-files/example-vars-files/iaas/azure/cloud-provider.yml":          opsFilesExampleVarsFilesIaasAzureCloudProviderYml,
	"ops-files/example-vars-files/iaas/gcp/cloud-provider.yml":            opsFilesExampleVarsFilesIaasGcpCloudProviderYml,
	"ops-files/example-vars-files/iaas/openstack/cloud-provider.yml":      opsFilesExampleVarsFilesIaasOpenstackCloudProviderYml,
	"ops-files/example-vars-files/iaas/vsphere/cloud-provider.yml":        opsFilesExampleVarsFilesIaasVsphereCloudProviderYml,
	"ops-files/example-vars-files/iaas/vsphere/set-working-dir-no-rp.yml": opsFilesExampleVarsFilesIaasVsphereSetWorkingDirNoRpYml,
	"ops-files/example-vars-files/misc/bootstrap.yml":                     opsFilesExampleVarsFilesMiscBootstrapYml,
	"ops-files/example-vars-files/misc/oidc.yml":                          opsFilesExampleVarsFilesMiscOidcYml,
	"ops-files/example-vars-files/new-cidrs.yml":                          opsFilesExampleVarsFilesNewCidrsYml,
	"ops-files/example-vars-files/system-specs.yml":                       opsFilesExampleVarsFilesSystemSpecsYml,
	"ops-files/iaas/aws/add-master-credentials.yml":                       opsFilesIaasAwsAddMasterCredentialsYml,
	"ops-files/iaas/aws/add-worker-credentials.yml":                       opsFilesIaasAwsAddWorkerCredentialsYml,
	"ops-files/iaas/aws/cloud-config/lb.yml":                              opsFilesIaasAwsCloudConfigLbYml,
	"ops-files/iaas/aws/cloud-provider.yml":                               opsFilesIaasAwsCloudProviderYml,
	"ops-files/iaas/aws/lb.yml":                                           opsFilesIaasAwsLbYml,
	"ops-files/iaas/azure/cloud-config/lb.yml":                            opsFilesIaasAzureCloudConfigLbYml,
	"ops-files/iaas/azure/cloud-provider.yml":                             opsFilesIaasAzureCloudProviderYml,
	"ops-files/iaas/azure/subnet.yml":                                     opsFilesIaasAzureSubnetYml,
	"ops-files/iaas/azure/use-cifs.yml":                                   opsFilesIaasAzureUseCifsYml,
	"ops-files/iaas/azure/use-credentials.yml":                            opsFilesIaasAzureUseCredentialsYml,
	"ops-files/iaas/gcp/add-service-key-master.yml":                       opsFilesIaasGcpAddServiceKeyMasterYml,
	"ops-files/iaas/gcp/add-service-key-worker.yml":                       opsFilesIaasGcpAddServiceKeyWorkerYml,
	"ops-files/iaas/gcp/add-subnetwork-for-internal-load-balancer.yml":    opsFilesIaasGcpAddSubnetworkForInternalLoadBalancerYml,
	"ops-files/iaas/gcp/cloud-config/load-balancer-target-pools.yml":      opsFilesIaasGcpCloudConfigLoadBalancerTargetPoolsYml,
	"ops-files/iaas/gcp/cloud-config/remove-service-account-master.yml":   opsFilesIaasGcpCloudConfigRemoveServiceAccountMasterYml,
	"ops-files/iaas/gcp/cloud-config/remove-service-account-worker.yml":   opsFilesIaasGcpCloudConfigRemoveServiceAccountWorkerYml,
	"ops-files/iaas/gcp/cloud-provider.yml":                               opsFilesIaasGcpCloudProviderYml,
	"ops-files/iaas/openstack/cloud-provider.yml":                         opsFilesIaasOpenstackCloudProviderYml,
	"ops-files/iaas/openstack/master-static-ip.yml":                       opsFilesIaasOpenstackMasterStaticIpYml,
	"ops-files/iaas/virtualbox/bosh-lite.yml":                             opsFilesIaasVirtualboxBoshLiteYml,
	"ops-files/iaas/vsphere/cloud-provider.yml":                           opsFilesIaasVsphereCloudProviderYml,
	"ops-files/iaas/vsphere/master-static-ip.yml":                         opsFilesIaasVsphereMasterStaticIpYml,
	"ops-files/iaas/vsphere/set-working-dir-no-rp.yml":                    opsFilesIaasVsphereSetWorkingDirNoRpYml,
	"ops-files/iaas/vsphere/use-vm-extensions.yml":                        opsFilesIaasVsphereUseVmExtensionsYml,
	"ops-files/kubo-local-release.yml":                                    opsFilesKuboLocalReleaseYml,
	"ops-files/misc/bootstrap.yml":                                        opsFilesMiscBootstrapYml,
	"ops-files/misc/dev.yml":                                              opsFilesMiscDevYml,
	"ops-files/misc/first-time-deploy.yml":                                opsFilesMiscFirstTimeDeployYml,
	"ops-files/misc/local-config-server.yml":                              opsFilesMiscLocalConfigServerYml,
	"ops-files/misc/scale-to-one-az.yml":                                  opsFilesMiscScaleToOneAzYml,
	"ops-files/misc/single-master.yml":                                    opsFilesMiscSingleMasterYml,
	"ops-files/misc/small-vm.yml":                                         opsFilesMiscSmallVmYml,
	"ops-files/non-precompiled-releases.yml":                              opsFilesNonPrecompiledReleasesYml,
	"ops-files/rename.yml":                                                opsFilesRenameYml,
	"ops-files/set-certificate-duration.yml":                              opsFilesSetCertificateDurationYml,
	"ops-files/use-coredns.yml":                                           opsFilesUseCorednsYml,
	"ops-files/use-runtime-config-bosh-dns.yml":                           opsFilesUseRuntimeConfigBoshDnsYml,
	"ops-files/use-vm-extensions.yml":                                     opsFilesUseVmExtensionsYml,
	"ops-files/vm-types.yml":                                              opsFilesVmTypesYml,
	"ops-files/worker_count.yml":                                          opsFilesWorker_countYml,
	"ops-files/aws-overrides.yml":                                         opsFilesAwsOverridesYml,
	"ops-files/azure-overrides.yml":                                       opsFilesAzureOverridesYml,
	"ops-files/custom-docker-config.yml":                                  opsFilesCustomDockerConfigYml,
	"ops-files/drain-cluster-errand.yml":                                  opsFilesDrainClusterErrandYml,
	"ops-files/eviction-hard-imagefs-inodes-spec.yml":                     opsFilesEvictionHardImagefsInodesSpecYml,
	"ops-files/eviction-hard-imagefs-spec.yml":                            opsFilesEvictionHardImagefsSpecYml,
	"ops-files/eviction-hard-memory-spec.yml":                             opsFilesEvictionHardMemorySpecYml,
	"ops-files/eviction-hard-nodefs-inodes-spec.yml":                      opsFilesEvictionHardNodefsInodesSpecYml,
	"ops-files/eviction-hard-nodefs-spec.yml":                             opsFilesEvictionHardNodefsSpecYml,
	"ops-files/gcp-overrides.yml":                                         opsFilesGcpOverridesYml,
	"ops-files/generate-2018-cas.yml":                                     opsFilesGenerate2018CasYml,
	"ops-files/generate-2018-certificates.yml":                            opsFilesGenerate2018CertificatesYml,
	"ops-files/modify-audit-log.yml":                                      opsFilesModifyAuditLogYml,
	"ops-files/pks-master-aliases.yml":                                    opsFilesPksMasterAliasesYml,
	"ops-files/set-first-ip.yml":                                          opsFilesSetFirstIpYml,
	"ops-files/syslog.yml":                                                opsFilesSyslogYml,
	"ops-files/syslog_and_routesync.yml":                                  opsFilesSyslog_and_routesyncYml,
	"ops-files/system-reserved-cpu-spec.yml":                              opsFilesSystemReservedCpuSpecYml,
	"ops-files/system-reserved-ephemeral-storage-spec.yml":                opsFilesSystemReservedEphemeralStorageSpecYml,
	"ops-files/system-reserved-memory-spec.yml":                           opsFilesSystemReservedMemorySpecYml,
	"ops-files/update-overrides.yml":                                      opsFilesUpdateOverridesYml,
	"ops-files/update-trust-lists.yml":                                    opsFilesUpdateTrustListsYml,
	"ops-files/update-worker-overrides.yml":                               opsFilesUpdateWorkerOverridesYml,
	"ops-files/vsphere-enable-disk-uuid.yml":                              opsFilesVsphereEnableDiskUuidYml,
	"ops-files/vsphere-overrides.yml":                                     opsFilesVsphereOverridesYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"cfcr.yml":  &bintree{cfcrYml, map[string]*bintree{}},
	"cloud-config": &bintree{nil, map[string]*bintree{
		"iaas": &bintree{nil, map[string]*bintree{
			"aws": &bintree{nil, map[string]*bintree{
				"use-vm-extensions.yml": &bintree{cloudConfigIaasAwsUseVmExtensionsYml, map[string]*bintree{}},
			}},
			"azure": &bintree{nil, map[string]*bintree{
				"use-vm-extensions.yml": &bintree{cloudConfigIaasAzureUseVmExtensionsYml, map[string]*bintree{}},
			}},
			"gcp": &bintree{nil, map[string]*bintree{
				"use-vm-extensions.yml": &bintree{cloudConfigIaasGcpUseVmExtensionsYml, map[string]*bintree{}},
			}},
			"vsphere": &bintree{nil, map[string]*bintree{
				"use-vm-extensions.yml": &bintree{cloudConfigIaasVsphereUseVmExtensionsYml, map[string]*bintree{}},
			}},
		}},
	}},
	"ops-files": &bintree{nil, map[string]*bintree{
		"add-hostname-to-master-certificate.yml": &bintree{opsFilesAddHostnameToMasterCertificateYml, map[string]*bintree{}},
		"add-oidc-endpoint.yml":                  &bintree{opsFilesAddOidcEndpointYml, map[string]*bintree{}},
		"add-proxy.yml":                          &bintree{opsFilesAddProxyYml, map[string]*bintree{}},
		"add-vm-extensions-to-master.yml":        &bintree{opsFilesAddVmExtensionsToMasterYml, map[string]*bintree{}},
		"addons-spec.yml":                        &bintree{opsFilesAddonsSpecYml, map[string]*bintree{}},
		"allow-privileged-containers.yml":        &bintree{opsFilesAllowPrivilegedContainersYml, map[string]*bintree{}},
		"aws-overrides.yml":                      &bintree{opsFilesAwsOverridesYml, map[string]*bintree{}},
		"azure-overrides.yml":                    &bintree{opsFilesAzureOverridesYml, map[string]*bintree{}},
		"change-cidrs.yml":                       &bintree{opsFilesChangeCidrsYml, map[string]*bintree{}},
		"change-etcd-metrics-url.yml":            &bintree{opsFilesChangeEtcdMetricsUrlYml, map[string]*bintree{}},
		"custom-docker-config.yml":               &bintree{opsFilesCustomDockerConfigYml, map[string]*bintree{}},
		"disable-anonymous-auth.yml":             &bintree{opsFilesDisableAnonymousAuthYml, map[string]*bintree{}},
		"drain-cluster-errand.yml":               &bintree{opsFilesDrainClusterErrandYml, map[string]*bintree{}},
		"enable-bbr.yml":                         &bintree{opsFilesEnableBbrYml, map[string]*bintree{}},
		"enable-denyescalatingexec.yml":          &bintree{opsFilesEnableDenyescalatingexecYml, map[string]*bintree{}},
		"enable-encryption-config.yml":           &bintree{opsFilesEnableEncryptionConfigYml, map[string]*bintree{}},
		"enable-nfs.yml":                         &bintree{opsFilesEnableNfsYml, map[string]*bintree{}},
		"enable-podsecuritypolicy.yml":           &bintree{opsFilesEnablePodsecuritypolicyYml, map[string]*bintree{}},
		"enable-securitycontextdeny.yml":         &bintree{opsFilesEnableSecuritycontextdenyYml, map[string]*bintree{}},
		"eviction-hard-imagefs-inodes-spec.yml":  &bintree{opsFilesEvictionHardImagefsInodesSpecYml, map[string]*bintree{}},
		"eviction-hard-imagefs-spec.yml":         &bintree{opsFilesEvictionHardImagefsSpecYml, map[string]*bintree{}},
		"eviction-hard-memory-spec.yml":          &bintree{opsFilesEvictionHardMemorySpecYml, map[string]*bintree{}},
		"eviction-hard-nodefs-inodes-spec.yml":   &bintree{opsFilesEvictionHardNodefsInodesSpecYml, map[string]*bintree{}},
		"eviction-hard-nodefs-spec.yml":          &bintree{opsFilesEvictionHardNodefsSpecYml, map[string]*bintree{}},
		"example-vars-files": &bintree{nil, map[string]*bintree{
			"iaas": &bintree{nil, map[string]*bintree{
				"azure": &bintree{nil, map[string]*bintree{
					"cloud-provider.yml": &bintree{opsFilesExampleVarsFilesIaasAzureCloudProviderYml, map[string]*bintree{}},
				}},
				"gcp": &bintree{nil, map[string]*bintree{
					"cloud-provider.yml": &bintree{opsFilesExampleVarsFilesIaasGcpCloudProviderYml, map[string]*bintree{}},
				}},
				"openstack": &bintree{nil, map[string]*bintree{
					"cloud-provider.yml": &bintree{opsFilesExampleVarsFilesIaasOpenstackCloudProviderYml, map[string]*bintree{}},
				}},
				"vsphere": &bintree{nil, map[string]*bintree{
					"cloud-provider.yml":        &bintree{opsFilesExampleVarsFilesIaasVsphereCloudProviderYml, map[string]*bintree{}},
					"set-working-dir-no-rp.yml": &bintree{opsFilesExampleVarsFilesIaasVsphereSetWorkingDirNoRpYml, map[string]*bintree{}},
				}},
			}},
			"misc": &bintree{nil, map[string]*bintree{
				"bootstrap.yml": &bintree{opsFilesExampleVarsFilesMiscBootstrapYml, map[string]*bintree{}},
				"oidc.yml":      &bintree{opsFilesExampleVarsFilesMiscOidcYml, map[string]*bintree{}},
			}},
			"new-cidrs.yml":    &bintree{opsFilesExampleVarsFilesNewCidrsYml, map[string]*bintree{}},
			"system-specs.yml": &bintree{opsFilesExampleVarsFilesSystemSpecsYml, map[string]*bintree{}},
		}},
		"gcp-overrides.yml":              &bintree{opsFilesGcpOverridesYml, map[string]*bintree{}},
		"generate-2018-cas.yml":          &bintree{opsFilesGenerate2018CasYml, map[string]*bintree{}},
		"generate-2018-certificates.yml": &bintree{opsFilesGenerate2018CertificatesYml, map[string]*bintree{}},
		"iaas": &bintree{nil, map[string]*bintree{
			"aws": &bintree{nil, map[string]*bintree{
				"add-master-credentials.yml": &bintree{opsFilesIaasAwsAddMasterCredentialsYml, map[string]*bintree{}},
				"add-worker-credentials.yml": &bintree{opsFilesIaasAwsAddWorkerCredentialsYml, map[string]*bintree{}},
				"cloud-config": &bintree{nil, map[string]*bintree{
					"lb.yml": &bintree{opsFilesIaasAwsCloudConfigLbYml, map[string]*bintree{}},
				}},
				"cloud-provider.yml": &bintree{opsFilesIaasAwsCloudProviderYml, map[string]*bintree{}},
				"lb.yml":             &bintree{opsFilesIaasAwsLbYml, map[string]*bintree{}},
			}},
			"azure": &bintree{nil, map[string]*bintree{
				"cloud-config": &bintree{nil, map[string]*bintree{
					"lb.yml": &bintree{opsFilesIaasAzureCloudConfigLbYml, map[string]*bintree{}},
				}},
				"cloud-provider.yml":  &bintree{opsFilesIaasAzureCloudProviderYml, map[string]*bintree{}},
				"subnet.yml":          &bintree{opsFilesIaasAzureSubnetYml, map[string]*bintree{}},
				"use-cifs.yml":        &bintree{opsFilesIaasAzureUseCifsYml, map[string]*bintree{}},
				"use-credentials.yml": &bintree{opsFilesIaasAzureUseCredentialsYml, map[string]*bintree{}},
			}},
			"gcp": &bintree{nil, map[string]*bintree{
				"add-service-key-master.yml":                    &bintree{opsFilesIaasGcpAddServiceKeyMasterYml, map[string]*bintree{}},
				"add-service-key-worker.yml":                    &bintree{opsFilesIaasGcpAddServiceKeyWorkerYml, map[string]*bintree{}},
				"add-subnetwork-for-internal-load-balancer.yml": &bintree{opsFilesIaasGcpAddSubnetworkForInternalLoadBalancerYml, map[string]*bintree{}},
				"cloud-config": &bintree{nil, map[string]*bintree{
					"load-balancer-target-pools.yml":    &bintree{opsFilesIaasGcpCloudConfigLoadBalancerTargetPoolsYml, map[string]*bintree{}},
					"remove-service-account-master.yml": &bintree{opsFilesIaasGcpCloudConfigRemoveServiceAccountMasterYml, map[string]*bintree{}},
					"remove-service-account-worker.yml": &bintree{opsFilesIaasGcpCloudConfigRemoveServiceAccountWorkerYml, map[string]*bintree{}},
				}},
				"cloud-provider.yml": &bintree{opsFilesIaasGcpCloudProviderYml, map[string]*bintree{}},
			}},
			"openstack": &bintree{nil, map[string]*bintree{
				"cloud-provider.yml":   &bintree{opsFilesIaasOpenstackCloudProviderYml, map[string]*bintree{}},
				"master-static-ip.yml": &bintree{opsFilesIaasOpenstackMasterStaticIpYml, map[string]*bintree{}},
			}},
			"virtualbox": &bintree{nil, map[string]*bintree{
				"bosh-lite.yml": &bintree{opsFilesIaasVirtualboxBoshLiteYml, map[string]*bintree{}},
			}},
			"vsphere": &bintree{nil, map[string]*bintree{
				"cloud-provider.yml":        &bintree{opsFilesIaasVsphereCloudProviderYml, map[string]*bintree{}},
				"master-static-ip.yml":      &bintree{opsFilesIaasVsphereMasterStaticIpYml, map[string]*bintree{}},
				"set-working-dir-no-rp.yml": &bintree{opsFilesIaasVsphereSetWorkingDirNoRpYml, map[string]*bintree{}},
				"use-vm-extensions.yml":     &bintree{opsFilesIaasVsphereUseVmExtensionsYml, map[string]*bintree{}},
			}},
		}},
		"kubo-local-release.yml": &bintree{opsFilesKuboLocalReleaseYml, map[string]*bintree{}},
		"misc": &bintree{nil, map[string]*bintree{
			"bootstrap.yml":           &bintree{opsFilesMiscBootstrapYml, map[string]*bintree{}},
			"dev.yml":                 &bintree{opsFilesMiscDevYml, map[string]*bintree{}},
			"first-time-deploy.yml":   &bintree{opsFilesMiscFirstTimeDeployYml, map[string]*bintree{}},
			"local-config-server.yml": &bintree{opsFilesMiscLocalConfigServerYml, map[string]*bintree{}},
			"scale-to-one-az.yml":     &bintree{opsFilesMiscScaleToOneAzYml, map[string]*bintree{}},
			"single-master.yml":       &bintree{opsFilesMiscSingleMasterYml, map[string]*bintree{}},
			"small-vm.yml":            &bintree{opsFilesMiscSmallVmYml, map[string]*bintree{}},
		}},
		"modify-audit-log.yml":                       &bintree{opsFilesModifyAuditLogYml, map[string]*bintree{}},
		"non-precompiled-releases.yml":               &bintree{opsFilesNonPrecompiledReleasesYml, map[string]*bintree{}},
		"pks-master-aliases.yml":                     &bintree{opsFilesPksMasterAliasesYml, map[string]*bintree{}},
		"rename.yml":                                 &bintree{opsFilesRenameYml, map[string]*bintree{}},
		"set-certificate-duration.yml":               &bintree{opsFilesSetCertificateDurationYml, map[string]*bintree{}},
		"set-first-ip.yml":                           &bintree{opsFilesSetFirstIpYml, map[string]*bintree{}},
		"syslog.yml":                                 &bintree{opsFilesSyslogYml, map[string]*bintree{}},
		"syslog_and_routesync.yml":                   &bintree{opsFilesSyslog_and_routesyncYml, map[string]*bintree{}},
		"system-reserved-cpu-spec.yml":               &bintree{opsFilesSystemReservedCpuSpecYml, map[string]*bintree{}},
		"system-reserved-ephemeral-storage-spec.yml": &bintree{opsFilesSystemReservedEphemeralStorageSpecYml, map[string]*bintree{}},
		"system-reserved-memory-spec.yml":            &bintree{opsFilesSystemReservedMemorySpecYml, map[string]*bintree{}},
		"update-overrides.yml":                       &bintree{opsFilesUpdateOverridesYml, map[string]*bintree{}},
		"update-trust-lists.yml":                     &bintree{opsFilesUpdateTrustListsYml, map[string]*bintree{}},
		"update-worker-overrides.yml":                &bintree{opsFilesUpdateWorkerOverridesYml, map[string]*bintree{}},
		"use-coredns.yml":                            &bintree{opsFilesUseCorednsYml, map[string]*bintree{}},
		"use-runtime-config-bosh-dns.yml":            &bintree{opsFilesUseRuntimeConfigBoshDnsYml, map[string]*bintree{}},
		"use-vm-extensions.yml":                      &bintree{opsFilesUseVmExtensionsYml, map[string]*bintree{}},
		"vm-types.yml":                               &bintree{opsFilesVmTypesYml, map[string]*bintree{}},
		"vsphere-enable-disk-uuid.yml":               &bintree{opsFilesVsphereEnableDiskUuidYml, map[string]*bintree{}},
		"vsphere-overrides.yml":                      &bintree{opsFilesVsphereOverridesYml, map[string]*bintree{}},
		"worker_count.yml":                           &bintree{opsFilesWorker_countYml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
